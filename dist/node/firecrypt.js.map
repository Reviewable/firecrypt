{"version":3,"file":"firecrypt.js","sources":["../../src/crypto.js","../../src/FireCryptSnapshot.js","../../src/FireCryptQuery.js","../../src/FireCryptOnDisconnect.js","../../src/FireCryptReference.js","../../src/firecrypt.js"],"sourcesContent":["export default class Crypto {\n  constructor(options, spec) {\n    this._spec = this._cleanSpecification(spec);\n    this._encryptString = this._throwNotSetUpError;\n    this._decryptString = this._throwNotSetUpError;\n\n    this._patternRegexes = {};\n\n    if (typeof LRUCache === 'function') {\n      this._encryptionCache = new LRUCache({\n        max: options.encryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n      this._decryptionCache = new LRUCache({\n        max: options.decryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n    }\n  }\n\n  _cleanSpecification(def, path) {\n    const keys = Object.keys(def);\n    for (const key of keys) {\n      if (key === '.encrypt') {\n        const encryptKeys = Object.keys(def[key]);\n        for (const encryptKey of encryptKeys) {\n          if (encryptKey !== 'key' && encryptKey !== 'value' && encryptKey !== 'few') {\n            throw new Error(`Illegal .encrypt subkey: ${encryptKey}`);\n          }\n        }\n      } else {\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x1f\\x7f\\x91\\x92.#[\\]/]/.test(key) || /[$]/.test(key.slice(1))) {\n          throw new Error(`Illegal character in specification key: ${key}`);\n        }\n        this._cleanSpecification(def[key], (path || '') + '/' + key);\n      }\n      switch (key.charAt(0)) {\n        case '$':\n          if (key === '$') break;\n          if (def.$) throw new Error('Multiple wildcard keys in specification at ' + path);\n          def.$ = def[key];\n          delete def[key];\n          break;\n        case '.':\n          if (key !== '.encrypt') throw new Error('Unknown directive at ' + path + ': ' + key);\n          break;\n      }\n    }\n    return def;\n  }\n\n  _throwNotSetUpError() {\n    const e = new Error('Encryption not set up');\n    e.firecrypt = 'NO_KEY';\n    throw e;\n  }\n\n  _computeCacheItemSize(value, key) {\n    return key.length + (typeof value === 'string' ? value.length : 4);\n  }\n\n  setStringEncryptionFunctions(encryptString, decryptString) {\n    this._encryptString = encryptString;\n    this._decryptString = decryptString;\n  }\n\n  encryptPath(path, def) {\n    def = def || this._spec.rules;\n    path = path.slice();\n    for (let i = 0; i < path.length; i++) {\n      def = def[path[i]] || def.$;\n      if (!def) break;\n      if (def['.encrypt'] && def['.encrypt'].key) {\n        path[i] = this.encrypt(path[i], 'string', def['.encrypt'].key);\n      }\n    }\n    return path;\n  }\n\n  encryptRef(ref, path) {\n    const encryptedPath = this.encryptPath(path || this.refToPath(ref));\n    return encryptedPath.length ? ref.root.child(encryptedPath.join('/')) : ref.root;\n  }\n\n  decryptRef(ref) {\n    const path = this.refToPath(ref, true);\n    let changed = false;\n    for (let i = 0; i < path.length; i++) {\n      const decryptedPathSegment = this.decrypt(path[i]);\n      if (decryptedPathSegment !== path[i]) {\n        path[i] = decryptedPathSegment;\n        changed = true;\n      }\n    }\n    return changed ? ref.root.child(path.join('/')) : ref;\n  }\n\n  specForPath(path, def) {\n    def = def || this._spec.rules;\n    for (let i = 0; def && i < path.length; i++) {\n      def = def[path[i]] || def.$;\n    }\n    return def;\n  }\n\n  transformValue(path, value, transformType) {\n    if (transformType !== 'encrypt' && transformType !== 'decrypt') {\n      throw new Error(\n        `Transform type must be either \"encrypt\" or \"decrypt\", but got \"${transformType}\".`\n      );\n    }\n    const transform =\n      transformType === 'encrypt' ? this.encrypt.bind(this) : this.decrypt.bind(this);\n    return this.transformTree(value, this.specForPath(path), transform);\n  }\n\n  transformTree(value, def, transform) {\n    if (!def) return value;\n    const type = this.getType(value);\n    let i;\n    if (/^(string|number|boolean)$/.test(type)) {\n      if (def['.encrypt'] && def['.encrypt'].value) {\n        value = transform(value, type, def['.encrypt'].value);\n      }\n    } else if (type === 'object' && value !== null) {\n      const transformedValue = {};\n      for (let key in value) {\n        if (!value.hasOwnProperty(key)) continue;\n        const subValue = value[key];\n        let subDef;\n        if (key.indexOf('/') >= 0) {  // for deep update keys\n          const keyParts = key.split('/');\n          subDef = def;\n          for (i = 0; i < keyParts.length; i++) {\n            if (transform === this.decrypt) {\n              keyParts[i] = this.decrypt(keyParts[i]);\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n            } else {\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n              if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n                keyParts[i] = transform(keyParts[i], 'string', subDef['.encrypt'].key);\n              }\n            }\n          }\n          key = keyParts.join('/');\n        } else if (transform === this.decrypt) {\n          key = this.decrypt(key);\n          subDef = def[key] || def.$;\n        } else {\n          subDef = def[key] || def.$;\n          if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n            key = transform(key, 'string', subDef['.encrypt'].key);\n          }\n        }\n        transformedValue[key] = this.transformTree(subValue, subDef, transform);\n      }\n      value = transformedValue;\n    } else if (type === 'array') {\n      if (!def.$) return value;\n      for (i = 0; i < value.length; i++) value[i] = this.transformTree(value[i], def.$, transform);\n    }\n    return value;\n  }\n\n  refToPath(ref, encrypted) {\n    const root = ref.root;\n    if (ref === root) return [];\n    const pathStr = decodeURIComponent(ref.toString().slice(root.toString().length));\n    if (!encrypted && pathStr && pathStr.charAt(0) !== '.' &&\n        /[\\x00-\\x1f\\x7f\\x91\\x92.#$[\\]]/.test(pathStr)) {  // eslint-disable-line no-control-regex\n      throw new Error(`Path contains invalid characters: ${pathStr}`);\n    }\n    return pathStr.split('/');\n  }\n\n  encrypt(value, type, pattern) {\n    let cacheKey;\n    if (this._encryptionCache) {\n      cacheKey = type.charAt(0) + pattern + '\\x91' + value;\n      if (this._encryptionCache.has(cacheKey)) return this._encryptionCache.get(cacheKey);\n    }\n    let result;\n    if (pattern === '#') {\n      result = this.encryptValue(value, type);\n    } else {\n      if (type !== 'string') {\n        throw new Error('Can\\'t encrypt a ' + type + ' using pattern [' + pattern + ']');\n      }\n      const match = value.match(this.compilePattern(pattern));\n      if (!match) {\n        throw new Error(\n          'Can\\'t encrypt as value doesn\\'t match pattern [' + pattern + ']: ' + value);\n      }\n      let i = 0;\n      result = pattern.replace(/[#.]/g, placeholder => {\n        let part = match[++i];\n        if (placeholder === '#') part = this.encryptValue(part, 'string');\n        return part;\n      });\n    }\n    if (this._encryptionCache) this._encryptionCache.set(cacheKey, result);\n    return result;\n  }\n\n  encryptValue(value, type) {\n    if (!/^(string|number|boolean)$/.test(type)) throw new Error('Can\\'t encrypt a ' + type);\n    switch (type) {\n      case 'number': value = '' + value; break;\n      case 'boolean': value = value ? 't' : 'f'; break;\n    }\n    return '\\x91' + type.charAt(0).toUpperCase() + this._encryptString(value) + '\\x92';\n  }\n\n  decrypt(value) {\n    if (this._decryptionCache && this._decryptionCache.has(value)) {\n      return this._decryptionCache.get(value);\n    }\n    if (!/\\x91/.test(value)) return value;\n    let result;\n    const match = value.match(/^\\x91(.)([^\\x92]*)\\x92$/);\n    if (match) {\n      const decryptedString = this._decryptString(match[2]);\n      switch (match[1]) {\n        case 'S':\n          result = decryptedString;\n          break;\n        case 'N':\n          result = Number(decryptedString);\n          // Check for NaN, since it's the only value where x !== x.\n          // eslint-disable-next-line no-self-compare\n          if (result !== result) throw new Error(`Invalid encrypted number: ${decryptedString}`);\n          break;\n        case 'B':\n          if (decryptedString === 't') result = true;\n          else if (decryptedString === 'f') result = false;\n          else throw new Error('Invalid encrypted boolean: ' + decryptedString);\n          break;\n        default:\n          throw new Error('Invalid encrypted value type code: ' + match[1]);\n      }\n    } else {\n      result = value.replace(/\\x91(.)([^\\x92]*)\\x92/g, (ignored, typeCode, encryptedString) => {\n        if (typeCode !== 'S') throw new Error('Invalid multi-segment encrypted value: ' + typeCode);\n        return this._decryptString(encryptedString);\n      });\n    }\n    if (this._decryptionCache) this._decryptionCache.set(value, result);\n    return result;\n  }\n\n  getType(value) {\n    if (Array.isArray(value)) return 'array';\n    let type = typeof value;\n    if (type === 'object') {\n      if (value instanceof String) type = 'string';\n      else if (value instanceof Number) type = 'number';\n      else if (value instanceof Boolean) type = 'boolean';\n    }\n    return type;\n  }\n\n  compilePattern(pattern) {\n    let regex = this._patternRegexes[pattern];\n    if (!regex) {\n      regex = this._patternRegexes[pattern] = new RegExp('^' + pattern\n        .replace(/\\./g, '#')\n        .replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&')  // escape regex chars\n        .replace(/#/g, '(.*?)') + '$');\n    }\n    return regex;\n  }\n}\n","import FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptSnapshot {\n  constructor(snap, crypto) {\n    this._ref = crypto.decryptRef(snap.ref);\n    this._path = crypto.refToPath(this._ref);\n    this._snap = snap;\n    this._crypto = crypto;\n  }\n\n  get key() {\n    return this._ref.key;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  val() {\n    return this._crypto.transformValue(this._path, this._snap.val(), 'decrypt');\n  }\n\n  child(childPath) {\n    return new FireCryptSnapshot(this._snap.child(childPath), this._crypto);\n  }\n\n  forEach(action) {\n    return this._snap.forEach((childSnap) => {\n      return action(new FireCryptSnapshot(childSnap), this._crypto);\n    });\n  }\n\n  exists() {\n    return this._snap.exists.apply(this._snap, arguments);\n  }\n\n  hasChild(childPath) {\n    childPath = this._crypto.encryptPath(\n      childPath.split('/'), this._crypto.specForPath(this._path)).join('/');\n    return this._snap.hasChild(childPath);\n  }\n\n  hasChildren() {\n    return this._snap.hasChildren.apply(this._snap, arguments);\n  }\n\n  numChildren() {\n    return this._snap.numChildren.apply(this._snap, arguments);\n  }\n\n  toJSON() {\n    const json = this._snap.toJSON.apply(this._snap, arguments);\n    return this._crypto.transformValue(this._path, json, 'decrypt');\n  }\n}\n","import FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptQuery {\n  constructor(query, order, originalRef, crypto) {\n    this._query = query;\n    this._order = order || {};\n    this._originalRef = originalRef || query;\n    this._crypto = crypto;\n  }\n\n  _wrapQueryCallback(callback) {\n    if (!callback || callback.firecryptCallback) return;\n    const self = this;\n    const wrappedCallback = function(snap, previousChildKey) {\n      return callback.call(  // eslint-disable-next-line no-invalid-this\n        this, new FireCryptSnapshot(snap, self._crypto), previousChildKey, self._crypto);\n    };\n    wrappedCallback.firecryptCallback = wrappedCallback;\n    callback.firecryptCallback = wrappedCallback;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._crypto.decryptRef(this._query.ref), this._crypto);\n  }\n\n  on(eventType, callback, cancelCallback, context) {\n    this._wrapQueryCallback(callback);\n    return this._originalRef.on.call(\n      this._query, eventType, callback.firecryptCallback, cancelCallback, context);\n  }\n\n  off(eventType, callback, context) {\n    if (callback && callback.firecryptCallback) callback = callback.firecryptCallback;\n    return this._originalRef.off.call(this._query, eventType, callback, context);\n  }\n\n  once(eventType, successCallback, failureCallback, context) {\n    this._wrapQueryCallback(successCallback);\n    return this._originalRef.once.call(\n      this._query, eventType, successCallback && successCallback.firecryptCallback, failureCallback,\n      context\n    ).then((snap) => {\n      return new FireCryptSnapshot(snap, this._crypto);\n    });\n  }\n\n  orderByChild(key) {\n    return this._orderBy('orderByChild', 'child', key);\n  }\n\n  orderByKey() {\n    return this._orderBy('orderByKey', 'key');\n  }\n\n  orderByValue() {\n    return this._orderBy('orderByValue', 'value');\n  }\n\n  startAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('startAt', arguments);\n  }\n\n  endAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('endAt', arguments);\n  }\n\n  equalTo(value, key) {\n    if (this._order[this._order.by + 'Encrypted']) {\n      value = this._crypto.encrypt(\n        value, this._crypto.getType(value), this._order[this._order.by + 'Encrypted']);\n    }\n    if (key !== undefined && this._order.keyEncrypted) {\n      key = this._crypto.encrypt(key, 'string', this._order.keyEncrypted);\n    }\n    return new FireCryptQuery(\n      this._originalRef.equalTo.call(this._query, value, key), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  limitToFirst() {\n    return this._delegate('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._delegate('limitToLast', arguments);\n  }\n\n  _delegate(methodName, args) {\n    return new FireCryptQuery(\n      this._originalRef[methodName].apply(this._query, args), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  _checkCanSort(hasExtraKey) {\n    const orderedAndEncrypted = this._order.by === 'key' ?\n      this._order.keyEncrypted :\n      this._order.valueEncrypted || hasExtraKey && this._order.keyEncrypted;\n    if (orderedAndEncrypted) throw new Error('Encrypted items cannot be ordered');\n  }\n\n  _orderBy(methodName, by, childKey) {\n    const def = this._crypto.specForPath(this._crypto.refToPath(this.ref));\n    const order = {by};\n\n    let encryptedChildKey;\n    if (def) {\n      const childPath = childKey && childKey.split('/');\n      for (const subKey in def) {\n        if (!def.hasOwnProperty(subKey)) continue;\n        const subDef = def[subKey];\n        if (subDef['.encrypt']) {\n          if (subDef['.encrypt'].key) order.keyEncrypted = subDef['.encrypt'].key;\n          if (subDef['.encrypt'].value) order.valueEncrypted = subDef['.encrypt'].value;\n        }\n        if (childKey) {\n          const childDef = this._crypto.specForPath(childPath, subDef);\n          if (childDef && childDef['.encrypt'] && childDef['.encrypt'].value) {\n            order.childEncrypted = childDef['.encrypt'].value;\n          }\n          const encryptedChildKeyCandidate = this._crypto.encryptPath(childPath, subDef).join('/');\n          if (encryptedChildKey && encryptedChildKeyCandidate !== encryptedChildKey) {\n            throw new Error(\n              'Incompatible encryption specifications for orderByChild(\"' + childKey + '\")');\n          }\n          encryptedChildKey = encryptedChildKeyCandidate;\n        }\n      }\n    }\n    if (childKey) {\n      return new FireCryptQuery(\n        this._originalRef[methodName].call(this._query, encryptedChildKey || childKey), order,\n        this._originalRef, this._crypto\n      );\n    }\n    return new FireCryptQuery(\n      this._originalRef[methodName].call(this._query), order, this._originalRef, this._crypto\n    );\n  }\n}\n","export default class FireCryptOnDisconnect {\n  constructor(path, originalOnDisconnect, crypto) {\n    this._path = path;\n    this._crypto = crypto;\n    this._originalOnDisconnect = originalOnDisconnect;\n  }\n\n  _interceptOnDisconnectWrite(methodName, originalArguments, argIndex) {\n    const self = this;\n\n    this[methodName] = function() {\n      const args = Array.prototype.slice.call(originalArguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = self._crypto.transformValue(self._path, args[argIndex], 'encrypt');\n      }\n\n      return self._originalOnDisconnect[methodName].apply(self._originalOnDisconnect, args);\n    };\n  }\n\n  set() {\n    return this._interceptOnDisconnectWrite('set', arguments, 0);\n  }\n\n  update() {\n    return this._interceptOnDisconnectWrite('update', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptOnDisconnectWrite('remove', arguments);\n  }\n\n  cancel() {\n    return this._interceptOnDisconnectWrite('cancel', arguments);\n  }\n}\n","import FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nlet childrenKeysFromLib;\ntry {\n  childrenKeysFromLib = require('firebase-childrenkeys');\n} catch (e) {\n  // Library is optional, so ignore any errors from failure to load it.\n}\n\nexport default class FireCryptReference {\n  constructor(ref, crypto) {\n    this._ref = ref;\n    this._crypto = crypto;\n  }\n\n  _interceptQuery(methodName, originalArguments) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const query = new FireCryptQuery(encryptedRef, {}, this._ref, this._crypto);\n    return query[methodName].apply(query, originalArguments);\n  }\n\n  _interceptWrite(methodName, originalArguments, argIndex) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n\n    const args = Array.prototype.slice.call(originalArguments);\n    if (argIndex >= 0 && argIndex < args.length) {\n      const path = this._crypto.refToPath(this._ref);\n      args[argIndex] = this._crypto.transformValue(path, args[argIndex], 'encrypt');\n    }\n\n    return this._ref[methodName].apply(encryptedRef, args);\n  }\n\n  /**\n   * Returns a placeholder value for auto-populating the current timestamp (time since the Unix\n   * epoch, in milliseconds) as determined by the Firebase servers.\n   * @return {Object} A timestamp placeholder value.\n   */\n  static get SERVER_TIMESTAMP() {\n    return {\n      '.sv': 'timestamp'\n    };\n  }\n\n  /**\n   * Returns the last part of this reference's path. The key of a root reference is `null`.\n   * @return {string|null} The last part this reference's path.\n   */\n  get key() {\n    return this._ref.key;\n  }\n\n  /**\n   * Returns just the path component of the reference's URL.\n   * @return {string} The path component of the Firebase URL wrapped by this reference.\n   */\n  get path() {\n    return decodeURIComponent(this._ref.toString()).slice(this._ref.root.toString().length - 1);\n  }\n\n  /**\n   * Returns a FireCryptReference at the same location as this query or reference.\n   * @return {FireCryptReference|null} A FireCryptReference at the same location as this query or\n   *     reference.\n   */\n  get ref() {\n    if (this._ref.isEqual(this._ref.ref)) return this;\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference reference to the root of the database.\n   * @return {FireCryptReference} The root reference of the database.\n   */\n  get root() {\n    if (this._ref.isEqual(this._ref.root)) return this;\n    return new FireCryptReference(this._ref.root, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference to the parent location of this reference. The parent of a root\n   * reference is `null`.\n   * @return {FireCryptReference|null} The parent location of this reference.\n   */\n  get parent() {\n    if (this._ref.parent === null) return null;\n    return new FireCryptReference(this._ref.parent, this._crypto);\n  }\n\n  /**\n   * Returns the FireCrypt instance associated with this reference.\n   * @return {FireCrypt} The FireCrypt instance associated with this reference.\n   */\n  get database() {\n    return this._ref.ref.database.firecrypt;\n  }\n\n  /**\n   * Creates a new FireCryptReference object on a child of this one.\n   * @param  {string} path The path to the desired child, relative to this reference.\n   * @return {FireCryptReference} The child reference.\n   */\n  child(path) {\n    return new FireCryptReference(this._ref.child(path), this._crypto);\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @return {Object} A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    return this._ref.toJSON();\n  }\n\n  /**\n   * Returns whether or not this FireCryptReference is equivalent to the provided\n   * FireCryptReference.\n   * @return {FireCryptReference} Another FireCryptReference instance against which to compare.\n   */\n  isEqual(otherRef) {\n    return this._ref.isEqual(otherRef._ref);\n  }\n\n  /**\n   * Stringifies the wrapped reference.\n   * @return {string} The Firebase URL wrapped by this FireCryptReference object.\n   */\n  toString() {\n    return decodeURIComponent(this._ref.toString());\n  }\n\n  push() {\n    const pushedRef = this.child(this._ref.push().key);\n\n    let promise;\n    if (typeof arguments[0] === 'undefined') {\n      // A bare pushed ref should also be thennable.\n      promise = Promise.resolve();\n    } else {\n      promise = pushedRef.set.apply(pushedRef, arguments);\n    }\n\n    pushedRef.then = promise.then.bind(promise);\n    pushedRef.catch = promise.catch.bind(promise);\n    if (promise.finally) pushedRef.finally = promise.finally.bind(promise);\n\n    return pushedRef;\n  }\n\n  set() {\n    return this._interceptWrite('set', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptWrite('remove', arguments);\n  }\n\n  update() {\n    return this._interceptWrite('update', arguments, 0);\n  }\n\n  childrenKeys() {\n    const originalMethod = this._ref.childrenKeys || childrenKeysFromLib;\n\n    if (typeof originalMethod !== 'function') {\n      throw new Error(\n        `childrenKeys() is not implemented. You must either provide a Firebase Database Reference\n        which implements childrenKeys() or npm install the firebase-children keys libary.`\n      );\n    }\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return originalMethod.apply(encryptedRef, [encryptedRef, ...arguments]).then((keys) => {\n      if (!keys.some((key) => /\\x91/.test(key))) {\n        return keys;\n      }\n      return keys.map(this._crypto.decrypt.bind(this._crypto));\n    });\n  }\n\n  onDisconnect() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return new FireCryptOnDisconnect(\n      encryptedRef, this._ref.onDisconnect.call(encryptedRef), this._crypto);\n  }\n\n  on() {\n    return this._interceptQuery('on', arguments);\n  }\n\n  off() {\n    return this._interceptQuery('off', arguments);\n  }\n\n  once() {\n    return this._interceptQuery('once', arguments);\n  }\n\n  orderByChild() {\n    return this._interceptQuery('orderByChild', arguments);\n  }\n\n  orderByKey() {\n    return this._interceptQuery('orderByKey', arguments);\n  }\n\n  orderByValue() {\n    return this._interceptQuery('orderByValue', arguments);\n  }\n\n  startAt() {\n    return this._interceptQuery('startAt', arguments);\n  }\n\n  endAt() {\n    return this._interceptQuery('endAt', arguments);\n  }\n\n  equalTo() {\n    return this._interceptQuery('equalTo', arguments);\n  }\n\n  limitToFirst() {\n    return this._interceptQuery('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._interceptQuery('limitToLast', arguments);\n  }\n\n  transaction() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const path = this._crypto.refToPath(this._ref);\n\n    const args = Array.prototype.slice.call(arguments);\n    const originalCompute = args[0];\n    args[0] = originalCompute && ((value) => {\n      value = this._crypto.transformValue(path, value, 'decrypt');\n      value = originalCompute(value);\n      value = this._crypto.transformValue(path, value, 'encrypt');\n      return value;\n    });\n    if (args.length > 1) {\n      const originalOnComplete = args[1];\n      args[1] = originalOnComplete && ((error, committed, snapshot) => {\n        return originalOnComplete(\n          error, committed, snapshot && new FireCryptSnapshot(snapshot, this._crypto));\n      });\n    }\n    return this._ref.transaction.apply(encryptedRef, args).then((result) => {\n      result.snapshot = result.snapshot && new FireCryptSnapshot(result.snapshot, this._crypto);\n      return result;\n    });\n  }\n}\n","export function patchFirebase() {\n  if (typeof require !== 'undefined') {\n    let numApisFound = 0;\n    try {\n      patchFirebaseDatabaseApi(require('firebase-admin'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    try {\n      patchFirebaseDatabaseApi(require('firebase'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    if (!numApisFound) throw new Error('No Firebase SDK detected.');\n  } else if (typeof firebase !== 'undefined') {  // eslint-disable-line no-negated-condition\n    /* globals firebase */\n    patchFirebaseDatabaseApi(firebase);\n  } else {\n    throw new Error('No Firebase SDK detected.');\n  }\n}\n\nfunction patchFirebaseDatabaseApi(fb) {\n  // We want to wrap all instances of the Firebase database() with FireCrypt.  These are always\n  // eventually instantiated via an App's database() function, so we'd like to override that.\n  // We issue a bogus initializeApp() call with no config and a unique app name to get at the App's\n  // prototype, and make sure not to instantiate any services on it (as that would fail).\n  const app = fb.initializeApp(undefined, 'firecrypt_init_patch');\n  const originalDatabase = app.constructor.prototype.database;\n  Object.defineProperty(app.constructor.prototype, 'database', {value() {\n    // The database() call caches databases by URL and can return the same instance on separate\n    // calls.  Ensure that there's a 1-to-1 correspondance between database instances and\n    // FireCrypt wrappers by associating a wrapper with its underlying database.\n    const db = originalDatabase.apply(this, arguments);\n    if (!db.firecrypt) {\n      // eslint-disable-next-line no-use-before-define\n      Object.defineProperty(db, 'firecrypt', {value: new FireCrypt(db)});\n    }\n    return db.firecrypt;\n  }});\n}\n\nif (typeof require !== 'undefined') {\n  if (typeof LRUCache === 'undefined') global.LRUCache = require('lru-cache');\n  if (typeof CryptoJS === 'undefined') global.CryptoJS = require('crypto-js/core');\n  require('crypto-js/enc-base64');\n  require('cryptojs-extension/build_node/siv');\n}\n\nCryptoJS.enc.Base64UrlSafe = {\n  stringify: CryptoJS.enc.Base64.stringify,\n  parse: CryptoJS.enc.Base64.parse,\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n};\n\nimport Crypto from './crypto';\nimport FireCryptReference from './FireCryptReference';\n\nclass FireCrypt {\n  constructor(db) {\n    const dbIsNonNullObject = typeof db === 'object' && db !== null;\n    if (!dbIsNonNullObject || typeof db.app !== 'object' || typeof db.ref !== 'function') {\n      throw new Error(\n        `Expected first argument passed to FireCrypt constructor to be a Firebase Database ` +\n        `instance, but got \"${db}\".`\n      );\n    }\n\n    this._db = db;\n    this._crypto = undefined;\n  }\n\n  _ensureEncryptionConfigured() {\n    if (typeof this._crypto === 'undefined') {\n      throw new Error('Encryption for this FireCrypt reference has not been configured yet.');\n    }\n  }\n\n  _setupAesSiv(key, checkValue) {\n    const siv = CryptoJS.SIV.create(CryptoJS.enc.Base64.parse(key));\n    const encryptString = (str) => {\n      return CryptoJS.enc.Base64UrlSafe.stringify(siv.encrypt(str));\n    };\n    const decryptString = (str) => {\n      const result = siv.decrypt(CryptoJS.enc.Base64UrlSafe.parse(str));\n      if (result === false) {\n        const e = new Error('Wrong decryption key');\n        e.firecrypt = 'WRONG_KEY';\n        throw e;\n      }\n      return CryptoJS.enc.Utf8.stringify(result);\n    };\n\n    this._crypto.setStringEncryptionFunctions(encryptString, decryptString);\n\n    if (checkValue) decryptString(checkValue);\n    return encryptString(CryptoJS.enc.Base64UrlSafe.stringify(CryptoJS.lib.WordArray.random(10)));\n  }\n\n  get app() {\n    return this._db.app;\n  }\n\n  configureEncryption(options = {}, specification = {}) {\n    if (typeof options !== 'object' || options === null) {\n      throw new Error(\n        `Expected second argument passed to configureEncryption() to be an object, but got ` +\n        `\"${options}\".`\n      );\n    } else if (typeof specification !== 'object' || specification === null) {\n      throw new Error(\n        `Expected third argument passed to configureEncryption() to be an object, but got ` +\n        `\"${specification}\".`\n      );\n    }\n\n    options.cacheSize = options.cacheSize || 5 * 1000 * 1000;\n    options.encryptionCacheSize = options.encryptionCacheSize || options.cacheSize;\n    options.decryptionCacheSize = options.decryptionCacheSize || options.cacheSize;\n\n    this._crypto = new Crypto(options, specification);\n\n    let result;\n\n    switch (options.algorithm) {\n      case 'aes-siv':\n        if (!options.key) throw new Error('You must specify a key to use AES encryption.');\n        result = this._setupAesSiv(options.key, options.keyCheckValue);\n        break;\n      case 'passthrough':\n        this._crypto.setStringEncryptionFunctions((str) => str, (str) => str);\n        break;\n      case 'none':\n        break;\n      default:\n        throw new Error('Unknown encryption algorithm \"' + options.algorithm + '\".');\n    }\n\n    // Make the encryption key check value available off of this FireCrypt instance and therefore\n    // off of admin.database().\n    this.encryptionKeyCheckValue = result;\n\n    return result;\n  }\n\n  goOnline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOnline();\n  }\n\n  goOffline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOffline();\n  }\n\n  ref(path) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof path !== 'undefined' && typeof path !== 'string') {\n      throw new Error(\n        `Expected first argument passed to ref() to be undefined or a string, but got \"${path}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.ref(path), this._crypto);\n  }\n\n  refFromURL(url) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof url !== 'string' || url.match(/^https:\\/\\/.*/g) === null) {\n      throw new Error(\n        `Expected first argument passed to refFromURL() to be a string URL, but got \"${url}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.refFromURL(url), this._crypto);\n  }\n}\n"],"names":[],"mappings":"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"}