{"version":3,"file":"firecrypt.js","sources":["src/crypto.js","src/FireCryptSnapshot.js","src/FireCryptQuery.js","src/FireCryptOnDisconnect.js","src/FireCryptReference.js","src/firecrypt.js"],"sourcesContent":["export default class Crypto {\n  constructor(options, spec) {\n    this._spec = this._cleanSpecification(spec);\n    this._encryptString = this._throwNotSetUpError;\n    this._decryptString = this._throwNotSetUpError;\n\n    this._patternRegexes = {};\n\n    if (typeof LRUCache === 'function') {\n      this._encryptionCache = new LRUCache({\n        max: options.encryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n      this._decryptionCache = new LRUCache({\n        max: options.decryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n    }\n  }\n\n  _cleanSpecification(def, path) {\n    var keys = Object.keys(def);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (key === '.encrypt') {\n        var encryptKeys = Object.keys(def[key]);\n        for (var j = 0; j < encryptKeys.length; j++) {\n          var encryptKey = encryptKeys[j];\n          if (encryptKey !== 'key' && encryptKey !== 'value' && encryptKey !== 'few') {\n            throw new Error('Illegal .encrypt subkey: ' + encryptKeys[j]);\n          }\n        }\n      } else {\n        if (/[\\x00-\\x1f\\x7f\\x91\\x92\\.#\\[\\]/]/.test(key) || /[$]/.test(key.slice(1))) {\n          throw new Error('Illegal character in specification key: ' + key);\n        }\n        this._cleanSpecification(def[key], (path || '') + '/' + key);\n      }\n      switch (key.charAt(0)) {\n        case '$':\n          if (key === '$') break;\n          if (def.$) throw new Error('Multiple wildcard keys in specification at ' + path);\n          def.$ = def[key];\n          delete def[key];\n          break;\n        case '.':\n          if (key !== '.encrypt') throw new Error('Unknown directive at ' + path + ': ' + key);\n          break;\n      }\n    }\n    return def;\n  }\n\n  _throwNotSetUpError() {\n    var e = new Error('Encryption not set up');\n    e.firecrypt = 'NO_KEY';\n    throw e;\n  }\n\n  _computeCacheItemSize(value, key) {\n    return key.length + (typeof value === 'string' ? value.length : 4);\n  }\n\n  setStringEncryptionFunctions(encryptString, decryptString) {\n    this._encryptString = encryptString;\n    this._decryptString = decryptString;\n  }\n\n  encryptPath(path, def) {\n    def = def || this._spec.rules;\n    path = path.slice();\n    for (var i = 0; i < path.length; i++) {\n      def = def[path[i]] || def.$;\n      if (!def) break;\n      if (def['.encrypt'] && def['.encrypt'].key) {\n        path[i] = this.encrypt(path[i], 'string', def['.encrypt'].key);\n      }\n    }\n    return path;\n  }\n\n  encryptRef(ref, path) {\n    var encryptedPath = this.encryptPath(path || this.refToPath(ref));\n    return encryptedPath.length ? ref.root.child(encryptedPath.join('/')) : ref.root;\n  }\n\n  decryptRef(ref) {\n    var path = this.refToPath(ref, true);\n    var changed = false;\n    for (var i = 0; i < path.length; i++) {\n      var decryptedPathSegment = this.decrypt(path[i]);\n      if (decryptedPathSegment !== path[i]) {\n        path[i] = decryptedPathSegment;\n        changed = true;\n      }\n    }\n    return changed ? ref.root.child(path.join('/')) : ref;\n  }\n\n  specForPath(path, def) {\n    def = def || this._spec.rules;\n    for (var i = 0; def && i < path.length; i++) {\n      def = def[path[i]] || def.$;\n    }\n    return def;\n  }\n\n  transformValue(path, value, transform) {\n    return this.transformTree(value, this.specForPath(path), transform);\n  }\n\n  transformTree(value, def, transform) {\n    if (!def) return value;\n    var type = this.getType(value);\n    var i;\n    if (/^(string|number|boolean)$/.test(type)) {\n      if (def['.encrypt'] && def['.encrypt'].value) {\n        value = transform(value, type, def['.encrypt'].value);\n      }\n    } else if (type === 'object' && value !== null) {\n      var transformedValue = {};\n      for (var key in value) {\n        if (!value.hasOwnProperty(key)) continue;\n        var subValue = value[key], subDef;\n        if (key.indexOf('/') >= 0) {  // for deep update keys\n          var keyParts = key.split('/');\n          subDef = def;\n          for (i = 0; i < keyParts.length; i++) {\n            if (transform === decrypt) {\n              keyParts[i] = this.decrypt(keyParts[i]);\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n            } else {\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n              if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n                keyParts[i] = transform(keyParts[i], 'string', subDef['.encrypt'].key);\n              }\n            }\n          }\n          key = keyParts.join('/');\n        } else {\n          if (transform === this.decrypt) {\n            key = this.decrypt(key);\n            subDef = def[key] || def.$;\n          } else {\n            subDef = def[key] || def.$;\n            if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n              key = transform(key, 'string', subDef['.encrypt'].key);\n            }\n          }\n        }\n        transformedValue[key] = this.transformTree(subValue, subDef, transform);\n      }\n      value = transformedValue;\n    } else if (type === 'array') {\n      if (!def.$) return value;\n      for (i = 0; i < value.length; i++) value[i] = this.transformTree(value[i], def.$, transform);\n    }\n    return value;\n  }\n\n  refToPath(ref, encrypted) {\n    var root = ref.root;\n    if (ref === root) return [];\n    var pathStr = decodeURIComponent(ref.toString().slice(root.toString().length));\n    if (!encrypted && pathStr && pathStr.charAt(0) !== '.' &&\n        /[\\x00-\\x1f\\x7f\\x91\\x92\\.#$\\[\\]]/.test(pathStr)) {\n      throw new Error('Path contains invalid characters: ' + pathStr);\n    }\n    return pathStr.split('/');\n  }\n\n  encrypt(value, type, pattern) {\n    var cacheKey;\n    if (this._encryptionCache) {\n      cacheKey = type.charAt(0) + pattern + '\\x91' + value;\n      if (this._encryptionCache.has(cacheKey)) return this._encryptionCache.get(cacheKey);\n    }\n    var result;\n    if (pattern === '#') {\n      result = this.encryptValue(value, type);\n    } else {\n      if (type !== 'string') {\n        throw new Error('Can\\'t encrypt a ' + type + ' using pattern [' + pattern + ']');\n      }\n      var match = value.match(this.compilePattern(pattern));\n      if (!match) {\n        throw new Error(\n          'Can\\'t encrypt as value doesn\\'t match pattern [' + pattern + ']: ' + value);\n      }\n      var i = 0;\n      result = pattern.replace(/[#\\.]/g, function(placeholder) {\n        var part = match[++i];\n        if (placeholder === '#') part = this.encryptValue(part, 'string');\n        return part;\n      });\n    }\n    if (this._encryptionCache) this._encryptionCache.set(cacheKey, result);\n    return result;\n  }\n\n  encryptValue(value, type) {\n    if (!/^(string|number|boolean)$/.test(type)) throw new Error('Can\\'t encrypt a ' + type);\n    switch (type) {\n      case 'number': value = '' + value; break;\n      case 'boolean': value = value ? 't' : 'f'; break;\n    }\n    return '\\x91' + type.charAt(0).toUpperCase() + this._encryptString(value) + '\\x92';\n  }\n\n  decrypt(value) {\n    if (this._decryptionCache && this._decryptionCache.has(value)) return this._decryptionCache.get(value);\n    if (!/\\x91/.test(value)) return value;\n    var result;\n    var match = value.match(/^\\x91(.)([^\\x92]*)\\x92$/);\n    if (match) {\n      var decryptedString = this._decryptString(match[2]);\n      switch (match[1]) {\n        case 'S':\n          result = decryptedString;\n          break;\n        case 'N':\n          result = Number(decryptedString);\n          // Check for NaN, since it's the only value where x !== x.\n          if (result !== result) throw new Error('Invalid encrypted number: ' + decryptedString);\n          break;\n        case 'B':\n          if (decryptedString === 't') result = true;\n          else if (decryptedString === 'f') result = false;\n          else throw new Error('Invalid encrypted boolean: ' + decryptedString);\n          break;\n        default:\n          throw new Error('Invalid encrypted value type code: ' + match[1]);\n      }\n    } else {\n      result = value.replace(/\\x91(.)([^\\x92]*)\\x92/g, function(match, typeCode, encryptedString) {\n        if (typeCode !== 'S') throw new Error('Invalid multi-segment encrypted value: ' + typeCode);\n        return this._decryptString(encryptedString);\n      });\n    }\n    if (this._decryptionCache) this._decryptionCache.set(value, result);\n    return result;\n  }\n\n  getType(value) {\n    if (Array.isArray(value)) return 'array';\n    var type = typeof value;\n    if (type === 'object') {\n      if (value instanceof String) type = 'string';\n      else if (value instanceof Number) type = 'number';\n      else if (value instanceof Boolean) type = 'boolean';\n    }\n    return type;\n  }\n\n  compilePattern(pattern) {\n    var regex = this._patternRegexes[pattern];\n    if (!regex) {\n      regex = this._patternRegexes[pattern] = new RegExp('^' + pattern\n        .replace(/\\./g, '#')\n        .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')  // escape regex chars\n        .replace(/#/g, '(.*?)') + '$');\n    }\n    return regex;\n  }\n}\n","import FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptSnapshot {\n  constructor(snap, crypto) {\n    this._ref = crypto.decryptRef(snap.ref);\n    this._path = crypto.refToPath(this._ref);\n    this._snap = snap;\n    this._crypto = crypto;\n\n  }\n\n  get key() {\n    return this._ref.key;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  val() {\n    return this._crypto.transformValue(this._path, this._snap.val(), this._crypto.decrypt.bind(this._crypto));\n  }\n\n  child(childPath) {\n    return new FireCryptSnapshot(this._snap.child(childPath), this._crypto);\n  }\n\n  forEach(action) {\n    return this._snap.forEach((childSnap) => {\n      return action(new FireCryptSnapshot(childSnap), this._crypto);\n    });\n  }\n\n  exists() {\n    return this._snap.exists.apply(this._snap, arguments)\n  }\n\n  hasChild(childPath) {\n    childPath = this._crypto.encryptPath(childPath.split('/'), this._crypto.specForPath(this._path)).join('/');\n    return this._snap.hasChild(childPath);\n  }\n\n  hasChildren() {\n    return this._snap.hasChildren.apply(this._snap, arguments)\n  }\n\n  numChildren() {\n    return this._snap.numChildren.apply(this._snap, arguments)\n  }\n\n  toJSON() {\n    const json = this._snap.toJSON.apply(this._snap, arguments);\n    return this._crypto.transformValue(this._path, json, this._crypto.decrypt.bind(this._crypto));\n  }\n}\n","import FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptQuery {\n  constructor(query, order, originalRef, crypto) {\n    this._query = query;\n    this._order = order || {};\n    this._originalRef = originalRef || query;\n    this._crypto = crypto;\n  }\n\n  _wrapQueryCallback(callback) {\n    if (!callback || callback.firecryptCallback) return;\n    const wrappedCallback = (snap, previousChildKey) => {\n      return callback.call(this, new FireCryptSnapshot(snap, this._crypto), previousChildKey, this._crypto);\n    };\n    wrappedCallback.firecryptCallback = wrappedCallback;\n    callback.firecryptCallback = wrappedCallback;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._crypto.decryptRef(this._query.ref), this._crypto);\n  }\n\n  on(eventType, callback, cancelCallback, context) {\n    this._wrapQueryCallback(callback);\n    return this._originalRef.on.call(\n      this._query, eventType, callback.firecryptCallback, cancelCallback, context);\n  }\n\n  off(eventType, callback, context) {\n    if (callback && callback.firecryptCallback) callback = callback.firecryptCallback;\n    return this._originalRef.off.call(this._query, eventType, callback, context);\n  }\n\n  once(eventType, successCallback, failureCallback, context) {\n    this._wrapQueryCallback(successCallback);\n    return this._originalRef.once.call(\n      this._query, eventType, successCallback && successCallback.firecryptCallback, failureCallback,\n      context\n    ).then((snap) => {\n      return new FireCryptSnapshot(snap, this._crypto);\n    });\n  }\n  \n  orderByChild(key) {\n    return this._orderBy('orderByChild', 'child', key);\n  }\n\n  orderByKey() {\n    return this._orderBy('orderByKey', 'key');\n  }\n\n  orderByValue() {\n    return this._orderBy('orderByValue', 'value');\n  }\n\n  startAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('startAt', arguments);\n  }\n\n  endAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('endAt', arguments);\n  }\n\n  equalTo(value, key) {\n    if (this._order[this._order.by + 'Encrypted']) {\n      value = this._crypto.encrypt(value, this._crypto.getType(value), this._order[this._order.by + 'Encrypted']);\n    }\n    if (key !== undefined && this._order.keyEncrypted) {\n      key = this._crypto.encrypt(key, 'string', this._order.keyEncrypted);\n    }\n    return new FireCryptQuery(this._originalRef.equalTo.call(this._query, value, key), this._order, this._crypto);\n  }\n\n  limitToFirst() {\n    return this._delegate('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._delegate('limitToLast', arguments);\n  }\n\n  limit() {\n    return this._delegate('limit', arguments);\n  }\n\n  _delegate(methodName, args) {\n    return new FireCryptQuery(this._originalRef[methodName].apply(this._query, args), this._order, this._crypto);\n  }\n\n  _checkCanSort(hasExtraKey) {\n    if (this._order.by === 'key' ?\n        this._order.keyEncrypted :\n        this._order.valueEncrypted || hasExtraKey && this._order.keyEncrypted) {\n      throw new Error('Encrypted items cannot be ordered');\n    }\n  }\n\n  _orderBy(methodName, by, childKey) {\n    const def = this._crypto.specForPath(this._crypto.refToPath(this.ref));\n    const order = {by: by}\n\n    let encryptedChildKey;\n    if (def) {\n      const childPath = childKey && childKey.split('/');\n      for (const subKey in def) {\n        if (!def.hasOwnProperty(subKey)) continue;\n        const subDef = def[subKey];\n        if (subDef['.encrypt']) {\n          if (subDef['.encrypt'].key) order.keyEncrypted = subDef['.encrypt'].key;\n          if (subDef['.encrypt'].value) order.valueEncrypted = subDef['.encrypt'].value;\n        }\n        if (childKey) {\n          const childDef = this._crypto.specForPath(childPath, subDef);\n          if (childDef && childDef['.encrypt'] && childDef['.encrypt'].value) {\n            order.childEncrypted = childDef['.encrypt'].value;\n          }\n          const encryptedChildKeyCandidate = this._crypto.encryptPath(childPath, subDef).join('/');\n          if (encryptedChildKey && encryptedChildKeyCandidate !== encryptedChildKey) {\n            throw new Error(\n              'Incompatible encryption specifications for orderByChild(\"' + childKey + '\")');\n          }\n          encryptedChildKey = encryptedChildKeyCandidate;\n        }\n      }\n    }\n    if (childKey) {\n      return new FireCryptQuery(\n        this._originalRef[methodName].call(this._query, encryptedChildKey || childKey), order, this._crypto);\n    } else {\n      return new FireCryptQuery(this._originalRef[methodName].call(this._query), order, this._crypto);\n    }\n  }\n}\n","export default class FireCryptOnDisconnect {\n  constructor(path, originalOnDisconnect, crypto) {\n    this._path = path;\n    this._crypto = crypto;\n    this._originalOnDisconnect = originalOnDisconnect;\n  }\n\n  _interceptOnDisconnectWrite(methodName, originalArguments, argIndex) {\n    const self = this;\n\n    this[methodName] = function() {\n      const args = Array.prototype.slice.call(originalArguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = self._crypto.transformValue(self._path, args[argIndex], self._crypto.encrypt.bind(self._crypto));\n      }\n\n      return self._originalOnDisconnect[methodName].apply(self._originalOnDisconnect, args);\n    };\n  }\n\n  set() {\n    return this._interceptOnDisconnectWrite('set', arguments, 0);\n  }\n\n  update() {\n    return this._interceptOnDisconnectWrite('update', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptOnDisconnectWrite('remove', arguments);\n  }\n\n  cancel() {\n    return this._interceptOnDisconnectWrite('cancel', arguments);\n  }\n}\n","import FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nexport default class FireCryptReference {\n  constructor(ref, crypto) {\n    this._ref = ref;\n    this._crypto = crypto;\n\n    [\n      'on', 'off', 'once', 'orderByChild', 'orderByKey', 'orderByValue', 'startAt', 'endAt',\n      'equalTo', 'limitToFirst', 'limitToLast'\n    ].forEach((methodName) => {this._interceptQuery(methodName);});\n  }\n\n  /**\n   * Returns a placeholder value for auto-populating the current timestamp (time since the Unix\n   * epoch, in milliseconds) as determined by the Firebase servers.\n   * @return {Object} A timestamp placeholder value.\n   */\n  static get SERVER_TIMESTAMP() {\n    return {\n      '.sv': 'timestamp'\n    };\n  }\n\n  /**\n   * Returns the last part of this reference's path. The key of a root reference is `null`.\n   * @return {string|null} The last part this reference's path.\n   */\n  get key() {\n    return this._ref.key;\n  }\n\n  /**\n   * Returns just the path component of the reference's URL.\n   * @return {string} The path component of the Firebase URL wrapped by this reference.\n   */\n  get path() {\n    return decodeURIComponent(this._ref.toString()).slice(this._ref.root.toString().length - 1);\n  }\n\n  /**\n   * Returns a FireCryptReference at the same location as this query or reference.\n   * @return {FireCryptReference|null} A FireCryptReference at the same location as this query or\n   *     reference.\n   */\n  get ref() {\n    if (this._ref.isEqual(this._ref.ref)) {\n      return this;\n    } else {\n      return new FireCryptReference(this._ref.ref, this._crypto);\n    }\n  }\n\n  /**\n   * Returns a FireCryptReference reference to the root of the database.\n   * @return {FireCryptReference} The root reference of the database.\n   */\n  get root() {\n    if (this._ref.isEqual(this._ref.root)) {\n      return this;\n    } else {\n      return new FireCryptReference(this._ref.root, this._crypto);\n    }\n  }\n\n  /**\n   * Returns a FireCryptReference to the parent location of this reference. The parent of a root\n   * reference is `null`.\n   * @return {FireCryptReference|null} The parent location of this reference.\n   */\n  get parent() {\n    if (this._ref.parent === null) {\n      return null;\n    } else {\n      return new FireCryptReference(this._ref.parent, this._crypto);\n    }\n  }\n\n  /**\n   * Creates a new FireCryptReference object on a child of this one.\n   * @param  {string} path The path to the desired child, relative to this reference.\n   * @return {FireCryptReference} The child reference.\n   */\n  child(path) {\n    return new FireCryptReference(this._ref.child(path), this._crypto);\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @return {Object} A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    return this._ref.toJSON();\n  }\n\n  /**\n   * Returns whether or not this FireCryptReference is equivalent to the provided FireCryptReference.\n   * @return {FireCryptReference} Another FireCryptReference instance against which to compare.\n   */\n  isEqual(otherRef) {\n    return this._ref.isEqual(otherRef._ref);\n  }\n\n  /**\n   * Stringifies the wrapped reference.\n   * @return {string} The Firebase URL wrapped by this FireCryptReference object.\n   */\n  toString() {\n    return decodeURIComponent(this._ref.toString());\n  }\n\n  push() {\n    const pushedRef = this._ref.push();\n\n    const args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] !== 'undefined') {\n      const encryptedRef = this._crypto.encryptRef(pushedRef);\n      const path = this._crypto.refToPath(pushedRef);\n\n      args[0] = this._crypto.transformValue(path, args[0], this._crypto.encrypt.bind(this._crypto));\n\n      pushedRef.set.apply(encryptedRef, args);\n    }\n\n    const decryptedPushedRef = new FireCryptReference(this._crypto.decryptRef(pushedRef), this._crypto);\n    decryptedPushedRef.then = pushedRef.then;\n    decryptedPushedRef.catch = pushedRef.catch;\n    if (pushedRef.finally) decryptedPushedRef.finally = pushedRef.finally;\n\n    return decryptedPushedRef;\n  }\n\n  _interceptWrite(methodName, originalArguments, argIndex) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n\n    const args = Array.prototype.slice.call(originalArguments);\n    if (argIndex >= 0 && argIndex < args.length) {\n      const path = this._crypto.refToPath(this._ref);\n      args[argIndex] = this._crypto.transformValue(path, args[argIndex], this._crypto.encrypt.bind(this._crypto));\n    }\n\n    return this._ref[methodName].apply(encryptedRef, args);\n  }\n\n  set() {\n    return this._interceptWrite('set', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptWrite('remove', arguments);\n  }\n\n  update() {\n    return this._interceptWrite('update', arguments, 0);\n  }\n\n  childrenKeys() {\n    if (!this._ref.childrenKeys) {\n      throw new Error('childrenKeys() is not implemented.');\n    }\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return this._ref.childrenKeys.apply(encryptedRef, arguments).then((keys) => {\n      if (!keys.some((key) => /\\x91/.test(key))) {\n        return keys;\n      }\n      return keys.map(this._crypto.decrypt.bind(this._crypto));\n    });\n  }\n\n  onDisconnect() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return new FireCryptOnDisconnect(encryptedRef, this._ref.onDisconnect.call(encryptedRef), this._crypto);\n  }\n\n  _interceptQuery(methodName) {\n    const self = this;\n    this[methodName] = function() {\n      const encryptedRef = self._crypto.encryptRef(self._ref);\n      const query = new FireCryptQuery(encryptedRef, {}, self._ref, self._crypto);\n      return query[methodName].apply(query, arguments);\n    }\n  }\n\n  transaction() {\n    const self = this;\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const path = this._crypto.refToPath(this._ref);\n\n    const args = Array.prototype.slice.call(arguments);\n    const originalCompute = args[0];\n    args[0] = originalCompute && function(value) {\n      value = self._crypto.transformValue(path, value, self._crypto.decrypt.bind(self._crypto));\n      value = originalCompute(value);\n      value = self._crypto.transformValue(path, value, self._crypto.encrypt.bind(self._crypto));\n      return value;\n    };\n    if (args.length > 1) {\n      const originalOnComplete = args[1];\n      args[1] = originalOnComplete && function(error, committed, snapshot) {\n        return originalOnComplete(error, committed, snapshot && new FireCryptSnapshot(snapshot));\n      };\n    }\n    return this._ref.transaction.apply(encryptedRef, args).then((result) => {\n      result.snapshot = result.snapshot && new FireCryptSnapshot(result.snapshot, this._crypto);\n      return result;\n    });\n  };\n}\n","if (typeof require !== 'undefined') {\n  if (typeof LRUCache === 'undefined') global.LRUCache = require('lru-cache');\n  if (typeof CryptoJS === 'undefined') global.CryptoJS = require('crypto-js/core');\n  require('crypto-js/enc-base64');\n  require('cryptojs-extension/build_node/siv');\n}\n\nCryptoJS.enc.Base64UrlSafe = {\n  stringify: CryptoJS.enc.Base64.stringify,\n  parse: CryptoJS.enc.Base64.parse,\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n};\n\nimport Crypto from './crypto';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCrypt {\n  constructor(db) {\n    const dbIsNonNullObject = typeof db === 'object' && db !== null;\n    if (!dbIsNonNullObject || typeof db.app !== 'object' || typeof db.ref !== 'function') {\n      throw new Error(\n        `Expected first argument passed to FireCrypt constructor to be a Firebase Database instance, \n        but got \"${db}\".`\n      );\n    }\n\n    this._db = db;\n    this._crypto = undefined;\n  }\n\n  _ensureEncryptionConfigured() {\n    if (typeof this._crypto === 'undefined') {\n      throw new Error('Encryption for this FireCrypt reference has not been configured yet.');\n    }\n  }\n\n  _setupAesSiv(key, checkValue) {\n    const siv = CryptoJS.SIV.create(CryptoJS.enc.Base64.parse(key));\n    const encryptString = (str) => {\n      return CryptoJS.enc.Base64UrlSafe.stringify(siv.encrypt(str));\n    };\n    const decryptString = (str) => {\n      const result = siv.decrypt(CryptoJS.enc.Base64UrlSafe.parse(str));\n      if (result === false) {\n        const e = new Error('Wrong decryption key');\n        e.firecrypt = 'WRONG_KEY';\n        throw e;\n      }\n      return CryptoJS.enc.Utf8.stringify(result);\n    };\n  \n    this._crypto.setStringEncryptionFunctions(encryptString, decryptString);\n  \n    if (checkValue) decryptString(checkValue);\n    return encryptString(CryptoJS.enc.Base64UrlSafe.stringify(CryptoJS.lib.WordArray.random(10)));\n  }\n\n  get app() {\n    this._ensureEncryptionConfigured();\n    return this._db.app;\n  }\n\n  configureEncryption(options = {}, specification = {}) {\n    if (typeof options !== 'object' || options === null) {\n      throw new Error(\n        `Expected second argument passed to configureEncryption() to be an object, but got \"${options}\".`\n      );\n    } else if (typeof specification !== 'object' || specification === null) {\n      throw new Error(\n        `Expected third argument passed to configureEncryption() to be an object, but got \"${specification}\".`\n      );\n    }\n\n    options.cacheSize = options.cacheSize || 5 * 1000 * 1000;\n    options.encryptionCacheSize = options.encryptionCacheSize || options.cacheSize;\n    options.decryptionCacheSize = options.decryptionCacheSize || options.cacheSize;\n\n    this._crypto = new Crypto(options, specification);\n\n    let result;\n\n    switch (options.algorithm) {\n      case 'aes-siv':\n        if (!options.key) throw new Error('You must specify a key to use AES encryption.');\n        result = this._setupAesSiv(options.key, options.keyCheckValue);\n        break;\n      case 'passthrough':\n        this._crypto.setStringEncryptionFunctions((str) => str, (str) => str);\n        break;\n      case 'none':\n        break;\n      default:\n        throw new Error('Unknown encryption algorithm \"' + options.algorithm + '\".');\n    }\n\n    return result;\n  }\n\n  goOnline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOnline();\n  }\n\n  goOffline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOffline();\n  }\n\n  ref(path) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof path !== 'undefined' && typeof path !== 'string') {\n      throw new Error(\n        `Expected first argument passed to ref() to be undefined or a string, but got \"${path}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.ref(path), this._crypto);\n  }\n\n  refFromURL(url) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof url !== 'string' || url.match(/^https:\\/\\/.*/g) === null) {\n      throw new Error(\n        `Expected first argument passed to refFromURL() to be a string URL, but got \"${url}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.refFromURL(path), this._crypto);\n  }\n}\n"],"names":["Crypto","options","spec","_spec","_cleanSpecification","_encryptString","_throwNotSetUpError","_decryptString","_patternRegexes","LRUCache","_encryptionCache","encryptionCacheSize","_computeCacheItemSize","_decryptionCache","decryptionCacheSize","def","path","keys","Object","i","length","key","encryptKeys","j","encryptKey","Error","test","slice","charAt","$","e","firecrypt","value","encryptString","decryptString","rules","encrypt","ref","encryptedPath","encryptPath","refToPath","root","child","join","changed","decryptedPathSegment","decrypt","transform","transformTree","specForPath","type","getType","transformedValue","hasOwnProperty","subValue","subDef","indexOf","keyParts","split","encrypted","pathStr","decodeURIComponent","toString","pattern","cacheKey","has","get","result","encryptValue","match","compilePattern","replace","placeholder","part","set","toUpperCase","decryptedString","Number","typeCode","encryptedString","Array","isArray","String","Boolean","regex","RegExp","FireCryptSnapshot","snap","crypto","_ref","decryptRef","_path","_snap","_crypto","FireCryptReference","transformValue","val","bind","childPath","action","forEach","childSnap","exists","apply","arguments","hasChild","hasChildren","numChildren","json","toJSON","FireCryptQuery","query","order","originalRef","_query","_order","_originalRef","callback","firecryptCallback","wrappedCallback","previousChildKey","call","eventType","cancelCallback","context","_wrapQueryCallback","on","off","successCallback","failureCallback","once","then","_orderBy","_checkCanSort","undefined","_delegate","by","keyEncrypted","equalTo","methodName","args","hasExtraKey","valueEncrypted","childKey","encryptedChildKey","subKey","childDef","childEncrypted","encryptedChildKeyCandidate","FireCryptOnDisconnect","originalOnDisconnect","_originalOnDisconnect","originalArguments","argIndex","self","prototype","_interceptOnDisconnectWrite","_interceptQuery","SERVER_TIMESTAMP","isEqual","parent","otherRef","pushedRef","push","encryptedRef","encryptRef","decryptedPushedRef","catch","finally","_interceptWrite","childrenKeys","some","map","onDisconnect","originalCompute","originalOnComplete","error","committed","snapshot","transaction","require","global","CryptoJS","enc","Base64UrlSafe","Base64","stringify","parse","FireCrypt","db","dbIsNonNullObject","app","_db","checkValue","siv","SIV","create","str","Utf8","setStringEncryptionFunctions","lib","WordArray","random","_ensureEncryptionConfigured","specification","cacheSize","algorithm","_setupAesSiv","keyCheckValue","goOnline","goOffline","url","refFromURL"],"mappings":"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"}