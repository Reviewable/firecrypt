{"version":3,"file":"firecrypt.min.js","sources":["src/crypto.js","src/FireCryptSnapshot.js","src/FireCryptQuery.js","src/FireCryptOnDisconnect.js","src/FireCryptReference.js","src/firecrypt.js"],"sourcesContent":["export default class Crypto {\n  constructor(options, spec) {\n    this._spec = this._cleanSpecification(spec);\n    this._encryptString = this._throwNotSetUpError;\n    this._decryptString = this._throwNotSetUpError;\n\n    this._patternRegexes = {};\n\n    if (typeof LRUCache === 'function') {\n      this._encryptionCache = new LRUCache({\n        max: options.encryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n      this._decryptionCache = new LRUCache({\n        max: options.decryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n    }\n  }\n\n  _cleanSpecification(def, path) {\n    const keys = Object.keys(def);\n    for (const key of keys) {\n      if (key === '.encrypt') {\n        const encryptKeys = Object.keys(def[key]);\n        for (const encryptKey of encryptKeys) {\n          if (encryptKey !== 'key' && encryptKey !== 'value' && encryptKey !== 'few') {\n            throw new Error(`Illegal .encrypt subkey: ${encryptKey}`);\n          }\n        }\n      } else {\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x1f\\x7f\\x91\\x92.#[\\]/]/.test(key) || /[$]/.test(key.slice(1))) {\n          throw new Error(`Illegal character in specification key: ${key}`);\n        }\n        this._cleanSpecification(def[key], (path || '') + '/' + key);\n      }\n      switch (key.charAt(0)) {\n        case '$':\n          if (key === '$') break;\n          if (def.$) throw new Error('Multiple wildcard keys in specification at ' + path);\n          def.$ = def[key];\n          delete def[key];\n          break;\n        case '.':\n          if (key !== '.encrypt') throw new Error('Unknown directive at ' + path + ': ' + key);\n          break;\n      }\n    }\n    return def;\n  }\n\n  _throwNotSetUpError() {\n    const e = new Error('Encryption not set up');\n    e.firecrypt = 'NO_KEY';\n    throw e;\n  }\n\n  _computeCacheItemSize(value, key) {\n    return key.length + (typeof value === 'string' ? value.length : 4);\n  }\n\n  setStringEncryptionFunctions(encryptString, decryptString) {\n    this._encryptString = encryptString;\n    this._decryptString = decryptString;\n  }\n\n  encryptPath(path, def) {\n    def = def || this._spec.rules;\n    path = path.slice();\n    for (let i = 0; i < path.length; i++) {\n      def = def[path[i]] || def.$;\n      if (!def) break;\n      if (def['.encrypt'] && def['.encrypt'].key) {\n        path[i] = this.encrypt(path[i], 'string', def['.encrypt'].key);\n      }\n    }\n    return path;\n  }\n\n  encryptRef(ref, path) {\n    const encryptedPath = this.encryptPath(path || this.refToPath(ref));\n    return encryptedPath.length ? ref.root.child(encryptedPath.join('/')) : ref.root;\n  }\n\n  decryptRef(ref) {\n    const path = this.refToPath(ref, true);\n    let changed = false;\n    for (let i = 0; i < path.length; i++) {\n      const decryptedPathSegment = this.decrypt(path[i]);\n      if (decryptedPathSegment !== path[i]) {\n        path[i] = decryptedPathSegment;\n        changed = true;\n      }\n    }\n    return changed ? ref.root.child(path.join('/')) : ref;\n  }\n\n  specForPath(path, def) {\n    def = def || this._spec.rules;\n    for (let i = 0; def && i < path.length; i++) {\n      def = def[path[i]] || def.$;\n    }\n    return def;\n  }\n\n  transformValue(path, value, transformType) {\n    if (transformType !== 'encrypt' && transformType !== 'decrypt') {\n      throw new Error(\n        `Transform type must be either \"encrypt\" or \"decrypt\", but got \"${transformType}\".`\n      );\n    }\n    const transform =\n      transformType === 'encrypt' ? this.encrypt.bind(this) : this.decrypt.bind(this);\n    return this.transformTree(value, this.specForPath(path), transform);\n  }\n\n  transformTree(value, def, transform) {\n    if (!def) return value;\n    const type = this.getType(value);\n    let i;\n    if (/^(string|number|boolean)$/.test(type)) {\n      if (def['.encrypt'] && def['.encrypt'].value) {\n        value = transform(value, type, def['.encrypt'].value);\n      }\n    } else if (type === 'object' && value !== null) {\n      const transformedValue = {};\n      for (let key in value) {\n        if (!value.hasOwnProperty(key)) continue;\n        const subValue = value[key];\n        let subDef;\n        if (key.indexOf('/') >= 0) {  // for deep update keys\n          const keyParts = key.split('/');\n          subDef = def;\n          for (i = 0; i < keyParts.length; i++) {\n            if (transform === this.decrypt) {\n              keyParts[i] = this.decrypt(keyParts[i]);\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n            } else {\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n              if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n                keyParts[i] = transform(keyParts[i], 'string', subDef['.encrypt'].key);\n              }\n            }\n          }\n          key = keyParts.join('/');\n        } else if (transform === this.decrypt) {\n          key = this.decrypt(key);\n          subDef = def[key] || def.$;\n        } else {\n          subDef = def[key] || def.$;\n          if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n            key = transform(key, 'string', subDef['.encrypt'].key);\n          }\n        }\n        transformedValue[key] = this.transformTree(subValue, subDef, transform);\n      }\n      value = transformedValue;\n    } else if (type === 'array') {\n      if (!def.$) return value;\n      for (i = 0; i < value.length; i++) value[i] = this.transformTree(value[i], def.$, transform);\n    }\n    return value;\n  }\n\n  refToPath(ref, encrypted) {\n    const root = ref.root;\n    if (ref === root) return [];\n    const pathStr = decodeURIComponent(ref.toString().slice(root.toString().length));\n    if (!encrypted && pathStr && pathStr.charAt(0) !== '.' &&\n        /[\\x00-\\x1f\\x7f\\x91\\x92.#$[\\]]/.test(pathStr)) {  // eslint-disable-line no-control-regex\n      throw new Error(`Path contains invalid characters: ${pathStr}`);\n    }\n    return pathStr.split('/');\n  }\n\n  encrypt(value, type, pattern) {\n    let cacheKey;\n    if (this._encryptionCache) {\n      cacheKey = type.charAt(0) + pattern + '\\x91' + value;\n      if (this._encryptionCache.has(cacheKey)) return this._encryptionCache.get(cacheKey);\n    }\n    let result;\n    if (pattern === '#') {\n      result = this.encryptValue(value, type);\n    } else {\n      if (type !== 'string') {\n        throw new Error('Can\\'t encrypt a ' + type + ' using pattern [' + pattern + ']');\n      }\n      const match = value.match(this.compilePattern(pattern));\n      if (!match) {\n        throw new Error(\n          'Can\\'t encrypt as value doesn\\'t match pattern [' + pattern + ']: ' + value);\n      }\n      let i = 0;\n      result = pattern.replace(/[#.]/g, placeholder => {\n        let part = match[++i];\n        if (placeholder === '#') part = this.encryptValue(part, 'string');\n        return part;\n      });\n    }\n    if (this._encryptionCache) this._encryptionCache.set(cacheKey, result);\n    return result;\n  }\n\n  encryptValue(value, type) {\n    if (!/^(string|number|boolean)$/.test(type)) throw new Error('Can\\'t encrypt a ' + type);\n    switch (type) {\n      case 'number': value = '' + value; break;\n      case 'boolean': value = value ? 't' : 'f'; break;\n    }\n    return '\\x91' + type.charAt(0).toUpperCase() + this._encryptString(value) + '\\x92';\n  }\n\n  decrypt(value) {\n    if (this._decryptionCache && this._decryptionCache.has(value)) {\n      return this._decryptionCache.get(value);\n    }\n    if (!/\\x91/.test(value)) return value;\n    let result;\n    const match = value.match(/^\\x91(.)([^\\x92]*)\\x92$/);\n    if (match) {\n      const decryptedString = this._decryptString(match[2]);\n      switch (match[1]) {\n        case 'S':\n          result = decryptedString;\n          break;\n        case 'N':\n          result = Number(decryptedString);\n          // Check for NaN, since it's the only value where x !== x.\n          // eslint-disable-next-line no-self-compare\n          if (result !== result) throw new Error(`Invalid encrypted number: ${decryptedString}`);\n          break;\n        case 'B':\n          if (decryptedString === 't') result = true;\n          else if (decryptedString === 'f') result = false;\n          else throw new Error('Invalid encrypted boolean: ' + decryptedString);\n          break;\n        default:\n          throw new Error('Invalid encrypted value type code: ' + match[1]);\n      }\n    } else {\n      result = value.replace(/\\x91(.)([^\\x92]*)\\x92/g, (ignored, typeCode, encryptedString) => {\n        if (typeCode !== 'S') throw new Error('Invalid multi-segment encrypted value: ' + typeCode);\n        return this._decryptString(encryptedString);\n      });\n    }\n    if (this._decryptionCache) this._decryptionCache.set(value, result);\n    return result;\n  }\n\n  getType(value) {\n    if (Array.isArray(value)) return 'array';\n    let type = typeof value;\n    if (type === 'object') {\n      if (value instanceof String) type = 'string';\n      else if (value instanceof Number) type = 'number';\n      else if (value instanceof Boolean) type = 'boolean';\n    }\n    return type;\n  }\n\n  compilePattern(pattern) {\n    let regex = this._patternRegexes[pattern];\n    if (!regex) {\n      regex = this._patternRegexes[pattern] = new RegExp('^' + pattern\n        .replace(/\\./g, '#')\n        .replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&')  // escape regex chars\n        .replace(/#/g, '(.*?)') + '$');\n    }\n    return regex;\n  }\n}\n","import FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptSnapshot {\n  constructor(snap, crypto) {\n    this._ref = crypto.decryptRef(snap.ref);\n    this._path = crypto.refToPath(this._ref);\n    this._snap = snap;\n    this._crypto = crypto;\n  }\n\n  get key() {\n    return this._ref.key;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  val() {\n    return this._crypto.transformValue(this._path, this._snap.val(), 'decrypt');\n  }\n\n  child(childPath) {\n    return new FireCryptSnapshot(this._snap.child(childPath), this._crypto);\n  }\n\n  forEach(action) {\n    return this._snap.forEach((childSnap) => {\n      return action(new FireCryptSnapshot(childSnap), this._crypto);\n    });\n  }\n\n  exists() {\n    return this._snap.exists.apply(this._snap, arguments);\n  }\n\n  hasChild(childPath) {\n    childPath = this._crypto.encryptPath(\n      childPath.split('/'), this._crypto.specForPath(this._path)).join('/');\n    return this._snap.hasChild(childPath);\n  }\n\n  hasChildren() {\n    return this._snap.hasChildren.apply(this._snap, arguments);\n  }\n\n  numChildren() {\n    return this._snap.numChildren.apply(this._snap, arguments);\n  }\n\n  toJSON() {\n    const json = this._snap.toJSON.apply(this._snap, arguments);\n    return this._crypto.transformValue(this._path, json, 'decrypt');\n  }\n}\n","import FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptQuery {\n  constructor(query, order, originalRef, crypto) {\n    this._query = query;\n    this._order = order || {};\n    this._originalRef = originalRef || query;\n    this._crypto = crypto;\n  }\n\n  _wrapQueryCallback(callback) {\n    if (!callback || callback.firecryptCallback) return;\n    const self = this;\n    const wrappedCallback = function(snap, previousChildKey) {\n      return callback.call(  // eslint-disable-next-line no-invalid-this\n        this, new FireCryptSnapshot(snap, self._crypto), previousChildKey, self._crypto);\n    };\n    wrappedCallback.firecryptCallback = wrappedCallback;\n    callback.firecryptCallback = wrappedCallback;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._crypto.decryptRef(this._query.ref), this._crypto);\n  }\n\n  on(eventType, callback, cancelCallback, context) {\n    this._wrapQueryCallback(callback);\n    return this._originalRef.on.call(\n      this._query, eventType, callback.firecryptCallback, cancelCallback, context);\n  }\n\n  off(eventType, callback, context) {\n    if (callback && callback.firecryptCallback) callback = callback.firecryptCallback;\n    return this._originalRef.off.call(this._query, eventType, callback, context);\n  }\n\n  once(eventType, successCallback, failureCallback, context) {\n    this._wrapQueryCallback(successCallback);\n    return this._originalRef.once.call(\n      this._query, eventType, successCallback && successCallback.firecryptCallback, failureCallback,\n      context\n    ).then((snap) => {\n      return new FireCryptSnapshot(snap, this._crypto);\n    });\n  }\n\n  orderByChild(key) {\n    return this._orderBy('orderByChild', 'child', key);\n  }\n\n  orderByKey() {\n    return this._orderBy('orderByKey', 'key');\n  }\n\n  orderByValue() {\n    return this._orderBy('orderByValue', 'value');\n  }\n\n  startAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('startAt', arguments);\n  }\n\n  endAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('endAt', arguments);\n  }\n\n  equalTo(value, key) {\n    if (this._order[this._order.by + 'Encrypted']) {\n      value = this._crypto.encrypt(\n        value, this._crypto.getType(value), this._order[this._order.by + 'Encrypted']);\n    }\n    if (key !== undefined && this._order.keyEncrypted) {\n      key = this._crypto.encrypt(key, 'string', this._order.keyEncrypted);\n    }\n    return new FireCryptQuery(\n      this._originalRef.equalTo.call(this._query, value, key), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  limitToFirst() {\n    return this._delegate('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._delegate('limitToLast', arguments);\n  }\n\n  _delegate(methodName, args) {\n    return new FireCryptQuery(\n      this._originalRef[methodName].apply(this._query, args), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  _checkCanSort(hasExtraKey) {\n    const orderedAndEncrypted = this._order.by === 'key' ?\n      this._order.keyEncrypted :\n      this._order.valueEncrypted || hasExtraKey && this._order.keyEncrypted;\n    if (orderedAndEncrypted) throw new Error('Encrypted items cannot be ordered');\n  }\n\n  _orderBy(methodName, by, childKey) {\n    const def = this._crypto.specForPath(this._crypto.refToPath(this.ref));\n    const order = {by};\n\n    let encryptedChildKey;\n    if (def) {\n      const childPath = childKey && childKey.split('/');\n      for (const subKey in def) {\n        if (!def.hasOwnProperty(subKey)) continue;\n        const subDef = def[subKey];\n        if (subDef['.encrypt']) {\n          if (subDef['.encrypt'].key) order.keyEncrypted = subDef['.encrypt'].key;\n          if (subDef['.encrypt'].value) order.valueEncrypted = subDef['.encrypt'].value;\n        }\n        if (childKey) {\n          const childDef = this._crypto.specForPath(childPath, subDef);\n          if (childDef && childDef['.encrypt'] && childDef['.encrypt'].value) {\n            order.childEncrypted = childDef['.encrypt'].value;\n          }\n          const encryptedChildKeyCandidate = this._crypto.encryptPath(childPath, subDef).join('/');\n          if (encryptedChildKey && encryptedChildKeyCandidate !== encryptedChildKey) {\n            throw new Error(\n              'Incompatible encryption specifications for orderByChild(\"' + childKey + '\")');\n          }\n          encryptedChildKey = encryptedChildKeyCandidate;\n        }\n      }\n    }\n    if (childKey) {\n      return new FireCryptQuery(\n        this._originalRef[methodName].call(this._query, encryptedChildKey || childKey), order,\n        this._originalRef, this._crypto\n      );\n    }\n    return new FireCryptQuery(\n      this._originalRef[methodName].call(this._query), order, this._originalRef, this._crypto\n    );\n  }\n}\n","export default class FireCryptOnDisconnect {\n  constructor(path, originalOnDisconnect, crypto) {\n    this._path = path;\n    this._crypto = crypto;\n    this._originalOnDisconnect = originalOnDisconnect;\n  }\n\n  _interceptOnDisconnectWrite(methodName, originalArguments, argIndex) {\n    const self = this;\n\n    this[methodName] = function() {\n      const args = Array.prototype.slice.call(originalArguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = self._crypto.transformValue(self._path, args[argIndex], 'encrypt');\n      }\n\n      return self._originalOnDisconnect[methodName].apply(self._originalOnDisconnect, args);\n    };\n  }\n\n  set() {\n    return this._interceptOnDisconnectWrite('set', arguments, 0);\n  }\n\n  update() {\n    return this._interceptOnDisconnectWrite('update', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptOnDisconnectWrite('remove', arguments);\n  }\n\n  cancel() {\n    return this._interceptOnDisconnectWrite('cancel', arguments);\n  }\n}\n","import FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nlet childrenKeysFromLib;\ntry {\n  childrenKeysFromLib = require('firebase-childrenkeys');\n} catch (e) {\n  // Library is optional, so ignore any errors from failure to load it.\n}\n\nexport default class FireCryptReference {\n  constructor(ref, crypto) {\n    this._ref = ref;\n    this._crypto = crypto;\n  }\n\n  _interceptQuery(methodName, originalArguments) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const query = new FireCryptQuery(encryptedRef, {}, this._ref, this._crypto);\n    return query[methodName].apply(query, originalArguments);\n  }\n\n  _interceptWrite(methodName, originalArguments, argIndex) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n\n    const args = Array.prototype.slice.call(originalArguments);\n    if (argIndex >= 0 && argIndex < args.length) {\n      const path = this._crypto.refToPath(this._ref);\n      args[argIndex] = this._crypto.transformValue(path, args[argIndex], 'encrypt');\n    }\n\n    return this._ref[methodName].apply(encryptedRef, args);\n  }\n\n  /**\n   * Returns a placeholder value for auto-populating the current timestamp (time since the Unix\n   * epoch, in milliseconds) as determined by the Firebase servers.\n   * @return {Object} A timestamp placeholder value.\n   */\n  static get SERVER_TIMESTAMP() {\n    return {\n      '.sv': 'timestamp'\n    };\n  }\n\n  /**\n   * Returns the last part of this reference's path. The key of a root reference is `null`.\n   * @return {string|null} The last part this reference's path.\n   */\n  get key() {\n    return this._ref.key;\n  }\n\n  /**\n   * Returns just the path component of the reference's URL.\n   * @return {string} The path component of the Firebase URL wrapped by this reference.\n   */\n  get path() {\n    return decodeURIComponent(this._ref.toString()).slice(this._ref.root.toString().length - 1);\n  }\n\n  /**\n   * Returns a FireCryptReference at the same location as this query or reference.\n   * @return {FireCryptReference|null} A FireCryptReference at the same location as this query or\n   *     reference.\n   */\n  get ref() {\n    if (this._ref.isEqual(this._ref.ref)) return this;\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference reference to the root of the database.\n   * @return {FireCryptReference} The root reference of the database.\n   */\n  get root() {\n    if (this._ref.isEqual(this._ref.root)) return this;\n    return new FireCryptReference(this._ref.root, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference to the parent location of this reference. The parent of a root\n   * reference is `null`.\n   * @return {FireCryptReference|null} The parent location of this reference.\n   */\n  get parent() {\n    if (this._ref.parent === null) return null;\n    return new FireCryptReference(this._ref.parent, this._crypto);\n  }\n\n  /**\n   * Returns the FireCrypt instance associated with this reference.\n   * @return {FireCrypt} The FireCrypt instance associated with this reference.\n   */\n  get database() {\n    return this._ref.ref.database.firecrypt;\n  }\n\n  /**\n   * Creates a new FireCryptReference object on a child of this one.\n   * @param  {string} path The path to the desired child, relative to this reference.\n   * @return {FireCryptReference} The child reference.\n   */\n  child(path) {\n    return new FireCryptReference(this._ref.child(path), this._crypto);\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @return {Object} A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    return this._ref.toJSON();\n  }\n\n  /**\n   * Returns whether or not this FireCryptReference is equivalent to the provided\n   * FireCryptReference.\n   * @return {FireCryptReference} Another FireCryptReference instance against which to compare.\n   */\n  isEqual(otherRef) {\n    return this._ref.isEqual(otherRef._ref);\n  }\n\n  /**\n   * Stringifies the wrapped reference.\n   * @return {string} The Firebase URL wrapped by this FireCryptReference object.\n   */\n  toString() {\n    return decodeURIComponent(this._ref.toString());\n  }\n\n  push() {\n    const pushedRef = this.child(this._ref.push().key);\n\n    let promise;\n    if (typeof arguments[0] === 'undefined') {\n      // A bare pushed ref should also be thennable.\n      promise = Promise.resolve();\n    } else {\n      promise = pushedRef.set.apply(pushedRef, arguments);\n    }\n\n    pushedRef.then = promise.then.bind(promise);\n    pushedRef.catch = promise.catch.bind(promise);\n    if (promise.finally) pushedRef.finally = promise.finally.bind(promise);\n\n    return pushedRef;\n  }\n\n  set() {\n    return this._interceptWrite('set', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptWrite('remove', arguments);\n  }\n\n  update() {\n    return this._interceptWrite('update', arguments, 0);\n  }\n\n  childrenKeys() {\n    const originalMethod = this._ref.childrenKeys || childrenKeysFromLib;\n\n    if (typeof originalMethod !== 'function') {\n      throw new Error(\n        `childrenKeys() is not implemented. You must either provide a Firebase Database Reference\n        which implements childrenKeys() or npm install the firebase-children keys libary.`\n      );\n    }\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return originalMethod.apply(encryptedRef, [encryptedRef, ...arguments]).then((keys) => {\n      if (!keys.some((key) => /\\x91/.test(key))) {\n        return keys;\n      }\n      return keys.map(this._crypto.decrypt.bind(this._crypto));\n    });\n  }\n\n  onDisconnect() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return new FireCryptOnDisconnect(\n      encryptedRef, this._ref.onDisconnect.call(encryptedRef), this._crypto);\n  }\n\n  on() {\n    return this._interceptQuery('on', arguments);\n  }\n\n  off() {\n    return this._interceptQuery('off', arguments);\n  }\n\n  once() {\n    return this._interceptQuery('once', arguments);\n  }\n\n  orderByChild() {\n    return this._interceptQuery('orderByChild', arguments);\n  }\n\n  orderByKey() {\n    return this._interceptQuery('orderByKey', arguments);\n  }\n\n  orderByValue() {\n    return this._interceptQuery('orderByValue', arguments);\n  }\n\n  startAt() {\n    return this._interceptQuery('startAt', arguments);\n  }\n\n  endAt() {\n    return this._interceptQuery('endAt', arguments);\n  }\n\n  equalTo() {\n    return this._interceptQuery('equalTo', arguments);\n  }\n\n  limitToFirst() {\n    return this._interceptQuery('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._interceptQuery('limitToLast', arguments);\n  }\n\n  transaction() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const path = this._crypto.refToPath(this._ref);\n\n    const args = Array.prototype.slice.call(arguments);\n    const originalCompute = args[0];\n    args[0] = originalCompute && ((value) => {\n      value = this._crypto.transformValue(path, value, 'decrypt');\n      value = originalCompute(value);\n      value = this._crypto.transformValue(path, value, 'encrypt');\n      return value;\n    });\n    if (args.length > 1) {\n      const originalOnComplete = args[1];\n      args[1] = originalOnComplete && ((error, committed, snapshot) => {\n        return originalOnComplete(\n          error, committed, snapshot && new FireCryptSnapshot(snapshot, this._crypto));\n      });\n    }\n    return this._ref.transaction.apply(encryptedRef, args).then((result) => {\n      result.snapshot = result.snapshot && new FireCryptSnapshot(result.snapshot, this._crypto);\n      return result;\n    });\n  }\n}\n","export function patchFirebase() {\n  if (typeof require !== 'undefined') {\n    let numApisFound = 0;\n    try {\n      patchFirebaseDatabaseApi(require('firebase-admin'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    try {\n      patchFirebaseDatabaseApi(require('firebase'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    if (!numApisFound) throw new Error('No Firebase SDK detected.');\n  } else if (typeof firebase !== 'undefined') {  // eslint-disable-line no-negated-condition\n    /* globals firebase */\n    patchFirebaseDatabaseApi(firebase);\n  } else {\n    throw new Error('No Firebase SDK detected.');\n  }\n}\n\nfunction patchFirebaseDatabaseApi(fb) {\n  // We want to wrap all instances of the Firebase database() with FireCrypt.  These are always\n  // eventually instantiated via an App's database() function, so we'd like to override that.\n  // We issue a bogus initializeApp() call with no config and a unique app name to get at the App's\n  // prototype, and make sure not to instantiate any services on it (as that would fail).\n  const app = fb.initializeApp(undefined, 'firecrypt_init_patch');\n  const originalDatabase = app.constructor.prototype.database;\n  Object.defineProperty(app.constructor.prototype, 'database', {value() {\n    // The database() call caches databases by URL and can return the same instance on separate\n    // calls.  Ensure that there's a 1-to-1 correspondance between database instances and\n    // FireCrypt wrappers by associating a wrapper with its underlying database.\n    const db = originalDatabase.apply(this, arguments);\n    if (!db.firecrypt) {\n      // eslint-disable-next-line no-use-before-define\n      Object.defineProperty(db, 'firecrypt', {value: new FireCrypt(db)});\n    }\n    return db.firecrypt;\n  }});\n}\n\nif (typeof require !== 'undefined') {\n  if (typeof LRUCache === 'undefined') global.LRUCache = require('lru-cache');\n  if (typeof CryptoJS === 'undefined') global.CryptoJS = require('crypto-js/core');\n  require('crypto-js/enc-base64');\n  require('cryptojs-extension/build_node/siv');\n}\n\nCryptoJS.enc.Base64UrlSafe = {\n  stringify: CryptoJS.enc.Base64.stringify,\n  parse: CryptoJS.enc.Base64.parse,\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n};\n\nimport Crypto from './crypto';\nimport FireCryptReference from './FireCryptReference';\n\nclass FireCrypt {\n  constructor(db) {\n    const dbIsNonNullObject = typeof db === 'object' && db !== null;\n    if (!dbIsNonNullObject || typeof db.app !== 'object' || typeof db.ref !== 'function') {\n      throw new Error(\n        `Expected first argument passed to FireCrypt constructor to be a Firebase Database ` +\n        `instance, but got \"${db}\".`\n      );\n    }\n\n    this._db = db;\n    this._crypto = undefined;\n  }\n\n  _ensureEncryptionConfigured() {\n    if (typeof this._crypto === 'undefined') {\n      throw new Error('Encryption for this FireCrypt reference has not been configured yet.');\n    }\n  }\n\n  _setupAesSiv(key, checkValue) {\n    const siv = CryptoJS.SIV.create(CryptoJS.enc.Base64.parse(key));\n    const encryptString = (str) => {\n      return CryptoJS.enc.Base64UrlSafe.stringify(siv.encrypt(str));\n    };\n    const decryptString = (str) => {\n      const result = siv.decrypt(CryptoJS.enc.Base64UrlSafe.parse(str));\n      if (result === false) {\n        const e = new Error('Wrong decryption key');\n        e.firecrypt = 'WRONG_KEY';\n        throw e;\n      }\n      return CryptoJS.enc.Utf8.stringify(result);\n    };\n\n    this._crypto.setStringEncryptionFunctions(encryptString, decryptString);\n\n    if (checkValue) decryptString(checkValue);\n    return encryptString(CryptoJS.enc.Base64UrlSafe.stringify(CryptoJS.lib.WordArray.random(10)));\n  }\n\n  get app() {\n    return this._db.app;\n  }\n\n  configureEncryption(options = {}, specification = {}) {\n    if (typeof options !== 'object' || options === null) {\n      throw new Error(\n        `Expected second argument passed to configureEncryption() to be an object, but got ` +\n        `\"${options}\".`\n      );\n    } else if (typeof specification !== 'object' || specification === null) {\n      throw new Error(\n        `Expected third argument passed to configureEncryption() to be an object, but got ` +\n        `\"${specification}\".`\n      );\n    }\n\n    options.cacheSize = options.cacheSize || 5 * 1000 * 1000;\n    options.encryptionCacheSize = options.encryptionCacheSize || options.cacheSize;\n    options.decryptionCacheSize = options.decryptionCacheSize || options.cacheSize;\n\n    this._crypto = new Crypto(options, specification);\n\n    let result;\n\n    switch (options.algorithm) {\n      case 'aes-siv':\n        if (!options.key) throw new Error('You must specify a key to use AES encryption.');\n        result = this._setupAesSiv(options.key, options.keyCheckValue);\n        break;\n      case 'passthrough':\n        this._crypto.setStringEncryptionFunctions((str) => str, (str) => str);\n        break;\n      case 'none':\n        break;\n      default:\n        throw new Error('Unknown encryption algorithm \"' + options.algorithm + '\".');\n    }\n\n    // Make the encryption key check value available off of this FireCrypt instance and therefore\n    // off of admin.database().\n    this.encryptionKeyCheckValue = result;\n\n    return result;\n  }\n\n  goOnline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOnline();\n  }\n\n  goOffline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOffline();\n  }\n\n  ref(path) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof path !== 'undefined' && typeof path !== 'string') {\n      throw new Error(\n        `Expected first argument passed to ref() to be undefined or a string, but got \"${path}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.ref(path), this._crypto);\n  }\n\n  refFromURL(url) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof url !== 'string' || url.match(/^https:\\/\\/.*/g) === null) {\n      throw new Error(\n        `Expected first argument passed to refFromURL() to be a string URL, but got \"${url}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.refFromURL(url), this._crypto);\n  }\n}\n"],"names":["Crypto","options","spec","this","_spec","_cleanSpecification","_encryptString","_throwNotSetUpError","_decryptString","_patternRegexes","LRUCache","_encryptionCache","max","encryptionCacheSize","length","_computeCacheItemSize","_decryptionCache","decryptionCacheSize","def","path","Object","keys","const","key","encryptKey","Error","test","slice","charAt","$","e","firecrypt","value","setStringEncryptionFunctions","encryptString","decryptString","encryptPath","rules","let","i","encrypt","encryptRef","ref","encryptedPath","refToPath","root","child","join","decryptRef","changed","decryptedPathSegment","decrypt","specForPath","transformValue","transformType","transform","bind","transformTree","type","getType","transformedValue","hasOwnProperty","subValue","subDef","indexOf","keyParts","split","encrypted","pathStr","decodeURIComponent","toString","pattern","cacheKey","result","has","get","encryptValue","match","compilePattern","replace","placeholder","part","set","toUpperCase","decryptedString","Number","ignored","typeCode","encryptedString","Array","isArray","String","Boolean","regex","RegExp","FireCryptSnapshot","snap","crypto","_ref","_path","_snap","_crypto","prototypeAccessors","FireCryptReference","val","childPath","forEach","action","childSnap","exists","apply","arguments","hasChild","hasChildren","numChildren","toJSON","json","FireCryptQuery","query","order","originalRef","_query","_order","_originalRef","_wrapQueryCallback","callback","firecryptCallback","self","wrappedCallback","previousChildKey","call","on","eventType","cancelCallback","context","off","once","successCallback","failureCallback","then","orderByChild","_orderBy","orderByKey","orderByValue","startAt","_checkCanSort","undefined","_delegate","endAt","equalTo","by","keyEncrypted","limitToFirst","limitToLast","methodName","args","hasExtraKey","valueEncrypted","childKey","encryptedChildKey","subKey","childDef","childEncrypted","encryptedChildKeyCandidate","childrenKeysFromLib","FireCryptOnDisconnect","originalOnDisconnect","_originalOnDisconnect","_interceptOnDisconnectWrite","originalArguments","argIndex","prototype","update","remove","cancel","require","patchFirebaseDatabaseApi","fb","app","initializeApp","originalDatabase","constructor","database","defineProperty","db","FireCrypt","_interceptQuery","encryptedRef","_interceptWrite","staticAccessors","SERVER_TIMESTAMP",".sv","isEqual","parent","otherRef","push","promise","pushedRef","Promise","resolve","catch","finally","childrenKeys","originalMethod","argsArray","some","map","onDisconnect","transaction","originalCompute","originalOnComplete","error","committed","snapshot","global","CryptoJS","enc","Base64UrlSafe","stringify","Base64","parse","_map","_db","_ensureEncryptionConfigured","_setupAesSiv","checkValue","siv","SIV","create","str","Utf8","lib","WordArray","random","configureEncryption","specification","cacheSize","algorithm","keyCheckValue","encryptionKeyCheckValue","goOnline","goOffline","refFromURL","url","numApisFound","firebase"],"mappings":"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"}