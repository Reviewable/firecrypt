{"version":3,"file":"firecrypt.min.js","sources":["../../src/crypto.js","../../src/FireCryptSnapshot.js","../../src/FireCryptQuery.js","../../src/FireCryptOnDisconnect.js","../../src/FireCryptReference.js","../../src/firecrypt.js"],"sourcesContent":["export default class Crypto {\n  constructor(options, spec) {\n    this._spec = this._cleanSpecification(spec);\n    this._encryptString = this._throwNotSetUpError;\n    this._decryptString = this._throwNotSetUpError;\n\n    this._patternRegexes = {};\n\n    if (typeof LRUCache === 'function') {\n      this._encryptionCache = new LRUCache({\n        max: options.encryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n      this._decryptionCache = new LRUCache({\n        max: options.decryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n    }\n  }\n\n  _cleanSpecification(def, path) {\n    const keys = Object.keys(def);\n    for (const key of keys) {\n      if (key === '.encrypt') {\n        const encryptKeys = Object.keys(def[key]);\n        for (const encryptKey of encryptKeys) {\n          if (encryptKey !== 'key' && encryptKey !== 'value' && encryptKey !== 'few') {\n            throw new Error(`Illegal .encrypt subkey: ${encryptKey}`);\n          }\n        }\n      } else {\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x1f\\x7f\\x91\\x92.#[\\]/]/.test(key) || /[$]/.test(key.slice(1))) {\n          throw new Error(`Illegal character in specification key: ${key}`);\n        }\n        this._cleanSpecification(def[key], (path || '') + '/' + key);\n      }\n      switch (key.charAt(0)) {\n        case '$':\n          if (key === '$') break;\n          if (def.$) throw new Error('Multiple wildcard keys in specification at ' + path);\n          def.$ = def[key];\n          delete def[key];\n          break;\n        case '.':\n          if (key !== '.encrypt') throw new Error('Unknown directive at ' + path + ': ' + key);\n          break;\n      }\n    }\n    return def;\n  }\n\n  _throwNotSetUpError() {\n    const e = new Error('Encryption not set up');\n    e.firecrypt = 'NO_KEY';\n    throw e;\n  }\n\n  _computeCacheItemSize(value, key) {\n    return key.length + (typeof value === 'string' ? value.length : 4);\n  }\n\n  setStringEncryptionFunctions(encryptString, decryptString) {\n    this._encryptString = encryptString;\n    this._decryptString = decryptString;\n  }\n\n  encryptPath(path, def) {\n    def = def || this._spec.rules;\n    path = path.slice();\n    for (let i = 0; i < path.length; i++) {\n      def = def[path[i]] || def.$;\n      if (!def) break;\n      if (def['.encrypt'] && def['.encrypt'].key) {\n        path[i] = this.encrypt(path[i], 'string', def['.encrypt'].key);\n      }\n    }\n    return path;\n  }\n\n  encryptRef(ref, path) {\n    const encryptedPath = this.encryptPath(path || this.refToPath(ref));\n    return encryptedPath.length ? ref.root.child(encryptedPath.join('/')) : ref.root;\n  }\n\n  decryptRef(ref) {\n    const path = this.refToPath(ref, true);\n    let changed = false;\n    for (let i = 0; i < path.length; i++) {\n      const decryptedPathSegment = this.decrypt(path[i]);\n      if (decryptedPathSegment !== path[i]) {\n        path[i] = decryptedPathSegment;\n        changed = true;\n      }\n    }\n    return changed ? ref.root.child(path.join('/')) : ref;\n  }\n\n  specForPath(path, def) {\n    def = def || this._spec.rules;\n    for (let i = 0; def && i < path.length; i++) {\n      def = def[path[i]] || def.$;\n    }\n    return def;\n  }\n\n  transformValue(path, value, transformType) {\n    if (transformType !== 'encrypt' && transformType !== 'decrypt') {\n      throw new Error(\n        `Transform type must be either \"encrypt\" or \"decrypt\", but got \"${transformType}\".`\n      );\n    }\n    const transform =\n      transformType === 'encrypt' ? this.encrypt.bind(this) : this.decrypt.bind(this);\n    return this.transformTree(value, this.specForPath(path), transform);\n  }\n\n  transformTree(value, def, transform) {\n    if (!def) return value;\n    const type = this.getType(value);\n    let i;\n    if (/^(string|number|boolean)$/.test(type)) {\n      if (def['.encrypt'] && def['.encrypt'].value) {\n        value = transform(value, type, def['.encrypt'].value);\n      }\n    } else if (type === 'object' && value !== null) {\n      const transformedValue = {};\n      for (let key in value) {\n        if (!value.hasOwnProperty(key)) continue;\n        const subValue = value[key];\n        let subDef;\n        if (key.indexOf('/') >= 0) {  // for deep update keys\n          const keyParts = key.split('/');\n          subDef = def;\n          for (i = 0; i < keyParts.length; i++) {\n            if (transform === this.decrypt) {\n              keyParts[i] = this.decrypt(keyParts[i]);\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n            } else {\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n              if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n                keyParts[i] = transform(keyParts[i], 'string', subDef['.encrypt'].key);\n              }\n            }\n          }\n          key = keyParts.join('/');\n        } else if (transform === this.decrypt) {\n          key = this.decrypt(key);\n          subDef = def[key] || def.$;\n        } else {\n          subDef = def[key] || def.$;\n          if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n            key = transform(key, 'string', subDef['.encrypt'].key);\n          }\n        }\n        transformedValue[key] = this.transformTree(subValue, subDef, transform);\n      }\n      value = transformedValue;\n    } else if (type === 'array') {\n      if (!def.$) return value;\n      for (i = 0; i < value.length; i++) value[i] = this.transformTree(value[i], def.$, transform);\n    }\n    return value;\n  }\n\n  refToPath(ref, encrypted) {\n    const root = ref.root;\n    if (ref === root) return [];\n    const pathStr = decodeURIComponent(ref.toString().slice(root.toString().length));\n    if (!encrypted && pathStr && pathStr.charAt(0) !== '.' &&\n        /[\\x00-\\x1f\\x7f\\x91\\x92.#$[\\]]/.test(pathStr)) {  // eslint-disable-line no-control-regex\n      throw new Error(`Path contains invalid characters: ${pathStr}`);\n    }\n    return pathStr.split('/');\n  }\n\n  encrypt(value, type, pattern) {\n    let cacheKey;\n    if (this._encryptionCache) {\n      cacheKey = type.charAt(0) + pattern + '\\x91' + value;\n      if (this._encryptionCache.has(cacheKey)) return this._encryptionCache.get(cacheKey);\n    }\n    let result;\n    if (pattern === '#') {\n      result = this.encryptValue(value, type);\n    } else {\n      if (type !== 'string') {\n        throw new Error('Can\\'t encrypt a ' + type + ' using pattern [' + pattern + ']');\n      }\n      const match = value.match(this.compilePattern(pattern));\n      if (!match) {\n        throw new Error(\n          'Can\\'t encrypt as value doesn\\'t match pattern [' + pattern + ']: ' + value);\n      }\n      let i = 0;\n      result = pattern.replace(/[#.]/g, placeholder => {\n        let part = match[++i];\n        if (placeholder === '#') part = this.encryptValue(part, 'string');\n        return part;\n      });\n    }\n    if (this._encryptionCache) this._encryptionCache.set(cacheKey, result);\n    return result;\n  }\n\n  encryptValue(value, type) {\n    if (!/^(string|number|boolean)$/.test(type)) throw new Error('Can\\'t encrypt a ' + type);\n    switch (type) {\n      case 'number': value = '' + value; break;\n      case 'boolean': value = value ? 't' : 'f'; break;\n    }\n    return '\\x91' + type.charAt(0).toUpperCase() + this._encryptString(value) + '\\x92';\n  }\n\n  decrypt(value) {\n    if (this._decryptionCache && this._decryptionCache.has(value)) {\n      return this._decryptionCache.get(value);\n    }\n    if (!/\\x91/.test(value)) return value;\n    let result;\n    const match = value.match(/^\\x91(.)([^\\x92]*)\\x92$/);\n    if (match) {\n      const decryptedString = this._decryptString(match[2]);\n      switch (match[1]) {\n        case 'S':\n          result = decryptedString;\n          break;\n        case 'N':\n          result = Number(decryptedString);\n          // Check for NaN, since it's the only value where x !== x.\n          // eslint-disable-next-line no-self-compare\n          if (result !== result) throw new Error(`Invalid encrypted number: ${decryptedString}`);\n          break;\n        case 'B':\n          if (decryptedString === 't') result = true;\n          else if (decryptedString === 'f') result = false;\n          else throw new Error('Invalid encrypted boolean: ' + decryptedString);\n          break;\n        default:\n          throw new Error('Invalid encrypted value type code: ' + match[1]);\n      }\n    } else {\n      result = value.replace(/\\x91(.)([^\\x92]*)\\x92/g, (ignored, typeCode, encryptedString) => {\n        if (typeCode !== 'S') throw new Error('Invalid multi-segment encrypted value: ' + typeCode);\n        return this._decryptString(encryptedString);\n      });\n    }\n    if (this._decryptionCache) this._decryptionCache.set(value, result);\n    return result;\n  }\n\n  getType(value) {\n    if (Array.isArray(value)) return 'array';\n    let type = typeof value;\n    if (type === 'object') {\n      if (value instanceof String) type = 'string';\n      else if (value instanceof Number) type = 'number';\n      else if (value instanceof Boolean) type = 'boolean';\n    }\n    return type;\n  }\n\n  compilePattern(pattern) {\n    let regex = this._patternRegexes[pattern];\n    if (!regex) {\n      regex = this._patternRegexes[pattern] = new RegExp('^' + pattern\n        .replace(/\\./g, '#')\n        .replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&')  // escape regex chars\n        .replace(/#/g, '(.*?)') + '$');\n    }\n    return regex;\n  }\n}\n","import FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptSnapshot {\n  constructor(snap, crypto) {\n    this._ref = crypto.decryptRef(snap.ref);\n    this._path = crypto.refToPath(this._ref);\n    this._snap = snap;\n    this._crypto = crypto;\n  }\n\n  get key() {\n    return this._ref.key;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  val() {\n    return this._crypto.transformValue(this._path, this._snap.val(), 'decrypt');\n  }\n\n  child(childPath) {\n    return new FireCryptSnapshot(this._snap.child(childPath), this._crypto);\n  }\n\n  forEach(action) {\n    return this._snap.forEach((childSnap) => {\n      return action(new FireCryptSnapshot(childSnap), this._crypto);\n    });\n  }\n\n  exists() {\n    return this._snap.exists.apply(this._snap, arguments);\n  }\n\n  hasChild(childPath) {\n    childPath = this._crypto.encryptPath(\n      childPath.split('/'), this._crypto.specForPath(this._path)).join('/');\n    return this._snap.hasChild(childPath);\n  }\n\n  hasChildren() {\n    return this._snap.hasChildren.apply(this._snap, arguments);\n  }\n\n  numChildren() {\n    return this._snap.numChildren.apply(this._snap, arguments);\n  }\n\n  toJSON() {\n    const json = this._snap.toJSON.apply(this._snap, arguments);\n    return this._crypto.transformValue(this._path, json, 'decrypt');\n  }\n}\n","import FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptQuery {\n  constructor(query, order, originalRef, crypto) {\n    this._query = query;\n    this._order = order || {};\n    this._originalRef = originalRef || query;\n    this._crypto = crypto;\n  }\n\n  _wrapQueryCallback(callback) {\n    if (!callback || callback.firecryptCallback) return;\n    const self = this;\n    const wrappedCallback = function(snap, previousChildKey) {\n      return callback.call(  // eslint-disable-next-line no-invalid-this\n        this, new FireCryptSnapshot(snap, self._crypto), previousChildKey, self._crypto);\n    };\n    wrappedCallback.firecryptCallback = wrappedCallback;\n    callback.firecryptCallback = wrappedCallback;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._crypto.decryptRef(this._query.ref), this._crypto);\n  }\n\n  on(eventType, callback, cancelCallback, context) {\n    this._wrapQueryCallback(callback);\n    return this._originalRef.on.call(\n      this._query, eventType, callback.firecryptCallback, cancelCallback, context);\n  }\n\n  off(eventType, callback, context) {\n    if (callback && callback.firecryptCallback) callback = callback.firecryptCallback;\n    return this._originalRef.off.call(this._query, eventType, callback, context);\n  }\n\n  once(eventType, successCallback, failureCallback, context) {\n    this._wrapQueryCallback(successCallback);\n    return this._originalRef.once.call(\n      this._query, eventType, successCallback && successCallback.firecryptCallback, failureCallback,\n      context\n    ).then((snap) => {\n      return new FireCryptSnapshot(snap, this._crypto);\n    });\n  }\n\n  orderByChild(key) {\n    return this._orderBy('orderByChild', 'child', key);\n  }\n\n  orderByKey() {\n    return this._orderBy('orderByKey', 'key');\n  }\n\n  orderByValue() {\n    return this._orderBy('orderByValue', 'value');\n  }\n\n  startAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('startAt', arguments);\n  }\n\n  endAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('endAt', arguments);\n  }\n\n  equalTo(value, key) {\n    if (this._order[this._order.by + 'Encrypted']) {\n      value = this._crypto.encrypt(\n        value, this._crypto.getType(value), this._order[this._order.by + 'Encrypted']);\n    }\n    if (key !== undefined && this._order.keyEncrypted) {\n      key = this._crypto.encrypt(key, 'string', this._order.keyEncrypted);\n    }\n    return new FireCryptQuery(\n      this._originalRef.equalTo.call(this._query, value, key), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  limitToFirst() {\n    return this._delegate('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._delegate('limitToLast', arguments);\n  }\n\n  _delegate(methodName, args) {\n    return new FireCryptQuery(\n      this._originalRef[methodName].apply(this._query, args), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  _checkCanSort(hasExtraKey) {\n    const orderedAndEncrypted = this._order.by === 'key' ?\n      this._order.keyEncrypted :\n      this._order.valueEncrypted || hasExtraKey && this._order.keyEncrypted;\n    if (orderedAndEncrypted) throw new Error('Encrypted items cannot be ordered');\n  }\n\n  _orderBy(methodName, by, childKey) {\n    const def = this._crypto.specForPath(this._crypto.refToPath(this.ref));\n    const order = {by};\n\n    let encryptedChildKey;\n    if (def) {\n      const childPath = childKey && childKey.split('/');\n      for (const subKey in def) {\n        if (!def.hasOwnProperty(subKey)) continue;\n        const subDef = def[subKey];\n        if (subDef['.encrypt']) {\n          if (subDef['.encrypt'].key) order.keyEncrypted = subDef['.encrypt'].key;\n          if (subDef['.encrypt'].value) order.valueEncrypted = subDef['.encrypt'].value;\n        }\n        if (childKey) {\n          const childDef = this._crypto.specForPath(childPath, subDef);\n          if (childDef && childDef['.encrypt'] && childDef['.encrypt'].value) {\n            order.childEncrypted = childDef['.encrypt'].value;\n          }\n          const encryptedChildKeyCandidate = this._crypto.encryptPath(childPath, subDef).join('/');\n          if (encryptedChildKey && encryptedChildKeyCandidate !== encryptedChildKey) {\n            throw new Error(\n              'Incompatible encryption specifications for orderByChild(\"' + childKey + '\")');\n          }\n          encryptedChildKey = encryptedChildKeyCandidate;\n        }\n      }\n    }\n    if (childKey) {\n      return new FireCryptQuery(\n        this._originalRef[methodName].call(this._query, encryptedChildKey || childKey), order,\n        this._originalRef, this._crypto\n      );\n    }\n    return new FireCryptQuery(\n      this._originalRef[methodName].call(this._query), order, this._originalRef, this._crypto\n    );\n  }\n}\n","export default class FireCryptOnDisconnect {\n  constructor(path, originalOnDisconnect, crypto) {\n    this._path = path;\n    this._crypto = crypto;\n    this._originalOnDisconnect = originalOnDisconnect;\n  }\n\n  _interceptOnDisconnectWrite(methodName, originalArguments, argIndex) {\n    const self = this;\n\n    this[methodName] = function() {\n      const args = Array.prototype.slice.call(originalArguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = self._crypto.transformValue(self._path, args[argIndex], 'encrypt');\n      }\n\n      return self._originalOnDisconnect[methodName].apply(self._originalOnDisconnect, args);\n    };\n  }\n\n  set() {\n    return this._interceptOnDisconnectWrite('set', arguments, 0);\n  }\n\n  update() {\n    return this._interceptOnDisconnectWrite('update', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptOnDisconnectWrite('remove', arguments);\n  }\n\n  cancel() {\n    return this._interceptOnDisconnectWrite('cancel', arguments);\n  }\n}\n","import FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nlet childrenKeysFromLib;\ntry {\n  childrenKeysFromLib = require('firebase-childrenkeys');\n} catch (e) {\n  // Library is optional, so ignore any errors from failure to load it.\n}\n\nexport default class FireCryptReference {\n  constructor(ref, crypto) {\n    this._ref = ref;\n    this._crypto = crypto;\n  }\n\n  _interceptQuery(methodName, originalArguments) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const query = new FireCryptQuery(encryptedRef, {}, this._ref, this._crypto);\n    return query[methodName].apply(query, originalArguments);\n  }\n\n  _interceptWrite(methodName, originalArguments, argIndex) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n\n    const args = Array.prototype.slice.call(originalArguments);\n    if (argIndex >= 0 && argIndex < args.length) {\n      const path = this._crypto.refToPath(this._ref);\n      args[argIndex] = this._crypto.transformValue(path, args[argIndex], 'encrypt');\n    }\n\n    return this._ref[methodName].apply(encryptedRef, args);\n  }\n\n  /**\n   * Returns a placeholder value for auto-populating the current timestamp (time since the Unix\n   * epoch, in milliseconds) as determined by the Firebase servers.\n   * @return {Object} A timestamp placeholder value.\n   */\n  static get SERVER_TIMESTAMP() {\n    return {\n      '.sv': 'timestamp'\n    };\n  }\n\n  /**\n   * Returns the last part of this reference's path. The key of a root reference is `null`.\n   * @return {string|null} The last part this reference's path.\n   */\n  get key() {\n    return this._ref.key;\n  }\n\n  /**\n   * Returns just the path component of the reference's URL.\n   * @return {string} The path component of the Firebase URL wrapped by this reference.\n   */\n  get path() {\n    return decodeURIComponent(this._ref.toString()).slice(this._ref.root.toString().length - 1);\n  }\n\n  /**\n   * Returns a FireCryptReference at the same location as this query or reference.\n   * @return {FireCryptReference|null} A FireCryptReference at the same location as this query or\n   *     reference.\n   */\n  get ref() {\n    if (this._ref.isEqual(this._ref.ref)) return this;\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference reference to the root of the database.\n   * @return {FireCryptReference} The root reference of the database.\n   */\n  get root() {\n    if (this._ref.isEqual(this._ref.root)) return this;\n    return new FireCryptReference(this._ref.root, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference to the parent location of this reference. The parent of a root\n   * reference is `null`.\n   * @return {FireCryptReference|null} The parent location of this reference.\n   */\n  get parent() {\n    if (this._ref.parent === null) return null;\n    return new FireCryptReference(this._ref.parent, this._crypto);\n  }\n\n  /**\n   * Returns the FireCrypt instance associated with this reference.\n   * @return {FireCrypt} The FireCrypt instance associated with this reference.\n   */\n  get database() {\n    return this._ref.ref.database.firecrypt;\n  }\n\n  /**\n   * Creates a new FireCryptReference object on a child of this one.\n   * @param  {string} path The path to the desired child, relative to this reference.\n   * @return {FireCryptReference} The child reference.\n   */\n  child(path) {\n    return new FireCryptReference(this._ref.child(path), this._crypto);\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @return {Object} A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    return this._ref.toJSON();\n  }\n\n  /**\n   * Returns whether or not this FireCryptReference is equivalent to the provided\n   * FireCryptReference.\n   * @return {FireCryptReference} Another FireCryptReference instance against which to compare.\n   */\n  isEqual(otherRef) {\n    return this._ref.isEqual(otherRef._ref);\n  }\n\n  /**\n   * Stringifies the wrapped reference.\n   * @return {string} The Firebase URL wrapped by this FireCryptReference object.\n   */\n  toString() {\n    return decodeURIComponent(this._ref.toString());\n  }\n\n  push() {\n    const pushedRef = this.child(this._ref.push().key);\n\n    let promise;\n    if (typeof arguments[0] === 'undefined') {\n      // A bare pushed ref should also be thennable.\n      promise = Promise.resolve();\n    } else {\n      promise = pushedRef.set.apply(pushedRef, arguments);\n    }\n\n    pushedRef.then = promise.then.bind(promise);\n    pushedRef.catch = promise.catch.bind(promise);\n    if (promise.finally) pushedRef.finally = promise.finally.bind(promise);\n\n    return pushedRef;\n  }\n\n  set() {\n    return this._interceptWrite('set', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptWrite('remove', arguments);\n  }\n\n  update() {\n    return this._interceptWrite('update', arguments, 0);\n  }\n\n  childrenKeys() {\n    const originalMethod = this._ref.childrenKeys || childrenKeysFromLib;\n\n    if (typeof originalMethod !== 'function') {\n      throw new Error(\n        `childrenKeys() is not implemented. You must either provide a Firebase Database Reference\n        which implements childrenKeys() or npm install the firebase-children keys libary.`\n      );\n    }\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return originalMethod.apply(encryptedRef, [encryptedRef, ...arguments]).then((keys) => {\n      if (!keys.some((key) => /\\x91/.test(key))) {\n        return keys;\n      }\n      return keys.map(this._crypto.decrypt.bind(this._crypto));\n    });\n  }\n\n  onDisconnect() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return new FireCryptOnDisconnect(\n      encryptedRef, this._ref.onDisconnect.call(encryptedRef), this._crypto);\n  }\n\n  on() {\n    return this._interceptQuery('on', arguments);\n  }\n\n  off() {\n    return this._interceptQuery('off', arguments);\n  }\n\n  once() {\n    return this._interceptQuery('once', arguments);\n  }\n\n  orderByChild() {\n    return this._interceptQuery('orderByChild', arguments);\n  }\n\n  orderByKey() {\n    return this._interceptQuery('orderByKey', arguments);\n  }\n\n  orderByValue() {\n    return this._interceptQuery('orderByValue', arguments);\n  }\n\n  startAt() {\n    return this._interceptQuery('startAt', arguments);\n  }\n\n  endAt() {\n    return this._interceptQuery('endAt', arguments);\n  }\n\n  equalTo() {\n    return this._interceptQuery('equalTo', arguments);\n  }\n\n  limitToFirst() {\n    return this._interceptQuery('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._interceptQuery('limitToLast', arguments);\n  }\n\n  transaction() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const path = this._crypto.refToPath(this._ref);\n\n    const args = Array.prototype.slice.call(arguments);\n    const originalCompute = args[0];\n    args[0] = originalCompute && ((value) => {\n      value = this._crypto.transformValue(path, value, 'decrypt');\n      value = originalCompute(value);\n      value = this._crypto.transformValue(path, value, 'encrypt');\n      return value;\n    });\n    if (args.length > 1) {\n      const originalOnComplete = args[1];\n      args[1] = originalOnComplete && ((error, committed, snapshot) => {\n        return originalOnComplete(\n          error, committed, snapshot && new FireCryptSnapshot(snapshot, this._crypto));\n      });\n    }\n    return this._ref.transaction.apply(encryptedRef, args).then((result) => {\n      result.snapshot = result.snapshot && new FireCryptSnapshot(result.snapshot, this._crypto);\n      return result;\n    });\n  }\n}\n","export function patchFirebase() {\n  if (typeof require !== 'undefined') {\n    let numApisFound = 0;\n    try {\n      patchFirebaseDatabaseApi(require('firebase-admin'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    try {\n      patchFirebaseDatabaseApi(require('firebase'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    if (!numApisFound) throw new Error('No Firebase SDK detected.');\n  } else if (typeof firebase !== 'undefined') {  // eslint-disable-line no-negated-condition\n    /* globals firebase */\n    patchFirebaseDatabaseApi(firebase);\n  } else {\n    throw new Error('No Firebase SDK detected.');\n  }\n}\n\nfunction patchFirebaseDatabaseApi(fb) {\n  // We want to wrap all instances of the Firebase database() with FireCrypt.  These are always\n  // eventually instantiated via an App's database() function, so we'd like to override that.\n  // We issue a bogus initializeApp() call with no config and a unique app name to get at the App's\n  // prototype, and make sure not to instantiate any services on it (as that would fail).\n  const app = fb.initializeApp(undefined, 'firecrypt_init_patch');\n  const originalDatabase = app.constructor.prototype.database;\n  Object.defineProperty(app.constructor.prototype, 'database', {value() {\n    // The database() call caches databases by URL and can return the same instance on separate\n    // calls.  Ensure that there's a 1-to-1 correspondance between database instances and\n    // FireCrypt wrappers by associating a wrapper with its underlying database.\n    const db = originalDatabase.apply(this, arguments);\n    if (!db.firecrypt) {\n      // eslint-disable-next-line no-use-before-define\n      Object.defineProperty(db, 'firecrypt', {value: new FireCrypt(db)});\n    }\n    return db.firecrypt;\n  }});\n}\n\nif (typeof require !== 'undefined') {\n  if (typeof LRUCache === 'undefined') global.LRUCache = require('lru-cache');\n  if (typeof CryptoJS === 'undefined') global.CryptoJS = require('crypto-js/core');\n  require('crypto-js/enc-base64');\n  require('cryptojs-extension/build_node/siv');\n}\n\nCryptoJS.enc.Base64UrlSafe = {\n  stringify: CryptoJS.enc.Base64.stringify,\n  parse: CryptoJS.enc.Base64.parse,\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n};\n\nimport Crypto from './crypto';\nimport FireCryptReference from './FireCryptReference';\n\nclass FireCrypt {\n  constructor(db) {\n    const dbIsNonNullObject = typeof db === 'object' && db !== null;\n    if (!dbIsNonNullObject || typeof db.app !== 'object' || typeof db.ref !== 'function') {\n      throw new Error(\n        `Expected first argument passed to FireCrypt constructor to be a Firebase Database ` +\n        `instance, but got \"${db}\".`\n      );\n    }\n\n    this._db = db;\n    this._crypto = undefined;\n  }\n\n  _ensureEncryptionConfigured() {\n    if (typeof this._crypto === 'undefined') {\n      throw new Error('Encryption for this FireCrypt reference has not been configured yet.');\n    }\n  }\n\n  _setupAesSiv(key, checkValue) {\n    const siv = CryptoJS.SIV.create(CryptoJS.enc.Base64.parse(key));\n    const encryptString = (str) => {\n      return CryptoJS.enc.Base64UrlSafe.stringify(siv.encrypt(str));\n    };\n    const decryptString = (str) => {\n      const result = siv.decrypt(CryptoJS.enc.Base64UrlSafe.parse(str));\n      if (result === false) {\n        const e = new Error('Wrong decryption key');\n        e.firecrypt = 'WRONG_KEY';\n        throw e;\n      }\n      return CryptoJS.enc.Utf8.stringify(result);\n    };\n\n    this._crypto.setStringEncryptionFunctions(encryptString, decryptString);\n\n    if (checkValue) decryptString(checkValue);\n    return encryptString(CryptoJS.enc.Base64UrlSafe.stringify(CryptoJS.lib.WordArray.random(10)));\n  }\n\n  get app() {\n    return this._db.app;\n  }\n\n  configureEncryption(options = {}, specification = {}) {\n    if (typeof options !== 'object' || options === null) {\n      throw new Error(\n        `Expected second argument passed to configureEncryption() to be an object, but got ` +\n        `\"${options}\".`\n      );\n    } else if (typeof specification !== 'object' || specification === null) {\n      throw new Error(\n        `Expected third argument passed to configureEncryption() to be an object, but got ` +\n        `\"${specification}\".`\n      );\n    }\n\n    options.cacheSize = options.cacheSize || 5 * 1000 * 1000;\n    options.encryptionCacheSize = options.encryptionCacheSize || options.cacheSize;\n    options.decryptionCacheSize = options.decryptionCacheSize || options.cacheSize;\n\n    this._crypto = new Crypto(options, specification);\n\n    let result;\n\n    switch (options.algorithm) {\n      case 'aes-siv':\n        if (!options.key) throw new Error('You must specify a key to use AES encryption.');\n        result = this._setupAesSiv(options.key, options.keyCheckValue);\n        break;\n      case 'passthrough':\n        this._crypto.setStringEncryptionFunctions((str) => str, (str) => str);\n        break;\n      case 'none':\n        break;\n      default:\n        throw new Error('Unknown encryption algorithm \"' + options.algorithm + '\".');\n    }\n\n    // Make the encryption key check value available off of this FireCrypt instance and therefore\n    // off of admin.database().\n    this.encryptionKeyCheckValue = result;\n\n    return result;\n  }\n\n  goOnline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOnline();\n  }\n\n  goOffline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOffline();\n  }\n\n  ref(path) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof path !== 'undefined' && typeof path !== 'string') {\n      throw new Error(\n        `Expected first argument passed to ref() to be undefined or a string, but got \"${path}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.ref(path), this._crypto);\n  }\n\n  refFromURL(url) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof url !== 'string' || url.match(/^https:\\/\\/.*/g) === null) {\n      throw new Error(\n        `Expected first argument passed to refFromURL() to be a string URL, but got \"${url}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.refFromURL(url), this._crypto);\n  }\n}\n"],"names":["const","let","this","prototypeAccessors","e"],"mappings":"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"}