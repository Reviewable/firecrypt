{"version":3,"file":"firecrypt.min.js","sources":["src/crypto.js","src/FireCryptOnDisconnect.js","src/FireCryptReference.js","src/FireCryptSnapshot.js","src/FireCryptQuery.js","src/firecrypt.js"],"sourcesContent":["let _spec;\nlet _encryptionCache;\nlet _decryptionCache;\n\nexport function setSpec(spec) {\n  _spec = cleanSpecification(spec);\n};\n\nexport function setEncryptionCache(cache) {\n  _encryptionCache = cache;\n};\n\nexport function setDecryptionCache(cache) {\n  _decryptionCache = cache;\n};\n\nexport function cleanSpecification(def, path) {\n  var keys = Object.keys(def);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key === '.encrypt') {\n      var encryptKeys = Object.keys(def[key]);\n      for (var j = 0; j < encryptKeys.length; j++) {\n        var encryptKey = encryptKeys[j];\n        if (encryptKey !== 'key' && encryptKey !== 'value' && encryptKey !== 'few') {\n          throw new Error('Illegal .encrypt subkey: ' + encryptKeys[j]);\n        }\n      }\n    } else {\n      if (/[\\x00-\\x1f\\x7f\\x91\\x92\\.#\\[\\]/]/.test(key) || /[$]/.test(key.slice(1))) {\n        throw new Error('Illegal character in specification key: ' + key);\n      }\n      cleanSpecification(def[key], (path || '') + '/' + key);\n    }\n    switch (key.charAt(0)) {\n      case '$':\n        if (key === '$') break;\n        if (def.$) throw new Error('Multiple wildcard keys in specification at ' + path);\n        def.$ = def[key];\n        delete def[key];\n        break;\n      case '.':\n        if (key !== '.encrypt') throw new Error('Unknown directive at ' + path + ': ' + key);\n        break;\n    }\n  }\n  return def;\n};\n\nexport function throwNotSetUpError() {\n  var e = new Error('Encryption not set up');\n  e.firecrypt = 'NO_KEY';\n  throw e;\n};\n\nexport function computeCacheItemSize(value, key) {\n  return key.length + (typeof value === 'string' ? value.length : 4);\n};\n\nexport function encryptPath(path, def) {\n  def = def || _spec.rules;\n  path = path.slice();\n  for (var i = 0; i < path.length; i++) {\n    def = def[path[i]] || def.$;\n    if (!def) break;\n    if (def['.encrypt'] && def['.encrypt'].key) {\n      path[i] = encrypt(path[i], 'string', def['.encrypt'].key);\n    }\n  }\n  return path;\n};\n\nexport function encryptRef(ref, path) {\n  var encryptedPath = encryptPath(path || refToPath(ref));\n  return encryptedPath.length ? ref.root.child(encryptedPath.join('/')) : ref.root;\n};\n\nexport function decryptRef(ref) {\n  var path = refToPath(ref, true);\n  var changed = false;\n  for (var i = 0; i < path.length; i++) {\n    var decryptedPathSegment = decrypt(path[i]);\n    if (decryptedPathSegment !== path[i]) {\n      path[i] = decryptedPathSegment;\n      changed = true;\n    }\n  }\n  return changed ? ref.root.child(path.join('/')) : ref;\n};\n\nexport function specForPath(path, def) {\n  def = def || _spec.rules;\n  for (var i = 0; def && i < path.length; i++) {\n    def = def[path[i]] || def.$;\n  }\n  return def;\n};\n\nexport function transformValue(path, value, transform) {\n  return transformTree(value, specForPath(path), transform);\n};\n\nexport function transformTree(value, def, transform) {\n  if (!def) return value;\n  var type = getType(value);\n  var i;\n  if (/^(string|number|boolean)$/.test(type)) {\n    if (def['.encrypt'] && def['.encrypt'].value) {\n      value = transform(value, type, def['.encrypt'].value);\n    }\n  } else if (type === 'object' && value !== null) {\n    var transformedValue = {};\n    for (var key in value) {\n      if (!value.hasOwnProperty(key)) continue;\n      var subValue = value[key], subDef;\n      if (key.indexOf('/') >= 0) {  // for deep update keys\n        var keyParts = key.split('/');\n        subDef = def;\n        for (i = 0; i < keyParts.length; i++) {\n          if (transform === decrypt) {\n            keyParts[i] = decrypt(keyParts[i]);\n            subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n          } else {\n            subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n            if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n              keyParts[i] = transform(keyParts[i], 'string', subDef['.encrypt'].key);\n            }\n          }\n        }\n        key = keyParts.join('/');\n      } else {\n        if (transform === decrypt) {\n          key = decrypt(key);\n          subDef = def[key] || def.$;\n        } else {\n          subDef = def[key] || def.$;\n          if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n            key = transform(key, 'string', subDef['.encrypt'].key);\n          }\n        }\n      }\n      transformedValue[key] = transformTree(subValue, subDef, transform);\n    }\n    value = transformedValue;\n  } else if (type === 'array') {\n    if (!def.$) return value;\n    for (i = 0; i < value.length; i++) value[i] = transformTree(value[i], def.$, transform);\n  }\n  return value;\n};\n\nexport function refToPath(ref, encrypted) {\n  var root = ref.root;\n  if (ref === root) return [];\n  var pathStr = decodeURIComponent(ref.toString().slice(root.toString().length));\n  if (!encrypted && pathStr && pathStr.charAt(0) !== '.' &&\n      /[\\x00-\\x1f\\x7f\\x91\\x92\\.#$\\[\\]]/.test(pathStr)) {\n    throw new Error('Path contains invalid characters: ' + pathStr);\n  }\n  return pathStr.split('/');\n};\n\nexport function encrypt(value, type, pattern) {\n  var cacheKey;\n  if (_encryptionCache) {\n    cacheKey = type.charAt(0) + pattern + '\\x91' + value;\n    if (_encryptionCache.has(cacheKey)) return _encryptionCache.get(cacheKey);\n  }\n  var result;\n  if (pattern === '#') {\n    result = encryptValue(value, type);\n  } else {\n    if (type !== 'string') {\n      throw new Error('Can\\'t encrypt a ' + type + ' using pattern [' + pattern + ']');\n    }\n    var match = value.match(compilePattern(pattern));\n    if (!match) {\n      throw new Error(\n        'Can\\'t encrypt as value doesn\\'t match pattern [' + pattern + ']: ' + value);\n    }\n    var i = 0;\n    result = pattern.replace(/[#\\.]/g, function(placeholder) {\n      var part = match[++i];\n      if (placeholder === '#') part = encryptValue(part, 'string');\n      return part;\n    });\n  }\n  if (_encryptionCache) _encryptionCache.set(cacheKey, result);\n  return result;\n};\n\nexport function encryptValue(value, type) {\n  if (!/^(string|number|boolean)$/.test(type)) throw new Error('Can\\'t encrypt a ' + type);\n  switch (type) {\n    case 'number': value = '' + value; break;\n    case 'boolean': value = value ? 't' : 'f'; break;\n  }\n  return '\\x91' + type.charAt(0).toUpperCase() + encryptString(value) + '\\x92';\n};\n\nexport function decrypt(value) {\n  if (_decryptionCache && _decryptionCache.has(value)) return _decryptionCache.get(value);\n  if (!/\\x91/.test(value)) return value;\n  var result;\n  var match = value.match(/^\\x91(.)([^\\x92]*)\\x92$/);\n  if (match) {\n    var decryptedString = decryptString(match[2]);\n    switch (match[1]) {\n      case 'S':\n        result = decryptedString;\n        break;\n      case 'N':\n        result = Number(decryptedString);\n        // Check for NaN, since it's the only value where x !== x.\n        if (result !== result) throw new Error('Invalid encrypted number: ' + decryptedString);\n        break;\n      case 'B':\n        if (decryptedString === 't') result = true;\n        else if (decryptedString === 'f') result = false;\n        else throw new Error('Invalid encrypted boolean: ' + decryptedString);\n        break;\n      default:\n        throw new Error('Invalid encrypted value type code: ' + match[1]);\n    }\n  } else {\n    result = value.replace(/\\x91(.)([^\\x92]*)\\x92/g, function(match, typeCode, encryptedString) {\n      if (typeCode !== 'S') throw new Error('Invalid multi-segment encrypted value: ' + typeCode);\n      return decryptString(encryptedString);\n    });\n  }\n  if (_decryptionCache) _decryptionCache.set(value, result);\n  return result;\n};\n\nexport function getType(value) {\n  if (Array.isArray(value)) return 'array';\n  var type = typeof value;\n  if (type === 'object') {\n    if (value instanceof String) type = 'string';\n    else if (value instanceof Number) type = 'number';\n    else if (value instanceof Boolean) type = 'boolean';\n  }\n  return type;\n};\n\nvar patternRegexes = {};\nexport function compilePattern(pattern) {\n  var regex = patternRegexes[pattern];\n  if (!regex) {\n    regex = patternRegexes[pattern] = new RegExp('^' + pattern\n      .replace(/\\./g, '#')\n      .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')  // escape regex chars\n      .replace(/#/g, '(.*?)') + '$');\n  }\n  return regex;\n};\n","import * as crypto from './crypto';\n\nexport default class FireCryptOnDisconnect {\n  constructor(path, originalOnDisconnect) {\n    this._path = path;\n    this._originalOnDisconnect = originalOnDisconnect;\n\n    this._interceptOnDisconnectWrite('set', 0);\n    this._interceptOnDisconnectWrite('update', 0);\n    this._interceptOnDisconnectWrite('remove');\n    this._interceptOnDisconnectWrite('setWithPriority', 0);\n    this._interceptOnDisconnectWrite('cancel');\n  }\n\n  _interceptOnDisconnectWrite(methodName, argIndex) {\n    this[methodName] = function() {\n      const args = Array.prototype.slice.call(arguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = crypto.transformValue(this._path, args[argIndex], crypto.encrypt);\n      }\n\n      return this._originalOnDisconnect[methodName].apply(this._originalOnDisconnect, args);\n    };\n  }\n}\n","import * as crypto from './crypto';\nimport FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nexport default class FireCryptReference {\n  constructor(ref) {\n    this._ref = ref;\n\n    this._interceptPush();\n    this._interceptTransaction();\n    this._interceptOnDisconnect();\n\n    [\n      'on', 'off', 'once', 'orderByChild', 'orderByKey', 'orderByValue', 'startAt', 'endAt',\n      'equalTo', 'limitToFirst', 'limitToLast'\n    ].forEach((methodName) => {this._interceptQuery(methodName);});\n\n    this._interceptWrite('set', 0);\n    this._interceptWrite('remove');\n    this._interceptWrite('update', 0);\n    this._interceptWrite('setPriority');\n    this._interceptWrite('setWithPriority', 0);\n\n    if (ref.childrenKeys) {\n      this._interceptChildrenKeys(ref);\n    }\n  }\n\n  /**\n   * Returns a placeholder value for auto-populating the current timestamp (time since the Unix\n   * epoch, in milliseconds) as determined by the Firebase servers.\n   * @return {Object} A timestamp placeholder value.\n   */\n  static get SERVER_TIMESTAMP() {\n    return {\n      '.sv': 'timestamp'\n    };\n  }\n\n  /**\n   * Returns the last part of this reference's path. The key of a root reference is `null`.\n   * @return {string|null} The last part this reference's path.\n   */\n  get key() {\n    return this._ref.key;\n  }\n\n  /**\n   * Returns just the path component of the reference's URL.\n   * @return {string} The path component of the Firebase URL wrapped by this reference.\n   */\n  get path() {\n    return decodeURIComponent(this._ref.toString()).slice(this._ref.root.toString().length - 1);\n  }\n\n  /**\n   * Returns a FireCryptReference at the same location as this query or reference.\n   * @return {FireCryptReference|null} A FireCryptReference at the same location as this query or\n   *     reference.\n   */\n  get ref() {\n    if (this._ref.isEqual(this._ref.ref)) {\n      return this;\n    } else {\n      return new FireCryptReference(this._ref.ref);\n    }\n  }\n\n  /**\n   * Returns a FireCryptReference reference to the root of the database.\n   * @return {FireCryptReference} The root reference of the database.\n   */\n  get root() {\n    if (this._ref.isEqual(this._ref.root)) {\n      return this;\n    } else {\n      return new FireCryptReference(this._ref.root);\n    }\n  }\n\n  /**\n   * Returns a FireCryptReference to the parent location of this reference. The parent of a root\n   * reference is `null`.\n   * @return {FireCryptReference|null} The parent location of this reference.\n   */\n  get parent() {\n    if (this._ref.parent === null) {\n      return null;\n    } else {\n      return new FireCryptReference(this._ref.parent);\n    }\n  }\n\n  /**\n   * Creates a new FireCryptReference object on a child of this one.\n   * @param  {string} path The path to the desired child, relative to this reference.\n   * @return {FireCryptReference} The child reference.\n   */\n  child(path) {\n    return new FireCryptReference(this._ref.child(path));\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @return {Object} A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    return this._ref.toJSON();\n  }\n\n  /**\n   * Returns whether or not this FireCryptReference is equivalent to the provided FireCryptReference.\n   * @return {FireCryptReference} Another FireCryptReference instance against which to compare.\n   */\n  isEqual(otherRef) {\n    return this._ref.isEqual(otherRef._ref);\n  }\n\n  /**\n   * Stringifies the wrapped reference.\n   * @return {string} The Firebase URL wrapped by this FireCryptReference object.\n   */\n  toString() {\n    return decodeURIComponent(this._ref.toString());\n  }\n\n  _interceptPush() {\n    this.push = function() {\n      // push() delegates to set(), which will take care of encrypting the ref and the argument.\n      const pushedRef = this._ref.push.apply(this._ref, arguments);\n      const decryptedRef = new FireCryptReference(crypto.decryptRef(pushedRef));\n      decryptedRef.then = pushedRef.then;\n      decryptedRef.catch = pushedRef.catch;\n      if (pushedRef.finally) decryptedRef.finally = pushedRef.finally;\n      return decryptedRef;\n    };\n  }\n  \n  _interceptWrite(methodName, argIndex) {\n    this[methodName] = function() {\n      const encryptedRef = crypto.encryptRef(this._ref);\n      const path = crypto.refToPath(this._ref);\n  \n      const args = Array.prototype.slice.call(arguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = crypto.transformValue(path, args[argIndex], crypto.encrypt);\n      }\n  \n      return this._ref[methodName].apply(encryptedRef, args);\n    };\n  }\n  \n  _interceptChildrenKeys() {\n    this.childrenKeys = function() {\n      const encryptedRef = crypto.encryptRef(this._ref);\n      return this._ref.childrenKeys.apply(encryptedRef, arguments).then((keys) => {\n        if (!keys.some((key) => /\\x91/.test(key))) {\n          return keys;\n        }\n        return keys.map(crypto.decrypt);\n      });\n    };\n  }\n\n  _interceptOnDisconnect() {\n    this.onDisconnect = function() {\n      const encryptedRef = crypto.encryptRef(this._ref);\n      return new FireCryptOnDisconnect(encryptedRef, this._ref.onDisconnect.call(encryptedRef));\n    };\n  }\n  \n  _interceptQuery(methodName) {\n    this[methodName] = function() {\n      const encryptedRef = crypto.encryptRef(this._ref);\n      var query = new FireCryptQuery(encryptedRef, {}, this._ref);\n      return query[methodName].apply(query, arguments);\n    }\n  }\n\n  _interceptTransaction() {\n    this.transaction = function() {\n      var encryptedRef = crypto.encryptRef(this._ref);\n      var args = Array.prototype.slice.call(arguments);\n      var originalCompute = args[0];\n      args[0] = originalCompute && function(value) {\n        value = crypto.transformValue(path, value, crypto.decrypt);\n        value = originalCompute(value);\n        value = crypto.transformValue(path, value, crypto.encrypt);\n        return value;\n      };\n      if (args.length > 1) {\n        var originalOnComplete = args[1];\n        args[1] = originalOnComplete && function(error, committed, snapshot) {\n          return originalOnComplete(error, committed, snapshot && new FireCryptSnapshot(snapshot));\n        };\n      }\n      return this._ref.transaction.apply(encryptedRef, args).then(function(result) {\n        result.snapshot = result.snapshot && new FireCryptSnapshot(result.snapshot);\n        return result;\n      });\n    };\n  }\n}\n","import * as crypto from './crypto';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptSnapshot {\n  constructor(snap) {\n    this._ref = crypto.decryptRef(snap.ref);\n    this._path = crypto.refToPath(this._ref);\n    this._snap = snap;\n\n    this._delegateSnapshot('exists');\n    this._delegateSnapshot('toJSON');\n    this._delegateSnapshot('hasChildren');\n    this._delegateSnapshot('numChildren');\n    this._delegateSnapshot('getPriority');\n  }\n\n  _delegateSnapshot(methodName) {\n    this[methodName] = function() {\n      return this._snap[methodName].apply(this._snap, arguments);\n    };\n  }\n\n  get key() {\n    return this._ref.key;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._ref.ref);\n  }\n\n  val() {\n    return crypto.transformValue(this._path, this._snap.val(), crypto.decrypt);\n  }\n\n  child(childPath) {\n    return new FireCryptSnapshot(this._snap.child(childPath));\n  }\n\n  forEach(action) {\n    return this._snap.forEach(function(childSnap) {\n      return action(new FireCryptSnapshot(childSnap));\n    });\n  }\n\n  hasChild(childPath) {\n    childPath = crypto.encryptPath(childPath.split('/'), crypto.specForPath(this._path)).join('/');\n    return this._snap.hasChild(childPath);\n  }\n\n  exportVal() {\n    return crypto.transformValue(this._path, this._snap.exportVal(), crypto.decrypt);\n  }\n}\n","import * as crypto from './crypto';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptQuery {\n  constructor(query, order, originalRef) {\n    this._query = query;\n    this._order = order || {};\n    this._originalRef = originalRef || query;\n  }\n\n  get ref() {\n    return new FireCryptReference(crypto.decryptRef(this._query.ref));\n  }\n\n  on(eventType, callback, cancelCallback, context) {\n    wrapQueryCallback(callback);\n    return this._originalRef.on.call(\n      this._query, eventType, callback.firecryptCallback, cancelCallback, context);\n  }\n\n  off(eventType, callback, context) {\n    if (callback && callback.firecryptCallback) callback = callback.firecryptCallback;\n    return this._originalRef.off.call(this._query, eventType, callback, context);\n  }\n\n  once(eventType, successCallback, failureCallback, context) {\n    wrapQueryCallback(successCallback);\n    return this._originalRef.once.call(\n      this._query, eventType, successCallback && successCallback.firecryptCallback, failureCallback,\n      context\n    ).then((snap) => {\n      return new FireCryptSnapshot(snap);\n    });\n  }\n  \n  orderByChild(key) {\n    return this._orderBy('orderByChild', 'child', key);\n  }\n\n  orderByKey() {\n    return this._orderBy('orderByKey', 'key');\n  }\n\n  orderByValue() {\n    return this._orderBy('orderByValue', 'value');\n  }\n\n  orderByPriority() {\n    return this._orderBy('orderByPriority', 'priority');\n  }\n\n  startAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('startAt', arguments);\n  }\n\n  endAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('endAt', arguments);\n  }\n\n  equalTo(value, key) {\n    if (this._order[this._order.by + 'Encrypted']) {\n      value = crypto.encrypt(value, getType(value), this._order[this._order.by + 'Encrypted']);\n    }\n    if (key !== undefined && this._order.keyEncrypted) {\n      key = crypto.encrypt(key, 'string', this._order.keyEncrypted);\n    }\n    return new FireCryptQuery(this._originalRef.equalTo.call(this._query, value, key), this._order);\n  }\n\n  limitToFirst() {\n    return this._delegate('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._delegate('limitToLast', arguments);\n  }\n\n  limit() {\n    return this._delegate('limit', arguments);\n  }\n\n  _delegate(methodName, args) {\n    return new FireCryptQuery(this._originalRef[methodName].apply(this._query, args), this._order);\n  }\n\n  _checkCanSort(hasExtraKey) {\n    if (this._order.by === 'key' ?\n        this._order.keyEncrypted :\n        this._order.valueEncrypted || hasExtraKey && this._order.keyEncrypted) {\n      throw new Error('Encrypted items cannot be ordered');\n    }\n  }\n\n  _orderBy(methodName, by, childKey) {\n    var def = crypto.specForPath(crypto.refToPath(this.ref));\n    var order = {by: by}\n\n    var encryptedChildKey;\n    if (def) {\n      var childPath = childKey && childKey.split('/');\n      for (var subKey in def) {\n        if (!def.hasOwnProperty(subKey)) continue;\n        var subDef = def[subKey];\n        if (subDef['.encrypt']) {\n          if (subDef['.encrypt'].key) order.keyEncrypted = subDef['.encrypt'].key;\n          if (subDef['.encrypt'].value) order.valueEncrypted = subDef['.encrypt'].value;\n        }\n        if (childKey) {\n          var childDef = crypto.specForPath(childPath, subDef);\n          if (childDef && childDef['.encrypt'] && childDef['.encrypt'].value) {\n            order.childEncrypted = childDef['.encrypt'].value;\n          }\n          var encryptedChildKeyCandidate = crypto.encryptPath(childPath, subDef).join('/');\n          if (encryptedChildKey && encryptedChildKeyCandidate !== encryptedChildKey) {\n            throw new Error(\n              'Incompatible encryption specifications for orderByChild(\"' + childKey + '\")');\n          }\n          encryptedChildKey = encryptedChildKeyCandidate;\n        }\n      }\n    }\n    if (childKey) {\n      return new FireCryptQuery(\n        this._originalRef[methodName].call(this._query, encryptedChildKey || childKey), order);\n    } else {\n      return new FireCryptQuery(this._originalRef[methodName].call(this._query), order);\n    }\n  }\n}\n\nfunction wrapQueryCallback(callback) {\n  if (!callback || callback.firecryptCallback) return;\n  var wrappedCallback = function(snap, previousChildKey) {\n    return callback.call(this, new FireCryptSnapshot(snap), previousChildKey);\n  };\n  wrappedCallback.firecryptCallback = wrappedCallback;\n  callback.firecryptCallback = wrappedCallback;\n}\n","if (typeof require !== 'undefined') {\n  if (typeof LRUCache === 'undefined') global.LRUCache = require('lru-cache');\n  if (typeof CryptoJS === 'undefined') global.CryptoJS = require('crypto-js/core');\n  require('crypto-js/enc-base64');\n  require('cryptojs-extension/build_node/siv');\n}\n\nCryptoJS.enc.Base64UrlSafe = {\n  stringify: CryptoJS.enc.Base64.stringify,\n  parse: CryptoJS.enc.Base64.parse,\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'\n};\n\nimport * as crypto from './crypto';\nimport FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nlet encryptString;\nlet decryptString;\n\nexport default class FireCrypt {\n  constructor(db, options = {}, specification = {}) {\n    const dbIsNonNullObject = (typeof db === 'object' && db !== null);\n    if (!dbIsNonNullObject || typeof db.app !== 'object' || typeof db.ref !== 'function') {\n      throw new Error(\n        `Expected first argument passed to FireCrypt constructor to be a Firebase Database instance, \n        but got \"${db}\".`\n      );\n    } else if (typeof options !== 'object' || options === null) {\n      throw new Error(\n        `Expected second argument passed to FireCrypt constructor to be an object, but got \"${options}\".`\n      );\n    } else if (typeof specification !== 'object' || specification === null) {\n      throw new Error(\n        `Expected third argument passed to FireCrypt constructor to be an object, but got \"${specification}\".`\n      );\n    }\n\n    this._db = db;\n\n    options.cacheSize = options.cacheSize || 5 * 1000 * 1000;\n    options.encryptionCacheSize = options.encryptionCacheSize || options.cacheSize;\n    options.decryptionCacheSize = options.decryptionCacheSize || options.cacheSize;\n    encryptString = decryptString = crypto.throwNotSetUpError;\n    \n    if (typeof LRUCache === 'function') {\n      crypto.setEncryptionCache(new LRUCache({\n        max: options.encryptionCacheSize, length: crypto.computeCacheItemSize\n      }));\n      crypto.setDecryptionCache(new LRUCache({\n        max: options.decryptionCacheSize, length: crypto.computeCacheItemSize\n      }));\n    }\n\n    switch (options.algorithm) {\n      case 'aes-siv':\n        if (!options.key) throw new Error('You must specify a key to use AES encryption.');\n        this.encryptionKeyCheckValue = setupAesSiv(options.key, options.keyCheckValue);\n        break;\n      case 'passthrough':\n        encryptString = decryptString = (str) => str;\n        break;\n      case 'none':\n        break;\n      default:\n        throw new Error('Unknown encryption algorithm \"' + options.algorithm + '\".');\n    }\n\n    crypto.setSpec(specification);\n\n    return this;\n  }\n\n  get app() {\n    return this._db.app;\n  }\n\n  goOnline() {\n    return this._db.goOnline();\n  }\n\n  goOffline() {\n    return this._db.goOffline();\n  }\n\n  ref(pathOrRef) {\n    const pathOrRefIsNonemptyString = typeof pathOrRef === 'string' && pathOrRef !== '';\n    const pathOrRefIsNonNullObject = typeof pathOrRef === 'object' && pathOrRef !== null;\n    const pathOrRefIsFirebaseRef = pathOrRefIsNonNullObject && typeof pathOrRef.ref === 'object' && typeof pathOrRef.ref.transaction !== 'function';\n      \n    if (!pathOrRefIsNonemptyString && !pathOrRefIsFirebaseRef) {\n      throw new Error(\n        `Expected first argument passed to ref()to be a non-empty string or a Firebase Database\n        reference, but got \"${pathOrRef}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.ref(pathOrRef));\n  }\n}\n\nfunction setupAesSiv(key, checkValue) {\n  var siv = CryptoJS.SIV.create(CryptoJS.enc.Base64.parse(key));\n  encryptString = function(str) {\n    return CryptoJS.enc.Base64UrlSafe.stringify(siv.encrypt(str));\n  };\n  decryptString = function(str) {\n    var result = siv.decrypt(CryptoJS.enc.Base64UrlSafe.parse(str));\n    if (result === false) {\n      var e = new Error('Wrong decryption key');\n      e.firecrypt = 'WRONG_KEY';\n      throw e;\n    }\n    return CryptoJS.enc.Utf8.stringify(result);\n  };\n  if (checkValue) decryptString(checkValue);\n  return encryptString(CryptoJS.enc.Base64UrlSafe.stringify(CryptoJS.lib.WordArray.random(10)));\n}\n"],"names":["_spec","_encryptionCache","_decryptionCache","setSpec","spec","cleanSpecification","def","path","keys","Object","i","length","key","encryptKeys","j","encryptKey","Error","test","slice","charAt","$","throwNotSetUpError","e","firecrypt","computeCacheItemSize","value","encryptPath","rules","encrypt","encryptRef","ref","encryptedPath","refToPath","root","child","join","decryptRef","changed","decryptedPathSegment","decrypt","specForPath","transformValue","transform","transformTree","type","Array","isArray","String","Number","Boolean","getType","transformedValue","hasOwnProperty","subDef","subValue","indexOf","keyParts","split","encrypted","pathStr","decodeURIComponent","toString","pattern","cacheKey","result","has","get","encryptValue","match","regex","patternRegexes","RegExp","replace","compilePattern","placeholder","part","set","toUpperCase","encryptString","decryptedString","decryptString","typeCode","encryptedString","FireCryptOnDisconnect","originalOnDisconnect","_path","_originalOnDisconnect","_interceptOnDisconnectWrite","methodName","argIndex","args","prototype","call","arguments","crypto","this","apply","FireCryptReference","_ref","_interceptPush","_interceptTransaction","_interceptOnDisconnect","forEach","_interceptQuery","_interceptWrite","childrenKeys","_interceptChildrenKeys","isEqual","parent","toJSON","otherRef","push","pushedRef","decryptedRef","then","catch","finally","encryptedRef","some","map","onDisconnect","query","FireCryptQuery","transaction","originalCompute","originalOnComplete","error","committed","snapshot","FireCryptSnapshot","snap","_snap","_delegateSnapshot","val","childPath","action","childSnap","hasChild","exportVal","order","originalRef","_query","_order","_originalRef","eventType","callback","cancelCallback","context","on","firecryptCallback","off","successCallback","failureCallback","once","_orderBy","_checkCanSort","undefined","_delegate","by","keyEncrypted","equalTo","hasExtraKey","valueEncrypted","childKey","encryptedChildKey","subKey","childDef","childEncrypted","encryptedChildKeyCandidate","wrapQueryCallback","wrappedCallback","previousChildKey","require","LRUCache","global","CryptoJS","enc","Base64UrlSafe","Base64","stringify","parse","db","options","specification","app","cache","checkValue","siv","_db","cacheSize","encryptionCacheSize","decryptionCacheSize","algorithm","encryptionKeyCheckValue","keyCheckValue","SIV","create","str","Utf8","lib","WordArray","random","goOnline","goOffline","pathOrRef","pathOrRefIsNonemptyString","pathOrRefIsFirebaseRef"],"mappings":"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"}