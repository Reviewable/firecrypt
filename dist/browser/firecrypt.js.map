{"version":3,"file":"firecrypt.js","sources":["src/crypto.js","src/FireCryptSnapshot.js","src/FireCryptQuery.js","src/FireCryptOnDisconnect.js","src/FireCryptReference.js","src/firecrypt.js"],"sourcesContent":["export default class Crypto {\n  constructor(options, spec) {\n    this._spec = this._cleanSpecification(spec);\n    this._encryptString = this._throwNotSetUpError;\n    this._decryptString = this._throwNotSetUpError;\n\n    this._patternRegexes = {};\n\n    if (typeof LRUCache === 'function') {\n      this._encryptionCache = new LRUCache({\n        max: options.encryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n      this._decryptionCache = new LRUCache({\n        max: options.decryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n    }\n  }\n\n  _cleanSpecification(def, path) {\n    const keys = Object.keys(def);\n    for (const key of keys) {\n      if (key === '.encrypt') {\n        const encryptKeys = Object.keys(def[key]);\n        for (const encryptKey of encryptKeys) {\n          if (encryptKey !== 'key' && encryptKey !== 'value' && encryptKey !== 'few') {\n            throw new Error(`Illegal .encrypt subkey: ${encryptKey}`);\n          }\n        }\n      } else {\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x1f\\x7f\\x91\\x92.#[\\]/]/.test(key) || /[$]/.test(key.slice(1))) {\n          throw new Error(`Illegal character in specification key: ${key}`);\n        }\n        this._cleanSpecification(def[key], (path || '') + '/' + key);\n      }\n      switch (key.charAt(0)) {\n        case '$':\n          if (key === '$') break;\n          if (def.$) throw new Error('Multiple wildcard keys in specification at ' + path);\n          def.$ = def[key];\n          delete def[key];\n          break;\n        case '.':\n          if (key !== '.encrypt') throw new Error('Unknown directive at ' + path + ': ' + key);\n          break;\n      }\n    }\n    return def;\n  }\n\n  _throwNotSetUpError() {\n    const e = new Error('Encryption not set up');\n    e.firecrypt = 'NO_KEY';\n    throw e;\n  }\n\n  _computeCacheItemSize(value, key) {\n    return key.length + (typeof value === 'string' ? value.length : 4);\n  }\n\n  setStringEncryptionFunctions(encryptString, decryptString) {\n    this._encryptString = encryptString;\n    this._decryptString = decryptString;\n  }\n\n  encryptPath(path, def) {\n    def = def || this._spec.rules;\n    path = path.slice();\n    for (let i = 0; i < path.length; i++) {\n      def = def[path[i]] || def.$;\n      if (!def) break;\n      if (def['.encrypt'] && def['.encrypt'].key) {\n        path[i] = this.encrypt(path[i], 'string', def['.encrypt'].key);\n      }\n    }\n    return path;\n  }\n\n  encryptRef(ref, path) {\n    const encryptedPath = this.encryptPath(path || this.refToPath(ref));\n    return encryptedPath.length ? ref.root.child(encryptedPath.join('/')) : ref.root;\n  }\n\n  decryptRef(ref) {\n    const path = this.refToPath(ref, true);\n    let changed = false;\n    for (let i = 0; i < path.length; i++) {\n      const decryptedPathSegment = this.decrypt(path[i]);\n      if (decryptedPathSegment !== path[i]) {\n        path[i] = decryptedPathSegment;\n        changed = true;\n      }\n    }\n    return changed ? ref.root.child(path.join('/')) : ref;\n  }\n\n  specForPath(path, def) {\n    def = def || this._spec.rules;\n    for (let i = 0; def && i < path.length; i++) {\n      def = def[path[i]] || def.$;\n    }\n    return def;\n  }\n\n  transformValue(path, value, transformType) {\n    if (transformType !== 'encrypt' && transformType !== 'decrypt') {\n      throw new Error(\n        `Transform type must be either \"encrypt\" or \"decrypt\", but got \"${transformType}\".`\n      );\n    }\n    const transform =\n      transformType === 'encrypt' ? this.encrypt.bind(this) : this.decrypt.bind(this);\n    return this.transformTree(value, this.specForPath(path), transform);\n  }\n\n  transformTree(value, def, transform) {\n    if (!def) return value;\n    const type = this.getType(value);\n    let i;\n    if (/^(string|number|boolean)$/.test(type)) {\n      if (def['.encrypt'] && def['.encrypt'].value) {\n        value = transform(value, type, def['.encrypt'].value);\n      }\n    } else if (type === 'object' && value !== null) {\n      const transformedValue = {};\n      for (let key in value) {\n        if (!value.hasOwnProperty(key)) continue;\n        const subValue = value[key];\n        let subDef;\n        if (key.indexOf('/') >= 0) {  // for deep update keys\n          const keyParts = key.split('/');\n          subDef = def;\n          for (i = 0; i < keyParts.length; i++) {\n            if (transform === this.decrypt) {\n              keyParts[i] = this.decrypt(keyParts[i]);\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n            } else {\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n              if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n                keyParts[i] = transform(keyParts[i], 'string', subDef['.encrypt'].key);\n              }\n            }\n          }\n          key = keyParts.join('/');\n        } else if (transform === this.decrypt) {\n          key = this.decrypt(key);\n          subDef = def[key] || def.$;\n        } else {\n          subDef = def[key] || def.$;\n          if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n            key = transform(key, 'string', subDef['.encrypt'].key);\n          }\n        }\n        transformedValue[key] = this.transformTree(subValue, subDef, transform);\n      }\n      value = transformedValue;\n    } else if (type === 'array') {\n      if (!def.$) return value;\n      for (i = 0; i < value.length; i++) value[i] = this.transformTree(value[i], def.$, transform);\n    }\n    return value;\n  }\n\n  refToPath(ref, encrypted) {\n    const root = ref.root;\n    if (ref === root) return [];\n    const pathStr = decodeURIComponent(ref.toString().slice(root.toString().length));\n    if (!encrypted && pathStr && pathStr.charAt(0) !== '.' &&\n        /[\\x00-\\x1f\\x7f\\x91\\x92.#$[\\]]/.test(pathStr)) {  // eslint-disable-line no-control-regex\n      throw new Error(`Path contains invalid characters: ${pathStr}`);\n    }\n    return pathStr.split('/');\n  }\n\n  encrypt(value, type, pattern) {\n    let cacheKey;\n    if (this._encryptionCache) {\n      cacheKey = type.charAt(0) + pattern + '\\x91' + value;\n      if (this._encryptionCache.has(cacheKey)) return this._encryptionCache.get(cacheKey);\n    }\n    let result;\n    if (pattern === '#') {\n      result = this.encryptValue(value, type);\n    } else {\n      if (type !== 'string') {\n        throw new Error('Can\\'t encrypt a ' + type + ' using pattern [' + pattern + ']');\n      }\n      const match = value.match(this.compilePattern(pattern));\n      if (!match) {\n        throw new Error(\n          'Can\\'t encrypt as value doesn\\'t match pattern [' + pattern + ']: ' + value);\n      }\n      let i = 0;\n      result = pattern.replace(/[#.]/g, placeholder => {\n        let part = match[++i];\n        if (placeholder === '#') part = this.encryptValue(part, 'string');\n        return part;\n      });\n    }\n    if (this._encryptionCache) this._encryptionCache.set(cacheKey, result);\n    return result;\n  }\n\n  encryptValue(value, type) {\n    if (!/^(string|number|boolean)$/.test(type)) throw new Error('Can\\'t encrypt a ' + type);\n    switch (type) {\n      case 'number': value = '' + value; break;\n      case 'boolean': value = value ? 't' : 'f'; break;\n    }\n    return '\\x91' + type.charAt(0).toUpperCase() + this._encryptString(value) + '\\x92';\n  }\n\n  decrypt(value) {\n    if (this._decryptionCache && this._decryptionCache.has(value)) {\n      return this._decryptionCache.get(value);\n    }\n    if (!/\\x91/.test(value)) return value;\n    let result;\n    const match = value.match(/^\\x91(.)([^\\x92]*)\\x92$/);\n    if (match) {\n      const decryptedString = this._decryptString(match[2]);\n      switch (match[1]) {\n        case 'S':\n          result = decryptedString;\n          break;\n        case 'N':\n          result = Number(decryptedString);\n          // Check for NaN, since it's the only value where x !== x.\n          // eslint-disable-next-line no-self-compare\n          if (result !== result) throw new Error(`Invalid encrypted number: ${decryptedString}`);\n          break;\n        case 'B':\n          if (decryptedString === 't') result = true;\n          else if (decryptedString === 'f') result = false;\n          else throw new Error('Invalid encrypted boolean: ' + decryptedString);\n          break;\n        default:\n          throw new Error('Invalid encrypted value type code: ' + match[1]);\n      }\n    } else {\n      result = value.replace(/\\x91(.)([^\\x92]*)\\x92/g, (ignored, typeCode, encryptedString) => {\n        if (typeCode !== 'S') throw new Error('Invalid multi-segment encrypted value: ' + typeCode);\n        return this._decryptString(encryptedString);\n      });\n    }\n    if (this._decryptionCache) this._decryptionCache.set(value, result);\n    return result;\n  }\n\n  getType(value) {\n    if (Array.isArray(value)) return 'array';\n    let type = typeof value;\n    if (type === 'object') {\n      if (value instanceof String) type = 'string';\n      else if (value instanceof Number) type = 'number';\n      else if (value instanceof Boolean) type = 'boolean';\n    }\n    return type;\n  }\n\n  compilePattern(pattern) {\n    let regex = this._patternRegexes[pattern];\n    if (!regex) {\n      regex = this._patternRegexes[pattern] = new RegExp('^' + pattern\n        .replace(/\\./g, '#')\n        .replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&')  // escape regex chars\n        .replace(/#/g, '(.*?)') + '$');\n    }\n    return regex;\n  }\n}\n","import FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptSnapshot {\n  constructor(snap, crypto) {\n    this._ref = crypto.decryptRef(snap.ref);\n    this._path = crypto.refToPath(this._ref);\n    this._snap = snap;\n    this._crypto = crypto;\n  }\n\n  get key() {\n    return this._ref.key;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  val() {\n    return this._crypto.transformValue(this._path, this._snap.val(), 'decrypt');\n  }\n\n  child(childPath) {\n    return new FireCryptSnapshot(this._snap.child(childPath), this._crypto);\n  }\n\n  forEach(action) {\n    return this._snap.forEach((childSnap) => {\n      return action(new FireCryptSnapshot(childSnap), this._crypto);\n    });\n  }\n\n  exists() {\n    return this._snap.exists.apply(this._snap, arguments);\n  }\n\n  hasChild(childPath) {\n    childPath = this._crypto.encryptPath(\n      childPath.split('/'), this._crypto.specForPath(this._path)).join('/');\n    return this._snap.hasChild(childPath);\n  }\n\n  hasChildren() {\n    return this._snap.hasChildren.apply(this._snap, arguments);\n  }\n\n  numChildren() {\n    return this._snap.numChildren.apply(this._snap, arguments);\n  }\n\n  toJSON() {\n    const json = this._snap.toJSON.apply(this._snap, arguments);\n    return this._crypto.transformValue(this._path, json, 'decrypt');\n  }\n}\n","import FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptQuery {\n  constructor(query, order, originalRef, crypto) {\n    this._query = query;\n    this._order = order || {};\n    this._originalRef = originalRef || query;\n    this._crypto = crypto;\n  }\n\n  _wrapQueryCallback(callback) {\n    if (!callback || callback.firecryptCallback) return;\n    const self = this;\n    const wrappedCallback = function(snap, previousChildKey) {\n      return callback.call(  // eslint-disable-next-line no-invalid-this\n        this, new FireCryptSnapshot(snap, self._crypto), previousChildKey, self._crypto);\n    };\n    wrappedCallback.firecryptCallback = wrappedCallback;\n    callback.firecryptCallback = wrappedCallback;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._crypto.decryptRef(this._query.ref), this._crypto);\n  }\n\n  on(eventType, callback, cancelCallback, context) {\n    this._wrapQueryCallback(callback);\n    return this._originalRef.on.call(\n      this._query, eventType, callback.firecryptCallback, cancelCallback, context);\n  }\n\n  off(eventType, callback, context) {\n    if (callback && callback.firecryptCallback) callback = callback.firecryptCallback;\n    return this._originalRef.off.call(this._query, eventType, callback, context);\n  }\n\n  once(eventType, successCallback, failureCallback, context) {\n    this._wrapQueryCallback(successCallback);\n    return this._originalRef.once.call(\n      this._query, eventType, successCallback && successCallback.firecryptCallback, failureCallback,\n      context\n    ).then((snap) => {\n      return new FireCryptSnapshot(snap, this._crypto);\n    });\n  }\n\n  orderByChild(key) {\n    return this._orderBy('orderByChild', 'child', key);\n  }\n\n  orderByKey() {\n    return this._orderBy('orderByKey', 'key');\n  }\n\n  orderByValue() {\n    return this._orderBy('orderByValue', 'value');\n  }\n\n  startAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('startAt', arguments);\n  }\n\n  endAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('endAt', arguments);\n  }\n\n  equalTo(value, key) {\n    if (this._order[this._order.by + 'Encrypted']) {\n      value = this._crypto.encrypt(\n        value, this._crypto.getType(value), this._order[this._order.by + 'Encrypted']);\n    }\n    if (key !== undefined && this._order.keyEncrypted) {\n      key = this._crypto.encrypt(key, 'string', this._order.keyEncrypted);\n    }\n    return new FireCryptQuery(\n      this._originalRef.equalTo.call(this._query, value, key), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  limitToFirst() {\n    return this._delegate('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._delegate('limitToLast', arguments);\n  }\n\n  _delegate(methodName, args) {\n    return new FireCryptQuery(\n      this._originalRef[methodName].apply(this._query, args), this._order, this._originalRef,\n      this._crypto\n    );\n  }\n\n  _checkCanSort(hasExtraKey) {\n    const orderedAndEncrypted = this._order.by === 'key' ?\n      this._order.keyEncrypted :\n      this._order.valueEncrypted || hasExtraKey && this._order.keyEncrypted;\n    if (orderedAndEncrypted) throw new Error('Encrypted items cannot be ordered');\n  }\n\n  _orderBy(methodName, by, childKey) {\n    const def = this._crypto.specForPath(this._crypto.refToPath(this.ref));\n    const order = {by};\n\n    let encryptedChildKey;\n    if (def) {\n      const childPath = childKey && childKey.split('/');\n      for (const subKey in def) {\n        if (!def.hasOwnProperty(subKey)) continue;\n        const subDef = def[subKey];\n        if (subDef['.encrypt']) {\n          if (subDef['.encrypt'].key) order.keyEncrypted = subDef['.encrypt'].key;\n          if (subDef['.encrypt'].value) order.valueEncrypted = subDef['.encrypt'].value;\n        }\n        if (childKey) {\n          const childDef = this._crypto.specForPath(childPath, subDef);\n          if (childDef && childDef['.encrypt'] && childDef['.encrypt'].value) {\n            order.childEncrypted = childDef['.encrypt'].value;\n          }\n          const encryptedChildKeyCandidate = this._crypto.encryptPath(childPath, subDef).join('/');\n          if (encryptedChildKey && encryptedChildKeyCandidate !== encryptedChildKey) {\n            throw new Error(\n              'Incompatible encryption specifications for orderByChild(\"' + childKey + '\")');\n          }\n          encryptedChildKey = encryptedChildKeyCandidate;\n        }\n      }\n    }\n    if (childKey) {\n      return new FireCryptQuery(\n        this._originalRef[methodName].call(this._query, encryptedChildKey || childKey), order,\n        this._originalRef, this._crypto\n      );\n    }\n    return new FireCryptQuery(\n      this._originalRef[methodName].call(this._query), order, this._originalRef, this._crypto\n    );\n  }\n}\n","export default class FireCryptOnDisconnect {\n  constructor(path, originalOnDisconnect, crypto) {\n    this._path = path;\n    this._crypto = crypto;\n    this._originalOnDisconnect = originalOnDisconnect;\n  }\n\n  _interceptOnDisconnectWrite(methodName, originalArguments, argIndex) {\n    const self = this;\n\n    this[methodName] = function() {\n      const args = Array.prototype.slice.call(originalArguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = self._crypto.transformValue(self._path, args[argIndex], 'encrypt');\n      }\n\n      return self._originalOnDisconnect[methodName].apply(self._originalOnDisconnect, args);\n    };\n  }\n\n  set() {\n    return this._interceptOnDisconnectWrite('set', arguments, 0);\n  }\n\n  update() {\n    return this._interceptOnDisconnectWrite('update', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptOnDisconnectWrite('remove', arguments);\n  }\n\n  cancel() {\n    return this._interceptOnDisconnectWrite('cancel', arguments);\n  }\n}\n","import FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nlet childrenKeysFromLib;\ntry {\n  childrenKeysFromLib = require('firebase-childrenkeys');\n} catch (e) {\n  // Library is optional, so ignore any errors from failure to load it.\n}\n\nexport default class FireCryptReference {\n  constructor(ref, crypto) {\n    this._ref = ref;\n    this._crypto = crypto;\n  }\n\n  _interceptQuery(methodName, originalArguments) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const query = new FireCryptQuery(encryptedRef, {}, this._ref, this._crypto);\n    return query[methodName].apply(query, originalArguments);\n  }\n\n  _interceptWrite(methodName, originalArguments, argIndex) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n\n    const args = Array.prototype.slice.call(originalArguments);\n    if (argIndex >= 0 && argIndex < args.length) {\n      const path = this._crypto.refToPath(this._ref);\n      args[argIndex] = this._crypto.transformValue(path, args[argIndex], 'encrypt');\n    }\n\n    return this._ref[methodName].apply(encryptedRef, args);\n  }\n\n  /**\n   * Returns a placeholder value for auto-populating the current timestamp (time since the Unix\n   * epoch, in milliseconds) as determined by the Firebase servers.\n   * @return {Object} A timestamp placeholder value.\n   */\n  static get SERVER_TIMESTAMP() {\n    return {\n      '.sv': 'timestamp'\n    };\n  }\n\n  /**\n   * Returns the last part of this reference's path. The key of a root reference is `null`.\n   * @return {string|null} The last part this reference's path.\n   */\n  get key() {\n    return this._ref.key;\n  }\n\n  /**\n   * Returns just the path component of the reference's URL.\n   * @return {string} The path component of the Firebase URL wrapped by this reference.\n   */\n  get path() {\n    return decodeURIComponent(this._ref.toString()).slice(this._ref.root.toString().length - 1);\n  }\n\n  /**\n   * Returns a FireCryptReference at the same location as this query or reference.\n   * @return {FireCryptReference|null} A FireCryptReference at the same location as this query or\n   *     reference.\n   */\n  get ref() {\n    if (this._ref.isEqual(this._ref.ref)) return this;\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference reference to the root of the database.\n   * @return {FireCryptReference} The root reference of the database.\n   */\n  get root() {\n    if (this._ref.isEqual(this._ref.root)) return this;\n    return new FireCryptReference(this._ref.root, this._crypto);\n  }\n\n  /**\n   * Returns a FireCryptReference to the parent location of this reference. The parent of a root\n   * reference is `null`.\n   * @return {FireCryptReference|null} The parent location of this reference.\n   */\n  get parent() {\n    if (this._ref.parent === null) return null;\n    return new FireCryptReference(this._ref.parent, this._crypto);\n  }\n\n  /**\n   * Returns the FireCrypt instance associated with this reference.\n   * @return {FireCrypt} The FireCrypt instance associated with this reference.\n   */\n  get database() {\n    return this._ref.ref.database.firecrypt;\n  }\n\n  /**\n   * Creates a new FireCryptReference object on a child of this one.\n   * @param  {string} path The path to the desired child, relative to this reference.\n   * @return {FireCryptReference} The child reference.\n   */\n  child(path) {\n    return new FireCryptReference(this._ref.child(path), this._crypto);\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @return {Object} A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    return this._ref.toJSON();\n  }\n\n  /**\n   * Returns whether or not this FireCryptReference is equivalent to the provided\n   * FireCryptReference.\n   * @return {FireCryptReference} Another FireCryptReference instance against which to compare.\n   */\n  isEqual(otherRef) {\n    return this._ref.isEqual(otherRef._ref);\n  }\n\n  /**\n   * Stringifies the wrapped reference.\n   * @return {string} The Firebase URL wrapped by this FireCryptReference object.\n   */\n  toString() {\n    return decodeURIComponent(this._ref.toString());\n  }\n\n  push() {\n    const pushedRef = this.child(this._ref.push().key);\n\n    let promise;\n    if (typeof arguments[0] === 'undefined') {\n      // A bare pushed ref should also be thennable.\n      promise = Promise.resolve();\n    } else {\n      promise = pushedRef.set.apply(pushedRef, arguments);\n    }\n\n    pushedRef.then = promise.then.bind(promise);\n    pushedRef.catch = promise.catch.bind(promise);\n    if (promise.finally) pushedRef.finally = promise.finally.bind(promise);\n\n    return pushedRef;\n  }\n\n  set() {\n    return this._interceptWrite('set', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptWrite('remove', arguments);\n  }\n\n  update() {\n    return this._interceptWrite('update', arguments, 0);\n  }\n\n  childrenKeys() {\n    const originalMethod = this._ref.childrenKeys || childrenKeysFromLib;\n\n    if (typeof originalMethod !== 'function') {\n      throw new Error(\n        `childrenKeys() is not implemented. You must either provide a Firebase Database Reference\n        which implements childrenKeys() or npm install the firebase-children keys libary.`\n      );\n    }\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return originalMethod.apply(encryptedRef, [encryptedRef, ...arguments]).then((keys) => {\n      if (!keys.some((key) => /\\x91/.test(key))) {\n        return keys;\n      }\n      return keys.map(this._crypto.decrypt.bind(this._crypto));\n    });\n  }\n\n  onDisconnect() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return new FireCryptOnDisconnect(\n      encryptedRef, this._ref.onDisconnect.call(encryptedRef), this._crypto);\n  }\n\n  on() {\n    return this._interceptQuery('on', arguments);\n  }\n\n  off() {\n    return this._interceptQuery('off', arguments);\n  }\n\n  once() {\n    return this._interceptQuery('once', arguments);\n  }\n\n  orderByChild() {\n    return this._interceptQuery('orderByChild', arguments);\n  }\n\n  orderByKey() {\n    return this._interceptQuery('orderByKey', arguments);\n  }\n\n  orderByValue() {\n    return this._interceptQuery('orderByValue', arguments);\n  }\n\n  startAt() {\n    return this._interceptQuery('startAt', arguments);\n  }\n\n  endAt() {\n    return this._interceptQuery('endAt', arguments);\n  }\n\n  equalTo() {\n    return this._interceptQuery('equalTo', arguments);\n  }\n\n  limitToFirst() {\n    return this._interceptQuery('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._interceptQuery('limitToLast', arguments);\n  }\n\n  transaction() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const path = this._crypto.refToPath(this._ref);\n\n    const args = Array.prototype.slice.call(arguments);\n    const originalCompute = args[0];\n    args[0] = originalCompute && ((value) => {\n      value = this._crypto.transformValue(path, value, 'decrypt');\n      value = originalCompute(value);\n      value = this._crypto.transformValue(path, value, 'encrypt');\n      return value;\n    });\n    if (args.length > 1) {\n      const originalOnComplete = args[1];\n      args[1] = originalOnComplete && ((error, committed, snapshot) => {\n        return originalOnComplete(\n          error, committed, snapshot && new FireCryptSnapshot(snapshot, this._crypto));\n      });\n    }\n    return this._ref.transaction.apply(encryptedRef, args).then((result) => {\n      result.snapshot = result.snapshot && new FireCryptSnapshot(result.snapshot, this._crypto);\n      return result;\n    });\n  }\n}\n","export function patchFirebase() {\n  if (typeof require !== 'undefined') {\n    let numApisFound = 0;\n    try {\n      patchFirebaseDatabaseApi(require('firebase-admin'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    try {\n      patchFirebaseDatabaseApi(require('firebase'));\n      numApisFound++;\n    } catch (e) {/* ignore */}\n    if (!numApisFound) throw new Error('No Firebase SDK detected.');\n  } else if (typeof firebase !== 'undefined') {  // eslint-disable-line no-negated-condition\n    /* globals firebase */\n    patchFirebaseDatabaseApi(firebase);\n  } else {\n    throw new Error('No Firebase SDK detected.');\n  }\n}\n\nfunction patchFirebaseDatabaseApi(fb) {\n  // We want to wrap all instances of the Firebase database() with FireCrypt.  These are always\n  // eventually instantiated via an App's database() function, so we'd like to override that.\n  // We issue a bogus initializeApp() call with no config and a unique app name to get at the App's\n  // prototype, and make sure not to instantiate any services on it (as that would fail).\n  const app = fb.initializeApp(undefined, 'firecrypt_init_patch');\n  const originalDatabase = app.constructor.prototype.database;\n  Object.defineProperty(app.constructor.prototype, 'database', {value() {\n    // The database() call caches databases by URL and can return the same instance on separate\n    // calls.  Ensure that there's a 1-to-1 correspondance between database instances and\n    // FireCrypt wrappers by associating a wrapper with its underlying database.\n    const db = originalDatabase.apply(this, arguments);\n    if (!db.firecrypt) {\n      // eslint-disable-next-line no-use-before-define\n      Object.defineProperty(db, 'firecrypt', {value: new FireCrypt(db)});\n    }\n    return db.firecrypt;\n  }});\n}\n\nif (typeof require !== 'undefined') {\n  if (typeof LRUCache === 'undefined') global.LRUCache = require('lru-cache');\n  if (typeof CryptoJS === 'undefined') global.CryptoJS = require('crypto-js/core');\n  require('crypto-js/enc-base64');\n  require('cryptojs-extension/build_node/siv');\n}\n\nCryptoJS.enc.Base64UrlSafe = {\n  stringify: CryptoJS.enc.Base64.stringify,\n  parse: CryptoJS.enc.Base64.parse,\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n};\n\nimport Crypto from './crypto';\nimport FireCryptReference from './FireCryptReference';\n\nclass FireCrypt {\n  constructor(db) {\n    const dbIsNonNullObject = typeof db === 'object' && db !== null;\n    if (!dbIsNonNullObject || typeof db.app !== 'object' || typeof db.ref !== 'function') {\n      throw new Error(\n        `Expected first argument passed to FireCrypt constructor to be a Firebase Database ` +\n        `instance, but got \"${db}\".`\n      );\n    }\n\n    this._db = db;\n    this._crypto = undefined;\n  }\n\n  _ensureEncryptionConfigured() {\n    if (typeof this._crypto === 'undefined') {\n      throw new Error('Encryption for this FireCrypt reference has not been configured yet.');\n    }\n  }\n\n  _setupAesSiv(key, checkValue) {\n    const siv = CryptoJS.SIV.create(CryptoJS.enc.Base64.parse(key));\n    const encryptString = (str) => {\n      return CryptoJS.enc.Base64UrlSafe.stringify(siv.encrypt(str));\n    };\n    const decryptString = (str) => {\n      const result = siv.decrypt(CryptoJS.enc.Base64UrlSafe.parse(str));\n      if (result === false) {\n        const e = new Error('Wrong decryption key');\n        e.firecrypt = 'WRONG_KEY';\n        throw e;\n      }\n      return CryptoJS.enc.Utf8.stringify(result);\n    };\n\n    this._crypto.setStringEncryptionFunctions(encryptString, decryptString);\n\n    if (checkValue) decryptString(checkValue);\n    return encryptString(CryptoJS.enc.Base64UrlSafe.stringify(CryptoJS.lib.WordArray.random(10)));\n  }\n\n  get app() {\n    return this._db.app;\n  }\n\n  configureEncryption(options = {}, specification = {}) {\n    if (typeof options !== 'object' || options === null) {\n      throw new Error(\n        `Expected second argument passed to configureEncryption() to be an object, but got ` +\n        `\"${options}\".`\n      );\n    } else if (typeof specification !== 'object' || specification === null) {\n      throw new Error(\n        `Expected third argument passed to configureEncryption() to be an object, but got ` +\n        `\"${specification}\".`\n      );\n    }\n\n    options.cacheSize = options.cacheSize || 5 * 1000 * 1000;\n    options.encryptionCacheSize = options.encryptionCacheSize || options.cacheSize;\n    options.decryptionCacheSize = options.decryptionCacheSize || options.cacheSize;\n\n    this._crypto = new Crypto(options, specification);\n\n    let result;\n\n    switch (options.algorithm) {\n      case 'aes-siv':\n        if (!options.key) throw new Error('You must specify a key to use AES encryption.');\n        result = this._setupAesSiv(options.key, options.keyCheckValue);\n        break;\n      case 'passthrough':\n        this._crypto.setStringEncryptionFunctions((str) => str, (str) => str);\n        break;\n      case 'none':\n        break;\n      default:\n        throw new Error('Unknown encryption algorithm \"' + options.algorithm + '\".');\n    }\n\n    // Make the encryption key check value available off of this FireCrypt instance and therefore\n    // off of admin.database().\n    this.encryptionKeyCheckValue = result;\n\n    return result;\n  }\n\n  goOnline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOnline();\n  }\n\n  goOffline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOffline();\n  }\n\n  ref(path) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof path !== 'undefined' && typeof path !== 'string') {\n      throw new Error(\n        `Expected first argument passed to ref() to be undefined or a string, but got \"${path}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.ref(path), this._crypto);\n  }\n\n  refFromURL(url) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof url !== 'string' || url.match(/^https:\\/\\/.*/g) === null) {\n      throw new Error(\n        `Expected first argument passed to refFromURL() to be a string URL, but got \"${url}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.refFromURL(url), this._crypto);\n  }\n}\n"],"names":["const","this","let","prototypeAccessors"],"mappings":"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"}