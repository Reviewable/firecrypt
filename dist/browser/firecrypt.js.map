{"version":3,"file":"firecrypt.js","sources":["src/crypto.js","src/FireCryptSnapshot.js","src/FireCryptQuery.js","src/FireCryptOnDisconnect.js","src/FireCryptReference.js","src/firecrypt.js"],"sourcesContent":["export default class Crypto {\n  constructor(options, spec) {\n    this._spec = this._cleanSpecification(spec);\n    this._encryptString = this._throwNotSetUpError;\n    this._decryptString = this._throwNotSetUpError;\n\n    this._patternRegexes = {};\n\n    if (typeof LRUCache === 'function') {\n      this._encryptionCache = new LRUCache({\n        max: options.encryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n      this._decryptionCache = new LRUCache({\n        max: options.decryptionCacheSize,\n        length: this._computeCacheItemSize,\n      });\n    }\n  }\n\n  _cleanSpecification(def, path) {\n    var keys = Object.keys(def);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (key === '.encrypt') {\n        var encryptKeys = Object.keys(def[key]);\n        for (var j = 0; j < encryptKeys.length; j++) {\n          var encryptKey = encryptKeys[j];\n          if (encryptKey !== 'key' && encryptKey !== 'value' && encryptKey !== 'few') {\n            throw new Error('Illegal .encrypt subkey: ' + encryptKeys[j]);\n          }\n        }\n      } else {\n        if (/[\\x00-\\x1f\\x7f\\x91\\x92\\.#\\[\\]/]/.test(key) || /[$]/.test(key.slice(1))) {\n          throw new Error('Illegal character in specification key: ' + key);\n        }\n        this._cleanSpecification(def[key], (path || '') + '/' + key);\n      }\n      switch (key.charAt(0)) {\n        case '$':\n          if (key === '$') break;\n          if (def.$) throw new Error('Multiple wildcard keys in specification at ' + path);\n          def.$ = def[key];\n          delete def[key];\n          break;\n        case '.':\n          if (key !== '.encrypt') throw new Error('Unknown directive at ' + path + ': ' + key);\n          break;\n      }\n    }\n    return def;\n  }\n\n  _throwNotSetUpError() {\n    var e = new Error('Encryption not set up');\n    e.firecrypt = 'NO_KEY';\n    throw e;\n  }\n\n  _computeCacheItemSize(value, key) {\n    return key.length + (typeof value === 'string' ? value.length : 4);\n  }\n\n  setStringEncryptionFunctions(encryptString, decryptString) {\n    this._encryptString = encryptString;\n    this._decryptString = decryptString;\n  }\n\n  encryptPath(path, def) {\n    def = def || this._spec.rules;\n    path = path.slice();\n    for (var i = 0; i < path.length; i++) {\n      def = def[path[i]] || def.$;\n      if (!def) break;\n      if (def['.encrypt'] && def['.encrypt'].key) {\n        path[i] = this.encrypt(path[i], 'string', def['.encrypt'].key);\n      }\n    }\n    return path;\n  }\n\n  encryptRef(ref, path) {\n    var encryptedPath = this.encryptPath(path || this.refToPath(ref));\n    return encryptedPath.length ? ref.root.child(encryptedPath.join('/')) : ref.root;\n  }\n\n  decryptRef(ref) {\n    var path = this.refToPath(ref, true);\n    var changed = false;\n    for (var i = 0; i < path.length; i++) {\n      var decryptedPathSegment = this.decrypt(path[i]);\n      if (decryptedPathSegment !== path[i]) {\n        path[i] = decryptedPathSegment;\n        changed = true;\n      }\n    }\n    return changed ? ref.root.child(path.join('/')) : ref;\n  }\n\n  specForPath(path, def) {\n    def = def || this._spec.rules;\n    for (var i = 0; def && i < path.length; i++) {\n      def = def[path[i]] || def.$;\n    }\n    return def;\n  }\n\n  transformValue(path, value, transform) {\n    return this.transformTree(value, this.specForPath(path), transform);\n  }\n\n  transformTree(value, def, transform) {\n    if (!def) return value;\n    var type = this.getType(value);\n    var i;\n    if (/^(string|number|boolean)$/.test(type)) {\n      if (def['.encrypt'] && def['.encrypt'].value) {\n        value = transform(value, type, def['.encrypt'].value);\n      }\n    } else if (type === 'object' && value !== null) {\n      var transformedValue = {};\n      for (var key in value) {\n        if (!value.hasOwnProperty(key)) continue;\n        var subValue = value[key], subDef;\n        if (key.indexOf('/') >= 0) {  // for deep update keys\n          var keyParts = key.split('/');\n          subDef = def;\n          for (i = 0; i < keyParts.length; i++) {\n            if (transform === decrypt) {\n              keyParts[i] = this.decrypt(keyParts[i]);\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n            } else {\n              subDef = subDef && (subDef[keyParts[i]] || subDef.$);\n              if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n                keyParts[i] = transform(keyParts[i], 'string', subDef['.encrypt'].key);\n              }\n            }\n          }\n          key = keyParts.join('/');\n        } else {\n          if (transform === this.decrypt) {\n            key = this.decrypt(key);\n            subDef = def[key] || def.$;\n          } else {\n            subDef = def[key] || def.$;\n            if (subDef && subDef['.encrypt'] && subDef['.encrypt'].key) {\n              key = transform(key, 'string', subDef['.encrypt'].key);\n            }\n          }\n        }\n        transformedValue[key] = this.transformTree(subValue, subDef, transform);\n      }\n      value = transformedValue;\n    } else if (type === 'array') {\n      if (!def.$) return value;\n      for (i = 0; i < value.length; i++) value[i] = this.transformTree(value[i], def.$, transform);\n    }\n    return value;\n  }\n\n  refToPath(ref, encrypted) {\n    var root = ref.root;\n    if (ref === root) return [];\n    var pathStr = decodeURIComponent(ref.toString().slice(root.toString().length));\n    if (!encrypted && pathStr && pathStr.charAt(0) !== '.' &&\n        /[\\x00-\\x1f\\x7f\\x91\\x92\\.#$\\[\\]]/.test(pathStr)) {\n      throw new Error('Path contains invalid characters: ' + pathStr);\n    }\n    return pathStr.split('/');\n  }\n\n  encrypt(value, type, pattern) {\n    var cacheKey;\n    if (this._encryptionCache) {\n      cacheKey = type.charAt(0) + pattern + '\\x91' + value;\n      if (this._encryptionCache.has(cacheKey)) return this._encryptionCache.get(cacheKey);\n    }\n    var result;\n    if (pattern === '#') {\n      result = this.encryptValue(value, type);\n    } else {\n      if (type !== 'string') {\n        throw new Error('Can\\'t encrypt a ' + type + ' using pattern [' + pattern + ']');\n      }\n      var match = value.match(this.compilePattern(pattern));\n      if (!match) {\n        throw new Error(\n          'Can\\'t encrypt as value doesn\\'t match pattern [' + pattern + ']: ' + value);\n      }\n      var i = 0;\n      result = pattern.replace(/[#\\.]/g, function(placeholder) {\n        var part = match[++i];\n        if (placeholder === '#') part = this.encryptValue(part, 'string');\n        return part;\n      });\n    }\n    if (this._encryptionCache) this._encryptionCache.set(cacheKey, result);\n    return result;\n  }\n\n  encryptValue(value, type) {\n    if (!/^(string|number|boolean)$/.test(type)) throw new Error('Can\\'t encrypt a ' + type);\n    switch (type) {\n      case 'number': value = '' + value; break;\n      case 'boolean': value = value ? 't' : 'f'; break;\n    }\n    return '\\x91' + type.charAt(0).toUpperCase() + this._encryptString(value) + '\\x92';\n  }\n\n  decrypt(value) {\n    if (this._decryptionCache && this._decryptionCache.has(value)) return this._decryptionCache.get(value);\n    if (!/\\x91/.test(value)) return value;\n    var result;\n    var match = value.match(/^\\x91(.)([^\\x92]*)\\x92$/);\n    if (match) {\n      var decryptedString = this._decryptString(match[2]);\n      switch (match[1]) {\n        case 'S':\n          result = decryptedString;\n          break;\n        case 'N':\n          result = Number(decryptedString);\n          // Check for NaN, since it's the only value where x !== x.\n          if (result !== result) throw new Error('Invalid encrypted number: ' + decryptedString);\n          break;\n        case 'B':\n          if (decryptedString === 't') result = true;\n          else if (decryptedString === 'f') result = false;\n          else throw new Error('Invalid encrypted boolean: ' + decryptedString);\n          break;\n        default:\n          throw new Error('Invalid encrypted value type code: ' + match[1]);\n      }\n    } else {\n      result = value.replace(/\\x91(.)([^\\x92]*)\\x92/g, function(match, typeCode, encryptedString) {\n        if (typeCode !== 'S') throw new Error('Invalid multi-segment encrypted value: ' + typeCode);\n        return this._decryptString(encryptedString);\n      });\n    }\n    if (this._decryptionCache) this._decryptionCache.set(value, result);\n    return result;\n  }\n\n  getType(value) {\n    if (Array.isArray(value)) return 'array';\n    var type = typeof value;\n    if (type === 'object') {\n      if (value instanceof String) type = 'string';\n      else if (value instanceof Number) type = 'number';\n      else if (value instanceof Boolean) type = 'boolean';\n    }\n    return type;\n  }\n\n  compilePattern(pattern) {\n    var regex = this._patternRegexes[pattern];\n    if (!regex) {\n      regex = this._patternRegexes[pattern] = new RegExp('^' + pattern\n        .replace(/\\./g, '#')\n        .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')  // escape regex chars\n        .replace(/#/g, '(.*?)') + '$');\n    }\n    return regex;\n  }\n}\n","import FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptSnapshot {\n  constructor(snap, crypto) {\n    this._ref = crypto.decryptRef(snap.ref);\n    this._path = crypto.refToPath(this._ref);\n    this._snap = snap;\n    this._crypto = crypto;\n\n  }\n\n  get key() {\n    return this._ref.key;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._ref.ref, this._crypto);\n  }\n\n  val() {\n    return this._crypto.transformValue(this._path, this._snap.val(), this._crypto.decrypt.bind(this._crypto));\n  }\n\n  child(childPath) {\n    return new FireCryptSnapshot(this._snap.child(childPath), this._crypto);\n  }\n\n  forEach(action) {\n    return this._snap.forEach((childSnap) => {\n      return action(new FireCryptSnapshot(childSnap), this._crypto);\n    });\n  }\n\n  exists() {\n    return this._snap.exists.apply(this._snap, arguments)\n  }\n\n  hasChild(childPath) {\n    childPath = this._crypto.encryptPath(childPath.split('/'), this._crypto.specForPath(this._path)).join('/');\n    return this._snap.hasChild(childPath);\n  }\n\n  hasChildren() {\n    return this._snap.hasChildren.apply(this._snap, arguments)\n  }\n\n  numChildren() {\n    return this._snap.numChildren.apply(this._snap, arguments)\n  }\n\n  toJSON() {\n    const json = this._snap.toJSON.apply(this._snap, arguments);\n    return this._crypto.transformValue(this._path, json, this._crypto.decrypt.bind(this._crypto));\n  }\n}\n","import FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCryptQuery {\n  constructor(query, order, originalRef, crypto) {\n    this._query = query;\n    this._order = order || {};\n    this._originalRef = originalRef || query;\n    this._crypto = crypto;\n  }\n\n  _wrapQueryCallback(callback) {\n    if (!callback || callback.firecryptCallback) return;\n    const wrappedCallback = (snap, previousChildKey) => {\n      return callback.call(this, new FireCryptSnapshot(snap, this._crypto), previousChildKey, this._crypto);\n    };\n    wrappedCallback.firecryptCallback = wrappedCallback;\n    callback.firecryptCallback = wrappedCallback;\n  }\n\n  get ref() {\n    return new FireCryptReference(this._crypto.decryptRef(this._query.ref), this._crypto);\n  }\n\n  on(eventType, callback, cancelCallback, context) {\n    this._wrapQueryCallback(callback);\n    return this._originalRef.on.call(\n      this._query, eventType, callback.firecryptCallback, cancelCallback, context);\n  }\n\n  off(eventType, callback, context) {\n    if (callback && callback.firecryptCallback) callback = callback.firecryptCallback;\n    return this._originalRef.off.call(this._query, eventType, callback, context);\n  }\n\n  once(eventType, successCallback, failureCallback, context) {\n    this._wrapQueryCallback(successCallback);\n    return this._originalRef.once.call(\n      this._query, eventType, successCallback && successCallback.firecryptCallback, failureCallback,\n      context\n    ).then((snap) => {\n      return new FireCryptSnapshot(snap, this._crypto);\n    });\n  }\n  \n  orderByChild(key) {\n    return this._orderBy('orderByChild', 'child', key);\n  }\n\n  orderByKey() {\n    return this._orderBy('orderByKey', 'key');\n  }\n\n  orderByValue() {\n    return this._orderBy('orderByValue', 'value');\n  }\n\n  startAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('startAt', arguments);\n  }\n\n  endAt(value, key) {\n    this._checkCanSort(key !== undefined);\n    return this._delegate('endAt', arguments);\n  }\n\n  equalTo(value, key) {\n    if (this._order[this._order.by + 'Encrypted']) {\n      value = this._crypto.encrypt(value, this._crypto.getType(value), this._order[this._order.by + 'Encrypted']);\n    }\n    if (key !== undefined && this._order.keyEncrypted) {\n      key = this._crypto.encrypt(key, 'string', this._order.keyEncrypted);\n    }\n    return new FireCryptQuery(this._originalRef.equalTo.call(this._query, value, key), this._order, this._crypto);\n  }\n\n  limitToFirst() {\n    return this._delegate('limitToFirst', arguments);\n  }\n\n  limitToLast() {\n    return this._delegate('limitToLast', arguments);\n  }\n\n  limit() {\n    return this._delegate('limit', arguments);\n  }\n\n  _delegate(methodName, args) {\n    return new FireCryptQuery(this._originalRef[methodName].apply(this._query, args), this._order, this._crypto);\n  }\n\n  _checkCanSort(hasExtraKey) {\n    if (this._order.by === 'key' ?\n        this._order.keyEncrypted :\n        this._order.valueEncrypted || hasExtraKey && this._order.keyEncrypted) {\n      throw new Error('Encrypted items cannot be ordered');\n    }\n  }\n\n  _orderBy(methodName, by, childKey) {\n    const def = this._crypto.specForPath(this._crypto.refToPath(this.ref));\n    const order = {by: by}\n\n    let encryptedChildKey;\n    if (def) {\n      const childPath = childKey && childKey.split('/');\n      for (const subKey in def) {\n        if (!def.hasOwnProperty(subKey)) continue;\n        const subDef = def[subKey];\n        if (subDef['.encrypt']) {\n          if (subDef['.encrypt'].key) order.keyEncrypted = subDef['.encrypt'].key;\n          if (subDef['.encrypt'].value) order.valueEncrypted = subDef['.encrypt'].value;\n        }\n        if (childKey) {\n          const childDef = this._crypto.specForPath(childPath, subDef);\n          if (childDef && childDef['.encrypt'] && childDef['.encrypt'].value) {\n            order.childEncrypted = childDef['.encrypt'].value;\n          }\n          const encryptedChildKeyCandidate = this._crypto.encryptPath(childPath, subDef).join('/');\n          if (encryptedChildKey && encryptedChildKeyCandidate !== encryptedChildKey) {\n            throw new Error(\n              'Incompatible encryption specifications for orderByChild(\"' + childKey + '\")');\n          }\n          encryptedChildKey = encryptedChildKeyCandidate;\n        }\n      }\n    }\n    if (childKey) {\n      return new FireCryptQuery(\n        this._originalRef[methodName].call(this._query, encryptedChildKey || childKey), order, this._crypto);\n    } else {\n      return new FireCryptQuery(this._originalRef[methodName].call(this._query), order, this._crypto);\n    }\n  }\n}\n","export default class FireCryptOnDisconnect {\n  constructor(path, originalOnDisconnect, crypto) {\n    this._path = path;\n    this._crypto = crypto;\n    this._originalOnDisconnect = originalOnDisconnect;\n  }\n\n  _interceptOnDisconnectWrite(methodName, originalArguments, argIndex) {\n    const self = this;\n\n    this[methodName] = function() {\n      const args = Array.prototype.slice.call(originalArguments);\n      if (argIndex >= 0 && argIndex < args.length) {\n        args[argIndex] = self._crypto.transformValue(self._path, args[argIndex], self._crypto.encrypt.bind(self._crypto));\n      }\n\n      return self._originalOnDisconnect[methodName].apply(self._originalOnDisconnect, args);\n    };\n  }\n\n  set() {\n    return this._interceptOnDisconnectWrite('set', arguments, 0);\n  }\n\n  update() {\n    return this._interceptOnDisconnectWrite('update', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptOnDisconnectWrite('remove', arguments);\n  }\n\n  cancel() {\n    return this._interceptOnDisconnectWrite('cancel', arguments);\n  }\n}\n","import FireCryptQuery from './FireCryptQuery';\nimport FireCryptSnapshot from './FireCryptSnapshot';\nimport FireCryptOnDisconnect from './FireCryptOnDisconnect';\n\nexport default class FireCryptReference {\n  constructor(ref, crypto) {\n    this._ref = ref;\n    this._crypto = crypto;\n\n    [\n      'on', 'off', 'once', 'orderByChild', 'orderByKey', 'orderByValue', 'startAt', 'endAt',\n      'equalTo', 'limitToFirst', 'limitToLast'\n    ].forEach((methodName) => {this._interceptQuery(methodName);});\n  }\n\n  /**\n   * Returns a placeholder value for auto-populating the current timestamp (time since the Unix\n   * epoch, in milliseconds) as determined by the Firebase servers.\n   * @return {Object} A timestamp placeholder value.\n   */\n  static get SERVER_TIMESTAMP() {\n    return {\n      '.sv': 'timestamp'\n    };\n  }\n\n  /**\n   * Returns the last part of this reference's path. The key of a root reference is `null`.\n   * @return {string|null} The last part this reference's path.\n   */\n  get key() {\n    return this._ref.key;\n  }\n\n  /**\n   * Returns just the path component of the reference's URL.\n   * @return {string} The path component of the Firebase URL wrapped by this reference.\n   */\n  get path() {\n    return decodeURIComponent(this._ref.toString()).slice(this._ref.root.toString().length - 1);\n  }\n\n  /**\n   * Returns a FireCryptReference at the same location as this query or reference.\n   * @return {FireCryptReference|null} A FireCryptReference at the same location as this query or\n   *     reference.\n   */\n  get ref() {\n    if (this._ref.isEqual(this._ref.ref)) {\n      return this;\n    } else {\n      return new FireCryptReference(this._ref.ref, this._crypto);\n    }\n  }\n\n  /**\n   * Returns a FireCryptReference reference to the root of the database.\n   * @return {FireCryptReference} The root reference of the database.\n   */\n  get root() {\n    if (this._ref.isEqual(this._ref.root)) {\n      return this;\n    } else {\n      return new FireCryptReference(this._ref.root, this._crypto);\n    }\n  }\n\n  /**\n   * Returns a FireCryptReference to the parent location of this reference. The parent of a root\n   * reference is `null`.\n   * @return {FireCryptReference|null} The parent location of this reference.\n   */\n  get parent() {\n    if (this._ref.parent === null) {\n      return null;\n    } else {\n      return new FireCryptReference(this._ref.parent, this._crypto);\n    }\n  }\n\n  /**\n   * Creates a new FireCryptReference object on a child of this one.\n   * @param  {string} path The path to the desired child, relative to this reference.\n   * @return {FireCryptReference} The child reference.\n   */\n  child(path) {\n    return new FireCryptReference(this._ref.child(path), this._crypto);\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @return {Object} A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    return this._ref.toJSON();\n  }\n\n  /**\n   * Returns whether or not this FireCryptReference is equivalent to the provided FireCryptReference.\n   * @return {FireCryptReference} Another FireCryptReference instance against which to compare.\n   */\n  isEqual(otherRef) {\n    return this._ref.isEqual(otherRef._ref);\n  }\n\n  /**\n   * Stringifies the wrapped reference.\n   * @return {string} The Firebase URL wrapped by this FireCryptReference object.\n   */\n  toString() {\n    return decodeURIComponent(this._ref.toString());\n  }\n\n  push() {\n    const pushedRef = this._ref.push();\n\n    const args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] !== 'undefined') {\n      const encryptedRef = this._crypto.encryptRef(pushedRef);\n      const path = this._crypto.refToPath(pushedRef);\n\n      args[0] = this._crypto.transformValue(path, args[0], this._crypto.encrypt.bind(this._crypto));\n\n      pushedRef.set.apply(encryptedRef, args);\n    }\n\n    const decryptedPushedRef = new FireCryptReference(this._crypto.decryptRef(pushedRef), this._crypto);\n    decryptedPushedRef.then = pushedRef.then;\n    decryptedPushedRef.catch = pushedRef.catch;\n    if (pushedRef.finally) decryptedPushedRef.finally = pushedRef.finally;\n\n    return decryptedPushedRef;\n  }\n\n  _interceptWrite(methodName, originalArguments, argIndex) {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n\n    const args = Array.prototype.slice.call(originalArguments);\n    if (argIndex >= 0 && argIndex < args.length) {\n      const path = this._crypto.refToPath(this._ref);\n      args[argIndex] = this._crypto.transformValue(path, args[argIndex], this._crypto.encrypt.bind(this._crypto));\n    }\n\n    return this._ref[methodName].apply(encryptedRef, args);\n  }\n\n  set() {\n    return this._interceptWrite('set', arguments, 0);\n  }\n\n  remove() {\n    return this._interceptWrite('remove', arguments);\n  }\n\n  update() {\n    return this._interceptWrite('update', arguments, 0);\n  }\n\n  childrenKeys() {\n    if (!this._ref.childrenKeys) {\n      throw new Error('childrenKeys() is not implemented.');\n    }\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return this._ref.childrenKeys.apply(encryptedRef, arguments).then((keys) => {\n      if (!keys.some((key) => /\\x91/.test(key))) {\n        return keys;\n      }\n      return keys.map(this._crypto.decrypt.bind(this._crypto));\n    });\n  }\n\n  onDisconnect() {\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    return new FireCryptOnDisconnect(encryptedRef, this._ref.onDisconnect.call(encryptedRef), this._crypto);\n  }\n\n  _interceptQuery(methodName) {\n    const self = this;\n    this[methodName] = function() {\n      const encryptedRef = self._crypto.encryptRef(self._ref);\n      const query = new FireCryptQuery(encryptedRef, {}, self._ref, self._crypto);\n      return query[methodName].apply(query, arguments);\n    }\n  }\n\n  transaction() {\n    const self = this;\n\n    const encryptedRef = this._crypto.encryptRef(this._ref);\n    const path = this._crypto.refToPath(this._ref);\n\n    const args = Array.prototype.slice.call(arguments);\n    const originalCompute = args[0];\n    args[0] = originalCompute && function(value) {\n      value = self._crypto.transformValue(path, value, self._crypto.decrypt.bind(self._crypto));\n      value = originalCompute(value);\n      value = self._crypto.transformValue(path, value, self._crypto.encrypt.bind(self._crypto));\n      return value;\n    };\n    if (args.length > 1) {\n      const originalOnComplete = args[1];\n      args[1] = originalOnComplete && function(error, committed, snapshot) {\n        return originalOnComplete(error, committed, snapshot && new FireCryptSnapshot(snapshot));\n      };\n    }\n    return this._ref.transaction.apply(encryptedRef, args).then((result) => {\n      result.snapshot = result.snapshot && new FireCryptSnapshot(result.snapshot, this._crypto);\n      return result;\n    });\n  };\n}\n","if (typeof require !== 'undefined') {\n  if (typeof LRUCache === 'undefined') global.LRUCache = require('lru-cache');\n  if (typeof CryptoJS === 'undefined') global.CryptoJS = require('crypto-js/core');\n  require('crypto-js/enc-base64');\n  require('cryptojs-extension/build_node/siv');\n}\n\nCryptoJS.enc.Base64UrlSafe = {\n  stringify: CryptoJS.enc.Base64.stringify,\n  parse: CryptoJS.enc.Base64.parse,\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n};\n\nimport Crypto from './crypto';\nimport FireCryptReference from './FireCryptReference';\n\nexport default class FireCrypt {\n  constructor(db) {\n    const dbIsNonNullObject = typeof db === 'object' && db !== null;\n    if (!dbIsNonNullObject || typeof db.app !== 'object' || typeof db.ref !== 'function') {\n      throw new Error(\n        `Expected first argument passed to FireCrypt constructor to be a Firebase Database instance, \n        but got \"${db}\".`\n      );\n    }\n\n    this._db = db;\n    this._crypto = undefined;\n  }\n\n  _ensureEncryptionConfigured() {\n    if (typeof this._crypto === 'undefined') {\n      throw new Error('Encryption for this FireCrypt reference has not been configured yet.');\n    }\n  }\n\n  _setupAesSiv(key, checkValue) {\n    const siv = CryptoJS.SIV.create(CryptoJS.enc.Base64.parse(key));\n    const encryptString = (str) => {\n      return CryptoJS.enc.Base64UrlSafe.stringify(siv.encrypt(str));\n    };\n    const decryptString = (str) => {\n      const result = siv.decrypt(CryptoJS.enc.Base64UrlSafe.parse(str));\n      if (result === false) {\n        const e = new Error('Wrong decryption key');\n        e.firecrypt = 'WRONG_KEY';\n        throw e;\n      }\n      return CryptoJS.enc.Utf8.stringify(result);\n    };\n  \n    this._crypto.setStringEncryptionFunctions(encryptString, decryptString);\n  \n    if (checkValue) decryptString(checkValue);\n    return encryptString(CryptoJS.enc.Base64UrlSafe.stringify(CryptoJS.lib.WordArray.random(10)));\n  }\n\n  get app() {\n    this._ensureEncryptionConfigured();\n    return this._db.app;\n  }\n\n  configureEncryption(options = {}, specification = {}) {\n    if (typeof options !== 'object' || options === null) {\n      throw new Error(\n        `Expected second argument passed to configureEncryption() to be an object, but got \"${options}\".`\n      );\n    } else if (typeof specification !== 'object' || specification === null) {\n      throw new Error(\n        `Expected third argument passed to configureEncryption() to be an object, but got \"${specification}\".`\n      );\n    }\n\n    options.cacheSize = options.cacheSize || 5 * 1000 * 1000;\n    options.encryptionCacheSize = options.encryptionCacheSize || options.cacheSize;\n    options.decryptionCacheSize = options.decryptionCacheSize || options.cacheSize;\n\n    this._crypto = new Crypto(options, specification);\n\n    let result;\n\n    switch (options.algorithm) {\n      case 'aes-siv':\n        if (!options.key) throw new Error('You must specify a key to use AES encryption.');\n        result = this._setupAesSiv(options.key, options.keyCheckValue);\n        break;\n      case 'passthrough':\n        this._crypto.setStringEncryptionFunctions((str) => str, (str) => str);\n        break;\n      case 'none':\n        break;\n      default:\n        throw new Error('Unknown encryption algorithm \"' + options.algorithm + '\".');\n    }\n\n    return result;\n  }\n\n  goOnline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOnline();\n  }\n\n  goOffline() {\n    this._ensureEncryptionConfigured();\n    return this._db.goOffline();\n  }\n\n  ref(path) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof path !== 'undefined' && typeof path !== 'string') {\n      throw new Error(\n        `Expected first argument passed to ref() to be undefined or a string, but got \"${path}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.ref(path), this._crypto);\n  }\n\n  refFromURL(url) {\n    this._ensureEncryptionConfigured();\n\n    if (typeof url !== 'string' || url.match(/^https:\\/\\/.*/g) === null) {\n      throw new Error(\n        `Expected first argument passed to refFromURL() to be a string URL, but got \"${url}\".`\n      );\n    }\n\n    return new FireCryptReference(this._db.refFromURL(path), this._crypto);\n  }\n}\n"],"names":["Crypto","constructor","options","spec","_spec","_cleanSpecification","_encryptString","_throwNotSetUpError","_decryptString","_patternRegexes","LRUCache","_encryptionCache","max","encryptionCacheSize","length","_computeCacheItemSize","_decryptionCache","decryptionCacheSize","def","path","keys","Object","i","key","encryptKeys","j","encryptKey","Error","test","slice","charAt","$","e","firecrypt","value","setStringEncryptionFunctions","encryptString","decryptString","encryptPath","rules","encrypt","encryptRef","ref","encryptedPath","refToPath","root","child","join","decryptRef","changed","decryptedPathSegment","decrypt","specForPath","transformValue","transform","transformTree","type","getType","transformedValue","hasOwnProperty","subValue","subDef","indexOf","keyParts","split","encrypted","pathStr","decodeURIComponent","toString","pattern","cacheKey","has","get","result","encryptValue","match","compilePattern","replace","placeholder","part","set","toUpperCase","decryptedString","Number","typeCode","encryptedString","Array","isArray","String","Boolean","regex","RegExp","FireCryptSnapshot","snap","crypto","_ref","_path","_snap","_crypto","FireCryptReference","val","bind","childPath","forEach","action","childSnap","exists","apply","arguments","hasChild","hasChildren","numChildren","toJSON","json","FireCryptQuery","query","order","originalRef","_query","_order","_originalRef","_wrapQueryCallback","callback","firecryptCallback","wrappedCallback","previousChildKey","call","on","eventType","cancelCallback","context","off","once","successCallback","failureCallback","then","orderByChild","_orderBy","orderByKey","orderByValue","startAt","_checkCanSort","undefined","_delegate","endAt","equalTo","by","keyEncrypted","limitToFirst","limitToLast","limit","methodName","args","hasExtraKey","valueEncrypted","childKey","encryptedChildKey","subKey","childDef","childEncrypted","encryptedChildKeyCandidate","FireCryptOnDisconnect","originalOnDisconnect","_originalOnDisconnect","_interceptOnDisconnectWrite","originalArguments","argIndex","self","prototype","update","remove","cancel","_interceptQuery","SERVER_TIMESTAMP","isEqual","parent","otherRef","push","pushedRef","encryptedRef","decryptedPushedRef","catch","finally","_interceptWrite","childrenKeys","some","map","onDisconnect","transaction","originalCompute","originalOnComplete","error","committed","snapshot","require","global","CryptoJS","enc","Base64UrlSafe","stringify","Base64","parse","_map","FireCrypt","db","dbIsNonNullObject","app","_db","_ensureEncryptionConfigured","_setupAesSiv","checkValue","siv","SIV","create","str","Utf8","lib","WordArray","random","configureEncryption","specification","cacheSize","algorithm","keyCheckValue","goOnline","goOffline","refFromURL","url"],"mappings":"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"}